%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: main.dvi
%%CreationDate: Thu May 26 11:54:44 2011
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: LMSans10-Bold LMRoman12-Regular LMMathItalic10-Regular
%%+ LMMathSymbols8-Regular LMRoman8-Regular LMRoman10-Regular
%%+ LMMathSymbols10-Regular LMRoman10-Bold LMMathItalic8-Regular
%%+ LMMathExtension10-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips main.dvi -o main.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2011.05.26:1154
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 90 2009-01-30 10:58:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.02, 2009/01/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next ED 			% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge { 
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  GetEdgeA GetEdgeB GetArmA GetArmB mark 
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  GetEdgeA GetArmA 
  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
  GetEdgeB 
  mark 
  xB1 yB1 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Created the     : Sat 20 March 2004
% Last Mod        : $Date: 2009/08/27 $
% Version         : 0.5 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 107 2009-03-12 17:25:46Z herbert $
% PostScript prologue for pstricks-add.tex.
% Version 0.21, 2008/10/15
% For distribution, see pstricks.tex.
%
%       HISTORY -> see file Changes
%
/tx@addDict 410 dict def tx@addDict begin
%%
123 srand 			   	% set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro


%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A2255C2C4C4D9E02626F0B4DF1B646DCBC0A6BFF
8EF29877FA968660BE139D8210CEFCD0D24E2C9976490B46BE7CBE8C1C475F88
95C6DDCECED8989E2AF9133ECE53E795B85E6800992BC331A4199A189ACFE5B8
DEB2182D7A5B4CCD3E9946F115492C8F03055C82927FFAFA6E43AB2423BC4874
E464ADB3D3F07FA22542322B7BEE5EF03A34FD5F89F09B25F78633F8D269EB8B
F7FB2277C280DD664B7470201E0B68633EB54DE3215CD1B5C3FC0318D13CF485
B3CAE0E09B8FB8BD66BF548F6A0B8DE645BE6F8F76FC287714FFAC1C08144A12
955053DAD310C9794A50B92550102D37B167BD5E13490703F1F12484B1F15B5F
FB5FEEFA7CF513353CCEF91AF0006F6DAF499CDD7B41ACB0633E26D99F55D677
D0FB6917642559E4C206881B586AC9F4EA6DCE202F7C55575F5397E8B9CD2AC1
8E7762AA25B8C3A3215890547EB22A1F4ED4BB16D893FD445372221B94772419
B9031E0AB4D03F69CC905D8513C35987F2BACB12C8A5FC2FFB5E61FA67742CE7
54A151C57D50149AB1CFCBE0001D726142104C888457C5ACB8F42AC089BF36C3
9F920249420A12B266CE1C3E4A61EB5F63791B40A894958D4FBAA4ED850CD645
8B7E2E1145363644836A76048B7F91AF0887680E18F2BB3C4EE97291EB957B03
86432B4E0B22F2ED0950575CD8D893D53870D7A33AA51CEA3B091906DFEDECD7
1E15C0B61371EFD691BE62B4F7684BAE42AA869B73751599956D25DC8E247948
9818D547BE92641CCC26568F78981B480F94067EAA4F09D5A92A1A33DBB788A3
B7727D5253D514CC938B44A4BFEA424EEE46A1A6CD989423CAF0007D164B0E38
4D1726BC0512DA9EA3BEA2D7252233DC3FBA09FF67011C5DB0218F3DA2F2D6C5
E61D1869052592E8CC3FE63DFCE14E4C88638CEC85315913100C26E0FC70F24D
7DF379D823D51FDA6A0D68FD963ED4C1A5E1F9229A52CB2B3CFD0B379CAFDFA7
6CFD31DFC22CA813B1A88058A09C815E89935C5E23D26B925CA8417B12429DF0
B58CF7B66F53BA267C707DB96BC2C4563C7D806684CCCADD4BD674A4549FB171
F731680570BC7EFC996385B46779BE1C88625E563C56A57337EE9948871A2EBA
8078D8DC91E8B54C5C63DB5CFB02CC8BF161C0C5DB416E2626B9A501AB677E12
C3F2CDCC146F391A162050BB7D13FAFB59C0085E3A12A15B868E5906D063754C
5E0A7F107CB4B944188EC5F4365FB128E58AC37401456DBF53DFF0B192337818
91497FEF7EEBFFFE4171E2FAD7530CDD0E482470BCEEC7B8EFAB3A1B8176805A
A0DFA05112ADBB921C9E7FB298A96DA2A9D404179EDEFF6BBD5FD1C775DE8861
FFC8A4441EBB47941BF9E815AC94786FEB86C92D9C16A16C0308D91B302CB40D
462CE0F58FC7BCE74D29D4AB7C53218FB581DEEAEA7F60753FCEBE6A82E0DE81
F1B020337E9750048860D262C9C4416EB59E3F2DD5915208308FDA1FDC3AC8D8
92B37DE99DA2F390F5E104511BDFB873D1B8AA2024AEEB1633E0AA97B07F75D4
D4F0EA7E134CF82BB1501E890E36B6FD72E80265FF9ECECF59DD3C56258E4F22
915C6710133DEBE042054872E7DF523EB7FFD97AB3CA85098DE88226E5E54FE5
3EF17FE5F8F7D2D5F67BF34B66EE6ADA0B856C5D0CF5A5F248ABE3D7C0AD6BB9
F67C7031BC125B9A872DD00E91F893357F50C5E0F59E80EFB77DF7D5AF6E33EF
0E4C6595952E99F5E86C0D4E5A9D3163EC5C8153F1458FE3217F32CE48807B4F
17F57E1B11DA36252F8535FDB276A4861E4E17368458DBA3C9579933EFC07362
28DDBF9DE9931018B777846F5ECC2BB3EF1AAB600311A84F571847D821A84A06
2A171CD69CC15AB3ABD8EF7D4009BF1DD5B291F87C9ACB7F611965D4FD310FE3
08316696C2FDCEA16D2079E43626A0AA2628CE9BD68EE9F73F5BE1ADE91BB41B
66F6647EEBF678B78EBEBFB5DF3E1DC48347F8B5DFAE089C2815822596F3DC4D
9554F0614C30038DC88876912793E9E446D9B1D0808FFF73823F32AD962FAA4E
8E08E76F9FE9981E45CCAC5C4D2C0DD80D5586EF2B79A362C92F98FAC5D3634A
52602A4A406C10A844C4292D89D723BB94D9690AC819107900EA9B2C67CD7FBD
0C2C73248DBEFBE0E0F5EF4E19BD2E0130BF989C37CAE337E607205691914EE6
BEA2C05B983DBD2D386289EBD7CCB6315DA4CA1C02C2FF0C91B280124A542F68
C46E0F8D07A649C6303209789767CE2702CD39701CE4284CA384D70FA6EF3197
D02E79350DCE8CD326B421D71C481CD2E907238D712B1DFF70F12D7DD29ACC0F
3C05B8BD3F112AF083B26E13E29230C8ED1BFD3C96071497955B79CBBA0ADC75
07660036471880BA14CC870243BA3CF3A10FE4B62B9870838C2E4A41FF319435
3ABB5ED987E73F7912845B5D74C2EE185B9B6F398D4185E979C4D67A782F6D1A
DE7BFCAD7389522856EBC3621545B950D10407E4524876B7ED28946ACA391E37
F6AFB67D12
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6E5DB6BB578C37E25E1B5D821BB18F3C1B381FA9B5
4CC419D954855BA899EBB815EB783204A9E3BA4FD9478C1B6B4EF1F7729CDB19
741A0F22ABA1155968A3B9C77F202F955915BF52FD45320721BFE9B05AD98322
58B161A800FDFA80E6907300DED6A5D94668AC4B5ED7D2565B25CF9E0B7240BC
C29C59A4D84770FD34E97E0E6CE2C8B6B7D5F265BEBDCA4C58DF75153E603AF1
E5D0E387B877E37700D66FDDFC026516FDA258B0E7B327813AB2FE17A3F10D2A
23E38A6C69D9E609D5E5FF65602994AFA58D114A76CACF18E980671EDF4FB2FC
C61969AC4996A95D54EEED5C3F14B9618D9DA23DBE012D9AF9EE25E1E6AF3C8A
2189539EE88AA850D14BD4A401E04490CAF7F4A42DFC90D9E05F80D0DA649CBC
36AB7892766F6CE4C7B28E64A91581881E685F951AE9628C33906CF97A9DD837
7A1C7D83CD07880A45EFBAF49A93C35B6FA60789638E1CEF240677571C656403
78033A2EFAC8C46770FA224A7914720E92784C5E7013ECA0861430BE54C28F89
BC0440F5934ABBD4AE34AC857443E951A141E6CCE2B63BAF6B285A4CB005F162
B06C966C21D3B5DEF5A3FAAF7685245237A8EF83019EFAD688F6BCF7F56F9179
A8C23EBAACFA8DD8EAF46E8EDFD1FBB5C3724F487363F6A27C14379CF3B6C28C
B6ABE1C1606DEB6F04D04CCC4B264DD76F31F017E07A31B99351BAC3C5962F47
DB109EA3EEDE1877A06CDD5DDDDB891B3FDEE81986BAF8AFAA241DBD42E7FC24
58BE65CA6101CFA6D65D0FA0FCCCC6146E7B483AA7CD13A91E54AC62A383DBF1
AE8B44DEDD7C92FA3787EC523534848B9EE545585845B09D855C3A01F713C1BF
081EB27E2A0F685D86F7A7BB423D1A7C21531E2C5151279BFF1877A8043A2240
FCCFA6434B1639A763B4DEEE7EFB102E16A88E8FC0194CE3B471CC2C4DCD7EE8
DA67D9BFF03168F9E6EF16312BB687AA3EAF0245885C5CEFC7138A7307297BF2
B08A80874CF0D889281F4761B0DA057892630923CD601E96E722DB1BE432987A
61FC0E1DF9C6433A30B98C5233D2B5EEC1C70F6F28FF3898A33D05EC001E45AE
4B4DF4FFA56A85E06839D169AD9ED3FB68C544D8790143B7C8FFDCBC8B95F1B8
79C10D8CE03F862BB01C30566C90DF0990ACDAAFB55D94C0C84B04C87E046D42
5D2C67D68D0A054F8A3F6FF858E2218C80C58E34DF3EA0718B7C8E2D6511B059
092635A418CC45E254F6EE96724B8CEA4F4A9959E04319C33160B2617450B1B6
1F32572C4946A32BADCDAFD854F7A026B77B817ADBF1E538B9EC0A0069F2E54B
CB283ED752F522521BA226F9206787E83CFB666058181717870AB4510AF6D77F
820EAD0771D8C68A946980E43FC16C61F2832B4A9CBA4EFEDFD8C076AB6263E5
26B7FCB04059E2E691DB064F0A2F41CAEF0F022DD19B1B18152D9C9D63046BF6
9A6961C0CCC9F8F930F301D3BEEAB6F99DCF572961625B49E6EBE4EB9AC35EE5
798761A5696D7213C80DB72ECABA423B836191556A18687BA3CDACE221A1F009
54F550638FDB714C7F3E57E0ABC6D087C930E7413653826984739131A67A63BA
DE1A9212BDB1AFA768246E51E24D53B682736B5703F155A35FAD329C2A0C3813
85C4E4AE14C140E693AC4E8D356CB078CC75B0FA333F92A9C1193D45478A4F87
682F57B406F912D2F7134229D01C1F87365AA4B346B360F48AB7B7DA529483BC
C587162F3C42601E322ECE1673183806796DEE4206E51D380DD55AB70C85C362
1851081F55C43B94EF5673FEC1DFA3DBDA8D38916D2AA6A3A38E695C610D6265
33AED7E670F835078238D83BB3567F047ADB1055399E79F896349E6E3DA88F86
C3EBB1B002D3F0831A3E498D2E9869996B2A58AFFD8C81AC0484F0C091E20DE6
430D5397FC919AD6CCB742412A16E11917A4B0BFE0323E73077C1D0F2E483A6C
7D7774720EFF9BA12954C7F577E7B0976C7DA40C2CDD6D47EAB01F14BD645141
CF5044D04C4D41FEFB65AFF71EFDB04E60D690D13EE0FF76578DB2C98CEA1FA0
3775AC0501B421877924E5E9F95A548BEA4E4F13053DD7E9816B20BB71C1D208
1E7048675A02C416F2EA6DAC3CC642B4CCAE2A563F50CDC2BCAB872AED8BDFDA
0CE18D0DB433A1ABE595F0CF88664705CD3074EA50EDDA99E22985CD4EAF8AB1
126C747B09062591A637132CD0682D3F404CC26DA5E0967E5D25E1E584786528
B074E7C12C01C922864E4E74F7891FFE748FACB0EF3A051A1EBC2C389D9F5E29
BDD7100676573CC0C8A3BCB7D8DB7C9493423ECED8C3B64A84D949DAFBBEFCCB
91FA50900CB357B783C1514A7F2D36CE022570753BCD808E34636F820F6D8DF2
34C2B580D1D229640C8164B9EA21C7FC65BFE0CECE6F75E554F8B4C21324EF29
66D3A6637743FC97CB149DCD01E4A2737CB0E206029B92E95CDC0944ED037222
FEDCAB1C37C1986BDFE53DAEA66B91FF7AB4E036D038A03B880DFAB0779FAD6E
A90AD73C6E80C6B082F2181EC00A02085D48F76D1E7A45D9BA96CDA64DB7DE48
4753E8B4F415716266EB82A93C09EFEECB41C30E174E46241AFA7E4CAA380091
35F115611A54393E6B5D2ED0DFD6A4B9F1D8E3F24F74902D7C8139574ECDADA2
7F0A9ED3EB642CC9CE7760D8C9DF821935DAB12979B911182CB26EE500479E97
69124EB1A3A3352BA674AF9857874BE77D6AE0D9F62A7D5D0B9CE532A7125276
9B412D43B4070471AB93C3D10DB6B3CB3A28E1E2527EBA60F32381C0981EAF6C
745A018124F0CB78F13B1EE60026CD1347CEC36D9FB0E10274E645E97AFD69B5
0C37F7570B5E27483A6BF15E4FC8E7CBAD0C576DB84D5160EBC3BF4F866343EA
3177522BCE1C24A23A94F49FEFCAE1694C36E01D8C0D50503460192385B0E4F7
A905023DB9F9566AE8401F4C10
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C2D1AE634032492B7023944DD1F9FD0CE2F7F4
67A41ED7A40FEA86BBD50B645BA87E3D9B98A309023373FF75491743644413C2
ED9D0848A4FA332D582D8BFFF3D0D13EE0E49102ECE2D624A0A5EEF70005594C
5E0F074DF55E0355AA33C6C0F2D5F535AE93682E855B1BDD6CE955627284BC9A
9199F188FD2CB5BE9839DD396DE541D181016DD6F0563A26851AD5E3E00BD661
6EA0A416902D3AB5EC977DFB9A5ECCECE360FCD3B1A04F16826F1B2685EF82E0
928B3862C03581AE7F5CFB6E28E1D1C86D9C66ED01B855342AE4DB0F802C1129
6A0BBDC33436A35995B50C42EAD39029814C8BCE19DE1D6EAFE04776A6E23862
E9212C1F00409F1184AE358D6F5C5432DBA9D9E35C0C8D10D99B443B1CB9294F
D84C265B934A0857ADE490147C5AB8EBC973CD8D3946E50D5357E57CD8F73589
E001EFE2B853747CA6CF900D3224297F610CA3F3B2629EE272DF9530A35FC614
5232C379D553953F21303DA3CD71A95070A9FE43ADCAD26A4C067109780A8488
50FB9B3B0285C7FADB28A3711C06273B79FBD3438B9C18E6F4E851C2F2033AFE
6DA413A1873C063202DEF40DE082B544B4AF7127EA6D5B8FF5A07351987E5325
EA8D2985AF7B9F14EA2C7C51096681B7712C92271F818BFDFC8AF8099CBCDDCD
FFE15EE19FBB79108A5969895654C00A5F30A5F801DB4597333718373A3B8F96
8B1440C691B1FA7176E0CE92270D872A5B65E2A540432B97CD7F69F767A67AF3
BAE02C93A4D69F7A08162ED8FB6C594E1B6C10BEF2DC54827C9A368306780B31
793DC3588A170E5A20B20B7C7E7B74D57A23326CD8E2332276F32283CF0F7169
EE52BD767834B73D8592C922B8284C6C64525B4CB3EBAD79CF5CD41A9E52E33F
D14670C66F070D8CF7E7607B46F62671C05CC371159F0D61B7E136F99D4F86E0
A6CBFEE98BF2D01C80F225EE14F3FD8F77D0AD0DBACF1DC91B90C11A6D6512C2
7B1EDEFDAD3E3E67342B0432C996FCE6733B371BF36034355BE2E7E7FE9B2134
E3EFBEC16BA5B0097D7290777354D1403713C59D3ABEE28BFA1EE08172B1C2E9
6426A9797747D4E2E5E735378A10FB3CFE695C7C9A778DB1DD2B545FF4B9938D
2EE9029BD66526CBA20B0323265EB13FC896A9733CBD9F87A2FBC724621FC19C
3F62414281BCB53CA46A8161D536C2D0011A2CDA4BD7D71A5116E10B5BCF752C
369CE03BB374617AD20200638DF7E3599F62B0286A83FE867DE833DA386F93AD
2F241B5CA8B55BF28DBD16720BB1C42C9A97BE58542C45F05748B1A1A133EC7D
FFCC255E05EB61E60035946C6E3002646FCD01738AACB9AD52BCD0D6CE9DE7C9
D0A7C62D6C1EFF40A7DC27E4C022403E18AD9CA02B5877B53747D33126D4E427
FD7ABAFE5A711EF72AC4275FDDEA364B0E8DCEA6E5D95B0C3B9E3114AACA2D0C
BD42EB7B100B99333D004155898A4ED4C460E1F28340DF37AA75DB61EB4929AB
62872DAFA2D779981672F5D7278419D03E92B51E62CE40C25D780F60DB82EC24
53C76DA0E3EF221EE13C10CE461087B005576CD68727714EBCDAB1E069FB552B
244921DCA2ABA2125F364237560ECA59253BA1D99F332378689F4FB174E3C634
54AFB214A8944B2299D75F55E0464E42B1D8A06DFD70CDDB936FA8B7F15B6868
26B5EE4D5B6011D4FE891B918DC0343A01080548802256FB125714890F735BA0
46895452AFE7D73D975A793B5241778A9148CA6A48C797F34C92CBD4E803317D
C22FD3C9D81F1FFDCCDD170A6C690A75A165FB9D0C92DE6274E7B9341B3A54A8
6155156D151FAA47D65AD5350276CD0478CC177AFE57D15B1C247E7FC63BCDFF
874A75714FD324FDD866414ED5F0DD2CFF466DAA91839D038ED7CBBE6993BB74
55CB374C4630FB4137D55F76088819802AC0ECDE469085BCC3A6944D9AE66BDD
C633EF0ABF651BD35A09736BCACAA027E0F029C5D7372EF249FA0267C140139E
32A3C82F1A821B58BE53678574253555AAC69C4F5FDA21D1E2BA3F3C7D49723C
B3509F29909A009B6625CD539E94D15B13BC74CDBE6EFC6692B1EC142E866CE7
5F1FBD94D01A2D221E3D64D048CE34560BBF01C461E2A4BB3A7C9A4B24C0499F
B1611320491A48DED20371FA6B02A50091FEAF534CA528E5D88EFD8566893F56
B21C5F06F30EE2F085B06BFE3AE025A0542F0D7F681BF0FA3906F211147BA146
D78C62B62FBEA3A04583F3C4458CDACF7FA1C6FF8AF6320D750231B552FB90F1
22B0C238170CEE768BA5B6BDD6D1510EFB6BEF2419C91B23F690945DACCA92EE
9061FAC3A8E1B8776C69FE99207EB96A2E6C2297EB8656E59E82D8B8D8D9C3E8
C2D184E6656CFE6D2A1A68C78C7A79A202BB5A04157296D730F9FE2F3B9316FC
41775DF4F288C71B517BCD8228BF9EAF57081F57DBF9D74E7C3017641863963C
A3AB5D13CB0500106B9ED5D16E0B45FDCB6775C88653AA81DF891DF490B9ADB6
AE50712D08403465468DA164B82D3C3FBF6D1C7B96B726329E0436DA0F24728B
F15F78C8E8ABCAEBB05F8735424FC707DCE60D51BCA42C273B2E43D802111363
88CE2ADB1B7390B800C5DE45A3519F7136A882713399C831384FA1269A135F65
3A26842C9832772C15EB82E86734FF9C26917BF1D1FAF692F9CFA48CA51F17B4
EC3602751BA8DD89E21D8EFD175AC6DA8E033FF3DF0FDC7F4F675EED0EB2B765
8DF687C9A775D9EA3C72674A561939FD2FD163FC7D32096C6A7E4E081D61DD7A
3FD9373F9A7F4BDAFCD55BBDBEEC2355065FAFFEE86C8BA72ED4E9CE6645154E
C1B30B318967776FD2A50983CBE06A0A21DB992DBD811A09457BC00D7C2668E1
663315B430D1C80D2D39F88E87D4554095A2258ACC3A750E94CFD5C2D2ABD635
DA7FFE17BD725283CE013C9E099C3AD560BBC9A72A50B39F367043BA8C5B9684
01A3CD81976D2140ACC6FA3F605EE3C84A10A9B75142A4F86E27E5BF5701F9D4
D8E4170AF7FDBF3C09162E8A4FC6CD47C150A8C737BE9915BF08A536FDF606B8
1E306AA0F78F9EC9834A8D9C9B376D9B539BEDFBE4BF99F37C4A34A69D56270F
BBCD33071471AC139C90CE7F8D073A8C47D478FE1788AF768FE9FE3A7434E53F
28C0417E0BD2BF59C4723FBA2FC1A1AFA932B1485A158736FC5E3A6EA4ED4A4D
375B2D42DBD1B70D7A5E03B4FC98EB53F373EF24A82EDCEDCE509D926BD5E3C4
F6E6C2EEF52B464FE65352F56E78D58BF1E0922FBDD3D7BC680226F1D3861E1D
799628816A876C6FBAAAF8270E031485E13EC41B411C533A5CC6E2B556B33648
563A0D611223C987C29D1B9B88C659BFD9CC3BF9C51B407842090E3499948E43
E1C8C0B5376C5F3608892370DE073A17C2694902D1FFB4C32B93B36DC34FFFC5
8ADD6DFB3405F36409B4773C99EA24A21A41A2E09D3F835FFA6B64A7EF9D4A06
D0DAB15EAC74E87BB7E48C5097FDEC7E76941324E7E83F6542C7D49E060F1B93
C3C9C3DC4C5B052F3F4219582D45949B8C3A7907A725B3B781635DD650F404BA
14C3E9D3D5937698573BFAC64BC00CC0F161DDEC1020214029548ECB03F2BD47
F24845E7353D9ADEC689CBADDF0CDFA1B1504F28F2E20819835120A732F12A26
61AB1FC21CBE13E07D84E81C83C0694B5F4FF3DAB0438C65E5A1EB77AFE9274C
C14073847FEDD380EC1350958C69140F1F2CE9784AF14538CB9F41D78278FB2C
68043EBD3CCF91DFCBDC14C5B5EA0EB4722F6C9D05498A8A0DBA8FA6A3B59601
8CCB25ADB0E9BEEDEA33D1EB9CFB72156B81F4791291A8F3191DCA7DDED14C04
A71FA5EBF9846DAFD3297DA38139FD93EC32A9AAD61718419C515D749757200D
15964F497DF1CA63B9333E6FFD8FF2D4DE7083CDAF3688E575648F4F03D48E58
DB89EDDDFEC4E1B245534431C9BAA23549311B03D8BACE017C313565CAB731E9
3E3119DFAB5417D193781C39D765EAF7C5EFBEA026619E1EBB71D61651F11B54
FCE233A82D9DEBB0F31D29543DE2AD436B75778C0489533F3FD5742861728E5C
64EEB60A467F7DDBBC496CD4CEF09B0ED0FD7FC1F7987DF550AAB54D47E20A90
6B02B3B7A72894853C98A34F9B97D11BFE61423A5F5B24F70590413C9DD871F7
CB6BFFF49506F54C9EA5C41B37AA1D7D57BD7C73BDEF2142A1B4DC97D1647805
29938A4FA7BA0BACA853D457643B31245412952085C699EF4D7E65ADC8CE164B
8AEC6688DEA3B2A11DF0545AAD134494AFBEFD9D51E76615ABFC5730E478369E
2FC89F2F28C168E6B988F76C35E03432279EF8F694AFDE8C03B25BFC2B5CDD25
915226A09115FDE6ED9138A53B0A146FE4BA59140DADD4C996432DB809496CF8
9ABDF642D9E191449727385DBF163B0F783625EE8072950A606224D8E5D3E088
996401AEE1677C6B51E2DBAE6398E3AAB66CCEF7476303E013C74F5E1643E300
46E87453D2D61F1EC726F481F71D6011A557346B74B923208A9421D75D239D35
001BEBAC2602C9D87938B75EF1AE3E4F978CE1EDC4194F1012D84BE7539F2ECB
69D47CB668D8C252775D913B8F88E0A3CD216414C6DDA9FC8029ACFFA832F00F
18F5E9B669ADC7CE66F042F7A5179B5D9746B11252AFE1C9317528BD564137FD
5767DDE33F59654D2B367FF14E72129ACE0590E1B613AAB89F20B399C044B05C
ACF3296865532E0597C8B7410E7E4445AF03A7A93AD5D9D20562309C8864FC6E
D851CB0F552D820C2FB93F3C8B5968E5E82DE931CA6238DF599991D07DCC84E6
ADBC27F1D1A6D28C2DFD8FA0571D0F96B18F1908A4635255B19ECB89B9DA9A93
D028D28EFCB73500DFC7F872D14CF0881BBD1006BC9B62A95FE764579DE0CC5B
4A1908BA4751D30E41266E6EB98B56C4E16D6B61184907F17428F5D92F0D318A
BB61FCBEE8E8B0B00C0CD02A5ECA039216762900C1A624AACA506DCBF9AC0D22
6D7403CA8E78B6C552479B1E51C74F3BE16F39C0B59D107D1ED383E93E35F188
E2255D4CA238D50701150F646B62E1127EDEB0675981A56FA092FFD7E0ED86A6
1279D544E2A616FC934705542C841542BC1FDB26DBE389CED1905E5A03468042
550ED9739076EB30477D455C7DF2258FB158615DD74CF3E5DAA82DA417E864D5
8667CF9C38FE81E87CAB38570490E07CC72DC667B7655B5AF313C627E5138DA6
0A7247962F244E4B3E27B195713E8B4D6BCD5BC55A7B96D7AB0E89E442BBA33B
2663D5644610D3048DA2E9134E43358A1BE68E4C0DC54C87637B73E84F0F3767
6F388E65B4FD23D4AFCB1F00CCF8D475B2FBFDDD076DDD17E49F3FD8A4278774
EF42F36DB750674D1C66E217CC46FE08016C3DC5161B74DE04DA7417CEB7FC68
DF9A75ED5B78C49642E51A141C5F34F7579AA7C9DB94D3869EDD3934C338E53F
A772562F0C9B1B0E0CA9238C148C2FC26E7F7C2F368DC2FBB2303E5FC195A0ED
82A59B6F6E4940DFA3D1002523E04BE24E0A032DBC55FEC5FF841305A8927C1B
DC558808B1AADE9680499B23747B96D940C773591DF0BF885847AE5E7A34772B
B647C1F8FDE13B44C6E517709FB9B9C3DCB6550CD18A2FBDC7A16B2F5431B34B
0B08C970F39BB0B33254A1DECD3B9EE07C887741C0A255A16DCC32BB7BB54CE2
DC59D0994A7E3381FE06E03BA9F1BC28D527BFB50F1A7BFA3831E3ED9C491021
8E0E1F254137D816B21F76617F02A6ABDE13D95425DE9DA289BB60135C7008BF
CA32780335D061DE11DC98CD07113C4269F0EFCA1AFDF470E8FC6B0046D85E6E
EAA5F065D42B32459D993861B7C7CB47D1BD7BEF204EEE7DE594518B78765EE6
0502B5D317B8BBE8CF86194A56E683667618EE564F22C2D72A793F186478E760
14DF9C546D9201261AA71B05F2E629B58BE2910AC7279292B2722E1893283F4E
C17AD24B2C1DDE469E19A6ACA8DC227D058C72EC684F397CAFF417D6C412A8F0
B0A50A868AE11D05F4060E87FF1EF88A9CD5AADBF02DA65BB417EEEE64071020
479AFCD1112FCF06BA3E3587F5F1613F5F05DC2A6A15A54F2879BB03C350A0B6
C5ECDAD7BAA8CECDD7698F164C19E3380ACC2FE5A47F2B2F394BCF99217F8B04
52BA687F453D4A5CF4E61DA5C2E238FAC478170AB54ACE2AF57B2EE7205F7070
23A5FA5306CD8C2CE2CE91D7EAEE27653324215D2855B6955770F81C522441AA
6FCED6DADA33781B178A186480F3D3DE09AF35D4DCEAD9D761FD8A733EBD36A3
394054D1FC534C1F04BA0BC3229C833F41DA40D17653386A90C1CD2E1AB00130
4F96B63FA2FDA3D5B9700EAD62D56AD09A50AEE5F39E7D95DA9DE8FE516923D8
CC810E306A5D5BC7DB6EBBBAED8A49B82FF79AC6EB0B36E2F4794FF8D16B7F8C
D7435C20A34F783A4273244DA0E4AB11C078B070CA4A43F2328C58DC3A2E2749
987CD8D037DF90A94AC5F25A6193C9CF70B473DF109A7C3D4C4D2967CB7BFCA3
9157CA221447A44807B5D89D0FE464663AF7A14D504D7F5EA0BE89FCC96B0433
E1A5B5C42500696B7E92522DDBF730E956CCF855DEB471E0D7C78B55CF7D5359
A51A519888A4C772D67DDCD70BE520B7C09C582E1945BF8D20CABEF4F2F5A78A
41E4BDF3B46B159EF695080C2C3A5459F52DF5237EE2205F817D7A37E38623E0
DCA16B183EB03A367918C5AB7825A21E29B07047B80849C0A77BEDA560ECAE3F
CD7FF41BA59855E47BBEA7D23362F1811CA924C5CDF5F6C7D6448A0F51DD7F02
DA4D888CCD91B7E454B088821A9F14BED5DF262E622AC7CEE39A9919DB652A84
ECF4E579243F9CBAD1FD0DDEFE0B9279975DC15BC1DB4D67B315C4556EA67B2C
27B186FBFD22B68F30AB29E8F16BEB88A6CFF0978A79BDF53DE5C0151E354118
C14F4D152725A5ACCD01869A6CAE4F47FEC164D1134B43DDEA6F428ECE9BA632
E08C5B1BBC6051A1F0E5EFEAA8C7D2D8DEE7AF696EF5B960888A10D61824D760
F2B86372EC36424D8A7581AB3F298CD0BD89A89C673790C29EA221D07D8B742B
87CF1A94AD6E4E5ABF7653D4E191CA3B5F623A44BD83E2EC4111BB21345B79EF
4311A81B01E9882822BC80A55EFFA7276ED50AFE8646CCF705322EFC4802EBED
FDEA9EB5380981576F497EB09A9630A006FF0908EA1795C412FF962CE62EFDF0
BDB775895C4746ECF87F40A23A8418AC90D7B4F311FA43AE58247E52004AE4FC
26836CE183D4313146F3FF6950333AC92AAC280B543D226AA9DC21615224C2EF
D2FE0CA35B333D281640515BF9C595EFEC75E73154C011A58E41E6BFE2260B4A
50B3B1331D717C541F63A8218EF1FCDAE565AA6B7DFF792E33459D996A287250
247A1245FDA84738BE165A609F79CBF49D51AB8BCA6B3FCBFD3BE97D9FD776E8
BD0C85430AD13990FFCDB4B35953E2B8064E1DB19FF9809B3218CFB4EC471D3D
FE4EDE5D3CEF127DB53383AA2FFAC31D3058E6044EAFD289221203840F037B41
46F2BAB25A95E1B0429A0F9DCBFD1C8737E0EC21F7CD596D42A88458B89786C2
F6D96B8B7347D86EDCADA440FE9D98F9939B7AAAB007CD23C46D40004A8F13DB
333E91412BCBEA8587A63FB77C9BCA8757A0F5F54B21DD7097DCBDB747D97507
7B37CF09ECCBB331973544019CC2AB7C9F1265B32E13A33A4B1A6DED15F7F56B
DF132EFF5804B0E3186AEE29EB4E62793EDF0B59823B33BA57612F379BEDAE5D
E173B15C52008BB03DEBB2EAC247BD9D5A2469FB68EB42502E847F9B9A40AF89
31A2817EC3709EEAB74AA7AD3CB3BF89F4FE0FC62E020A1FB4687EFA685543E2
1302A9E2117BCEDEC29B30ED380CC6A59CA288380A1728912DF333DFE05DD659
00E3455921CA39D69ECB4D0391BE0894F486DF1F56131D4E75CBD4DA333EC359
0B836A47CE86DAA6BC0B8DD45B2226A6B95A84177C7FE352C7D719289DAD8D7A
FD6227A37996DF61AE7EAB1C061FE75A0149C4A665FBE329A0383F955444E4D8
5F3A4B29D5F9688F1304E33255165A4A71D9C7556834DD3F66EF3B274A86BC92
43E061E91AB26299B622AAC9BA95BA57603A88861F27B0286DD79A6CBE75AC69
A4F2EAFF7AEBAAB6410656AD97E9DC4E5D7F1BF8BD72279BC3B0D28EF6CA6B7A
18425E2305BC90F8BA4D1C8B051890CE040864174646AD7CF224902627C5D113
6D2A635F387049A0C359218F5268C9A288E70A9F200C10EE7166BD8D3E301C57
61411FE04B82E723BAD0420507EDAE822C094868ABA4C18CAA5EDBAF9EF813DD
913ABEE28BFA1EE081811FEA1AE3C2AA46C5A8852A5EB64B46FA556FF6AD04D4
6529E9BC9A1876241E5F893AC6F00331D9A24D10FEB8D57A12FECDEB0D9F036C
CDBA75207C66D0B692FE7C9CEED9A54EE6607CA157926C86794A6B6320632420
34681657D298C1383EDD3B13556C047D2DFF37B269FAFD98CB727609ABC99E6E
72FF2737237A777F33D08DDDDDA07EB0380EB95329B5E83E493F9ADD7994C11C
E94999A3F38C88115D6082DECDC16927A57DF0B4CC9D118666C78DD383D722EC
2C91238CC668CE885C8A11EEEC603AC79C6DE3065DCC84E2D4E473F99FEC2E64
F07520CFA413E0F85E1E6FCC916ED1808661B710998E5EAE433D8A82CFB15547
B339AF3764A2476FB4F4C2EBEAE439306822F44A5CACB22DCA7BFF66D1BA0544
C07DC2A43FAAC36BD8D41D595260AFA2BE7D70F1B0AF793AF5AD18373B11D57D
9AF50EBCF7152E3715510FBF60F16756F834D2E609646B5917DEE430E079F468
89624F7D704EF367F65058FE9B3AB95CE02D75BD2FCC775E27EA978D5D65B114
853CA1BF1C54B28F3591C1B05ACF3D4695282695B59718AA5429ED39CDE4F9CD
1F92837B1EDAC16B8730E72FE16213BC2778963960567849E1F6FAA1EA9BDFE8
971FA87911950FD65E90E3CE3A2F684C07F2022050FAB17F6F9D7933AFF638F6
384AFA1DEED784AF774A8E20EB1A7AB2695ECF4ACCAFF8F2AAE4B0B3B89FE45C
5C138796310B1E33D5B6A764A8BF95474A18AA51CBFDE4B28D84E6D4F8D399E8
581EEA710DE124EE38551DCCDEF06B4E4DB9965171FF22F317EADFD78524FD0A
6B0F8CA07C3E042FD932F96E9D5D5FC9685930B5C93C144FD17EAB19CB076C36
396D4C7506C144C0F43BB36F021C5282E0A1CF93AD9EE5E71EBBD228482467A3
69A11ED316CF1AC2294E853433340952C7F475C8F5E31A6C44A32EA4D1CE1214
192029A2AA4A730215AB88DDD369BC6549D8D02596DE943C067A52E1E24AB1DC
9D4FE71401EE8488638D7C483D983B49B04B94CE42DFEE15C26F1F566BFFBE86
1D48AAC7C0A4EBF72DD78DCB263187BFD652DC36561D27A9335BBCA18349AEF5
DF7FAFB821326C61BF37D232038E01DAC007D632AD6AE7DB710083A77BDC82AD
A7B15D4FCBB6EEF0D1E8D95439660A434525B5D3F83B68A4A45F428997E2A731
A4F41891DF65F4AD63F5716194F5E35F2424AC7CC873CC8B22884934750B5DCE
AE9B929DA228296940CAE8F8712E1BEC7272951D9CC4ECBF2DCD69FB706AEBA9
1893597A866F289B75B6C623DDC0E21C728606D584CA516A265A9132694BF1A6
C96DCFEB8326882E173D1578300B5AE51FE74952CDC9D40D9B1A32366247B39A
C11014265EFD9206DD2E5CECEFC58393AF45AA2D81F10031D66724E959D8FEF0
DF6628CEE601831FAA6C3B623AC5CD1E237E193FC23DF5ED4DDB956E2A509CED
4243271E51B51170D73B4AFD4ADB5445A882910D626241291FDC1CF9BC337C53
E57106BCFB1FCFB2CB1DD837885F2EB9657B7493E891C5726B66D279E72D5BD9
FB1507ECD235339C871C5461E2339EC4685617621545E85237B81BCF8AD0996B
EEBB7E1A4F11954E669DE14B907CAB448E3FF46DE4D853093DA735DB67694569
E8A3115B94FFCF38958154824B719C8B575FD784DA7688FA287F7069D4875D0B
0BBCC5FF8C62B894E007770954E9957E64833D675C7BC8A4F76C9B6DD93C12E4
9D04DC071AD33B1183645016FE29FB9EE32F0F94CC9D675700317A06B3722A5C
EAE1F3DF1F7018376F68D27AC36660F8B1F03444A2D70CB874863F3E57F890B9
55358A57A2D4BC94024D03205669BD64BDF181EFC6631175E77D6B6FA4121E1E
D7FE26CBB1CFD59EEBA7F5DC2C1BB8614BF8524B14273B0D52CD3691F53282A0
F0627B5C2BF0D24FF6B79AC8744199B9CF6E32FA15B53C70BD06F06681193AF9
3A55066E8BEC7D89A99594E1DAA5D7C29EB2D84E38E27654D2EF39E1E5B6A63B
0039BE04F56586456A82408AC414443230912079FF1E8C00E7541B2DB7C9E564
1428336BB88D57CB604A45763B67768AC5261DF9C7E081A7F60049B74C0F97AB
AC30EE74060BE1BCD51B500B94E95873D7CDC9A79D9AFBE313E2AA15FE976027
B15E24EC8B8568C8E055F1DB6DFE8C805163A6957D66BBF063B1604FB3202519
20789A5681B8C0706630395896A8C659CB80F4F22FA5546410F5ABD34CBDE735
46D7FE4B0182A6CFCF064900F5733293BF20176667500E5878AAC4FE4D4D7E0F
A4DBF5F00FC8189282D19556D9D08860763C7F8EECEE5EF8D2E57FC50203EE6E
C691EB04BD977EED39B1719B1A803034812A3609EF7E85609728B4DAB8CAC560
CD44D0B1189F4B10C6A9EEA4DAF20B32D5A200D311AF3879ACA985CA83885CB9
90B37E0E0DDA6646AB9194B46FCE5D80B4B11525BD2B8C3F6F760C8245A1AD9F
508AF867F04202E76AA598BAA32B1EAC32BEA5AEE7B0ABCFD13FE08E44979667
3B540B41789B3DDD14A4167F184A7FF1AF507DDFF4885399DB68282CAC77A0D5
895184361A9EB68CEAF2FB34EF087320F134579D9E18D1E0A10F04E3FCB731F6
D39DA40442E648D10AADA23516331D6C3D30CCD2C4E4103FEB184076F816ABF3
7783C71E32872FAE5C13BB58F03A57E07433C1EE788B3D96A1500445344D89AA
8E895784B9D744247FC4DD5575318E1A50D7BCAFB3F48D274A1B0AD7C2DC1207
469EA9A3543EBB5DE73F8F2172FC810D86604C883BCDADDB6EF52427E0B0322B
0E41FEC653F131CB4AD5EE08CA3293FA4F4C6B846ADDD7CDFD1D6BEFB5B19614
4E026FD76EF7A00B6786984D47C802D85ECCE0C0F2EFF20DFEC6942E2E9BF904
CED8429403619BCFC29B109BE23860C670D5EB5B0EE3A04D4182329F95AB4741
08A296063BF7B01D5F186B2BF71111407B364EC5961CCA9140BBA1CE8E49FEC7
EA91111C9AA4E4AE14D2E1F5A9C868442C5DEC207A5BD9D56C7FACAC6CC47DC7
7742A8C0116835827634E71EB25A0042EF7592DEE52E1A30FB4FDC03930F36B4
8779B7DC8094823346938178BFB8E2B65C7C0EB613DA5459627D2B60C72316DC
4C2C77F85664674ED4D6D281AD503BF9EA7273D99898F37929EE55B032A55A35
906311B77B657C0E6ED90F9C6A3BBFF7BD4D1B9997140FF1D3DF7E8203DC9ABA
C630FC3431FA13B332210807167BCF97DEEB1C47BACDEE77A4BDB36EF4B508A8
2089B09913D0B931DD6FA82A250D9669DCBC6B7463F6B00B82959065B5D5D039
A77BA465953D30822DF741724E8D187C522D898821B44C90F1159044705C86A3
75AEA1A0FDAA7D46CF5216ADCB21A84A435CBA9750E11A10720B650E61C2E1D6
2B535C12F48EE6930E5F949846F3FFEC99835C39D643A2314F3C1847C2EDF8E2
9F24577C8486C6DF2FA0F4243D324A5983198F2A73CDBD54D8633E0495E91BFC
10A5D5010758C6BEB975610A063D6DEE032EF3BC82A2EEE98739699196E77927
406DE515EFCB9964954B43F116B0E2F68451E738E564D8EA0383B804800C6069
0D7804DE2809825F71D5DD1A1A289CC9216E51BE1A3E48598263104767817773
82D05A089F2CEE01CEE86C23E6F1E40C7FAFDE5C8CDBA5644BCEA126ED773F88
7344AF5DC34C546E5E430CBB82782A160E0C10C935F652A728B7F0E9CD9B977E
0FD77C2B28FD79C68B02BFBEB823D096EE2A4B193612337A6D180D9FA91E94F8
5EF0764552A03DDF0BBEAA28E83B5C94175DFB9E11A2CBF023664EEC4F30A126
1A0096AB6580B12D648ED51EAF86B186691E82F38F10ACD33817D7BAEB7B955C
AB886B6D151B2BA61BF7FF7AA0BBC9A98DE40C3424FF349C13DE1B787E2EC3CD
4C3CD3A40DEB1D00F3908FEC9886F8E8AA80417B376266C585B6F3B17B1E23C2
6B4279C37C4F6E48382CCDFFEDE240D483420C8089E81DFB3BE958CE158E85FD
6770BE16471D811569F9AE4A101D1CE221F22C5597A2E3D1C3964D8E87EB4795
0899C82E7D266C34D9DDD3E0EA1BC88E523099196F039EB567BFB06BBE8DB3D1
A0ED127FEDDC4387DDB2E10EF3FA3985EDC86B27483C8B820DD0211E2DD31F75
D7CA01CB56E4A805190756AE1E83C41C6AB175C3200BE7F1396F9CAF46C809D5
DC321B64AC31C545859F011EB636016EE266358CD06FA57C0425A51A1AD668CC
571AE16D327D5201D31284AA133CADFF36A58BB760E6EF9DA2B8DBB44BF54B6B
8492FC93269D7952B93A2A83A34F026C39DE1959072241D567D411B0A68EC14D
BD5769EE77792DB6ECF45EE980F478262F0FC065D56EB983207F1478ABCD112D
3ACD59D769B6C75A3448887948FF0FAC0912BF1F0B09A9C902A8AC159924EA8E
05DE48906BF276F3F19E7FF4DE86F3A979845095281D8DB5E612935A3EB83BA0
AB8F65ADCB13EA40415A4E0FCC622BB066A39A0183D72B4AB2FE46F3C02A826F
304B9A865EB37383CE79301967EC4F26F3CEAA224780C65D0357949E074D6E36
524AA186982F47DA47525569C373B4B066BA7551A41269E381E282B42D22BEE5
39B252F78D43A892657E70EC9913D2BBB6905704CF35D7BF8C3CB2AFBE309379
B187F2A5E50887AA1B0D3E5ACEB5EDAEA605AF5FD7008FDA03B7F86166C6E95B
3D63FF2D022DAFAF5278CD24BE5460A3E4769323AADE88755DA906B3B538C021
265742200E62765CB57ECA2162BD29F0E926A1042B12AEECE3CE3F7250608058
EF90ACC54A90659DD7AF69B2FFFD182EBE44E19FA0FB17A49D37AEB700DE1177
3B643701E466895F2F360DDFB20C9964E1494AFE21A1960C1C5FD4351BD58EC7
B28C4DFBB75F82EA4D797568761CBBEEAD64FF352BAC31D36B071C4B68DF8BA0
FE38D3A01F5B054A05C3E613E093228678586D1590F4C85CCF00ABCB81D584E4
E06BCFF708B6DC29E0E0E03461C073EA895785ADE1BC40550DBD475801848196
FF59D705A0D839E3FFB2837746F7F0F4DF90476B645174CCD82C403CC650CA78
A202392A840C03215EB573C7785B85F11DB67DDAC1AA952844DF49F6C532D429
E5C86F89D1E697FCEAFB3F2937C26AC08DA98886993EEC7A8FFEEC357A8C40A4
DAE032AF808D30E08C4AF6C4536D1C9FDBEE7B1B280A332FC652BC22248C0307
13E6208B0243824F274948C772CEEDCDBFE9250FC166EF726FC65FDA29EDFB3A
D7FB89F301DB98A91C6F34AA573BDF47829A0BD0C1FF587F8A58440D82194CDB
01A2CFC41133C69AD75946DBFDF3B51B7083CFA90832EB06617471F08399B145
3DFBE9468CE73450462AC1FB753A41D8AEF0DF67893C1D06F0EB17E40577DEDD
7EA8BA95C479340B9E18848E9E29CE90FD183B94C9CE1424E86B08846F902CD4
00D1F79C0987510AE4DE1B9AFE745FDD97A8AB335A47E3505ABAABE37D6DDD12
73580D1BEC9E882B2F7A1A617781BBE5E1C546331FDB4CF16123266B94843C45
86F7B0914CF4136FE60CE159C111A6468D2DAB04B3ACAC61986BC3AF397173F6
6FAB78AEA057C18ACF58136C94A428B207C2802844F98992021217D666CAD264
86FD8A4E1F4023DE166DDC56CFCEEC3CACED14896D6034D50A5444881CD326EC
96A4DD1F222E2CD4FF98DC7F79C989CCC086CAA9FC1A12731194F7C92D83695E
DEB559F0D4A8F736C91556BAC645DB288C6C3B3C1AB46BFCDDA190E9E93C8DF8
1CDB2FAE27AC8CBABF042A6A15F0CB3762DD40053E9181129C7E23E338A65524
7C509A950BD2C3ACCFCBCF71FADA1B2BBB107A3EB31B9A6ED320029888799021
3258C36AAF829DF67E37A242C5E0FDF6AFCEBB0621A8ADE7535D5005CB504793
522591E005AE22F2902A11B8BDB893FE33BEC2CF893B0D3DA4B73D66460D19A6
BC8AF994F06C7B4B622D86519A9A42FB03DD17290E01444DE0216A5AA6C89898
662200C64E39E2DE83D6930685127D91CF7488DEC4B23A97D080C2641931E596
33708BABA1C0C4726ED2DEE2BE741D163595A8C8CD2CC3E3DB14FB7B59D06677
C070216FCDA30F5723F772B1764D9E2C9CD6BF18B9577D3098BCE77E3ACAAC49
AE0FFF2957BA9610AADBCE94A4355AA673AA61555EE91D01EFAB45F6927C79AC
BB0DE25CB10C52A339D233EF1B895D0C0C9F53EE18B53AE69E1FE68FB06FBD58
BF563372DBD30BCB727C37C65346BDF7C38D8480A71A9FCF98F4F9501DCF69FC
DE2EEF4C91B9FFB9528ABB5CF9781082DB56810D7BA76DBFAD8A441DEDEE59F3
3D9D246AE8F987AB4E62BEEDCA18AD1BAAC24515355F9825C843D0C6BBB366C7
05803BE26DAC704A6F74249E9F5EB7CA37809EEFC33FCDBF9C3AA3D3F6744C6E
2D6347C8510AC6D67E95F207726532F83AB19D0EFE83937474321B7E4C632959
97DD487BC128F397E415393E6B62F58F9DC86556254A8A71F70C8A1A808F6790
1B52715557491B4DED0A19A1E6464D99B18F47F2988E6A31D07C0EFBD835CD0C
526CDF34968DEF676CEB7C26498593783878C0A96D083E18D9F88CF842B642CF
66C86D11E1B064A2B59B90EA972CB8CA3E598ACC37F45D571280B3333419C677
B64D3F1A150213ABBEC728462BC86360DF3B3C743459AB088BEA49C5D06D6F67
0EF33BB3D8D3959AF1F3B2DB5A361C07E06C49624663BEC47141F9C5DCED967A
0667DE7465B7EEC2606AB347B734DB61A325BE0A37CEE6CC1D4C8F3B8D303120
4E57290CA767EC7EF8F34D00DF035B7ED2E30077811C49CA8198D13F2F465616
F7949B5DF28EDD3FBA26D6EF2B31CC1B8AF7CC9A7435EA85ED80D8DAA2ACAA5B
048E4E7A3EAE53445277C899FE86E54B8BDB1490AC76FF84E5C2CDD9B0860E6F
C31462CE7D19968ED81AA3D7E7FF51C11A5041696C183D62872AA2923D802D94
278A2835C91E17ACB22F3B53500DA95245AB7BE1A90282BB20ACADC2092ED33B
200AE21D0404DCF32BCB28A7373F88202796E8A3BDFC3AA8DF0F3D5886CB8AEE
D26D9949014AABF728EEE764D9AF9DD776179C1F610A95C6BAF7DACAD9924C15
CD6BCBF8E6854D2A19F2002CF3AF40155DD8484FF03FFC89357E3671F2D1F17F
D79BC48A778BB8A47A28454F416A08BEA0FFDCF8A90638660039D6EAD9A62F94
912CB750BE2E146ECBDD16A1584F3EA2AB3D9A37817508F66A73B1D3587E0293
13665143C842566C031A2A8E96F193D0622DA31ED62553CB9EB3A7474AEF7C77
EC0AC421B42C9F91F41881A36A6DE3DCB6855B65AAA49345C3E149A8A38EC385
15582AE2C5AE270F31A408D74D7BC3E2ACC996C889BB23ACC950355F6B935D49
902A326D76A1E5D5E4B896D55B67837FE1B0D9EDEC9711F4EEAD910DA5E29461
6DF435DF8515DA06F529E3B69B8928C8C2623F38D58A7C524CE5851CC83DBE08
91D0F79B16C55322527EFA589455B7C07547E3BAAA4AA7CD8A23863C45B80455
AF129EA1A66E87168EBF926C2A91C52814E55DB5D592C0DDC1AC4A2265D1FC0A
773B6D8E03617B37D8D51A0844B6DC10555D229C5FB8E622B6373ACBA6F0387C
A03AAF347F7EF05FF514AB7A9E51EAD2D9A4C9C6B49ECBA54DD1C476AEB59B72
8D4C0974C5EF103E8B871C72619E1925054A3840B98A348C4DC8F475CFF7D51F
82FEF1365F7F41CD6C5D5D36D1281A3651C7D7C71639084E0D77352B79638290
12EBAB4CB9EEAEEBB91C50FD3E2EE0E437297DB82A1C79D0347AFEBD9F116385
726E908BAB7D1357504048C0F5AAD2CE52268155E00A81DD292E4CBBF03DE6C2
12FBDCDF50CB090E79A5CC212295946E98647A6F5903A6BAEDFA0A924DC4B863
18921169C7F112991FDA63181543D19043FAE24907573C2C7A684F5B33918BCB
DC61EB37D8D465C7134AD5D0447045AF93358ACF5DE07C87C7C948E85315A88F
AB1C999BD8C391F4F045EE1155E8E993302BBAE2F2AC97C7A8FD33D6DE81F4AD
D3E77BFE2AF0175D610A1DA0511605B28C540210C6A2007CA581759DB548406A
6277A32F6D5D10F8D4EB8147315E5BD5FBE888B05C33E488ABEE172D57263E16
5270A9347B262FC98D6650EAEB261E696CD413485DF93CADCED318B5FA421B60
AEBEE2D97206CEC98C42B1081E4CC1851E91B9C52E93EA9260D1D60B17DA2A73
3EA88A189F82702007937BA0F42FEF089A4789357324B3FD9B04D3B5FAD58C12
18CCAE10E6C52BCD44A4F9A2E41B30E5C948FAB0C8D1C62687650A8610901321
BAFE2BAF5CF065EA8A940B85D73B5E869177E89E3292F67CC0B78F7EC1AB6A1C
69E80BA05DA5A06B2AC8B13D844A44C61135C81F9D586E0FBBDD25717444C8E2
C33EA2B27F17185FF2C992D480DE35CE45261A450E360B5B7C5B6AC9F9EEB11E
CE05538431B56BABE8B32B8660D2759970340F342E48FC8DA1BA1FB22DF8E88A
895195A237D07BAF94FBD27B57EDF49EF1BBD3F9BE76C4CAED815AF7DEF66409
8CF1A167444F32F8F8C13A4F0786FAFF6850867C9A46507B6949BCDB99A30162
434E5810C493EEEC7F9BE98C8E56CF86C591B0BC77AD6C9AF45A1A49047C5E43
4B9AF7D4A2032CDD8699C15F0E3BD78A7D4D948933F88524592F028366D8473C
60BA84717637F4F62A76A595F3530B95CDACC4AEC5A51BB5F83F74EAFFABC289
CDE655EC5D586D483DA69DFE068097B778D17B0AA1C672E2020C946F0F8E03A3
5846B9D7E5937319AA5E3423F9BC75F8590A99802E25D5DCACA424FA2F0747FA
565252354BC5D4875DCB885EAD2CAB2644F1E25DF5F6EF5B5ED528E4E09C2C63
CFEEEC12351C5B069D0B8C6A16A9C18CD266D08D531F526EE267EFED77AEC294
C1580C3DD5D5745C5495DE6B1C067C7F67FD1FF0E9B41FA08A4088292DB27D71
F9FE454C48DCAB35CA1FC6E44D19DC4D12D3B0FC450E41190FC3ABC45CC60185
F0C9448FF4EC6D68A7B456BE151DE1901F274415E9DD03057AD3CB6C0CC516E9
4EFED6873046F14E850D30BCFD2B6A49A29126C832A4358CD25F409B5A642CE6
C33787F3C927C79180E95E4424CD1AA642CABD334B5FCE8441F56E2FCC3EEAE7
7468458B9BB3FCB88DB55532D949F5AC0C6827F7D5A8739DA31ED82CC4A183ED
86D278180D66D97CE9B52FE245BD5E67BF880AB2CBFB7909B93FBE74BEE6955D
3E4E5A7FCB06520983CC6741DE803E5B6EB1E7F5517A860664A891490C327858
58538FB9793E0F61F648EF2A0C6BABCCA54C2223533E3493482391604EC3CD33
EF1F056F90EE290B983A7CFD19B9DB65CB41D0CE65F05CC6ADE1AEF179902CD3
2D6AEC688F02A7365B66797DE1EA022E312704FC79F789D849F04C06573FF3B1
C6FC0878C3650985C493691CA69CA1A46C02C5BC7E68BB5FBC6433693F8B5732
55B54C18DB0F5E3923464EA86D1C8E6E3F0ECAEF9873A424C98F8E905C9CF80F
C724E5A519BBD1CB9D2305D1CD18F7FE5FA60F8F48E2604F7775BCC1B2C98BB4
D234F2618EBCA323CC1B73E3AB241E4E95C8D834B259C1DFC96CA8BC788F1DC0
606723AE7FAEA04B2F67E0F4215B2B0B1A7C67C3FEA42EB54F22E9A730AB8D49
1C1730F62DF3027C7E083EE4F51AB14E086217DC4B4263E9F2E125D61FB011C8
BF9A79F4DF0F83D532C9C58A27DAD137F87752CA18F8147E983175FA45058011
0EA474E0EF069977E88971C070FBAE2C25A7104589EF3882CD423C57722A7FAC
52BA1B67DA2B7114DC06904F0684E1AFC253FBB76D129DA851411F7D28F71BFD
25F6FBAE41CCC9DD328DE62564D95BD8A43D3FE1E1A51AF1286BD0E828B1A347
A6DE47C5FF27622AD08A33AE6C255C39ADE7C8527662CC0F00E35FC8D748E107
1C14C88C17644A4456E4E912CFFD9238607DA31A589BA7AFC5418E3A99D3E725
32C2593550EB0DF54DF41CB97FA4ACCE1DBCC676DE111CDFEA91C7326AC7FFC2
A65A633FD0288063A9D580B87CDA9E22839448247D40B23A37DFAB7F41DFF718
D3C00F8CC890179E563FD9E79C9FBB0F67B045A5B4BC0B6401B507B92E99DFF7
DB2A6AFC77F1D7F6CF6811530B0B4D7D4EF68BFF74A9D07C26F5D34D728AEC71
6DE02D9B04AB97510C130D8B0F9E0F9119FAC6A39573E6DBF51E2B694582DBC0
21CFE1217CF272748BB9CD713B274591CB08CD8DA62984A5C05FE8E33ADD89BF
C138028A1F3B42547F2E2696386D99CE937A447BDB6911FC36CBEFD92681F97A
F2292BEEF24F0897DA6906CE5DD0FD4110D1F8C27D27246CC68065D26EBDDE6A
8022C8C79683277DB9CF8FAB89AA9E4A5DFCBD7BF07640DEF13FC41F53379756
A0701D2E33631D9F4BE5BDF4FF6FA94CFB80C2CFC43D4DFCD80CFA8F3B80EC57
C8D69EB04E473A783EE14FFD2CF4DBDEFBE8ADAA98E9235B73A025DCBCC48BEB
FCC3545206E4DBFF9D8ED9C6ADC0227CA9F0ABABF96116C999FDFD19031ED21E
03B6489B486D08E9C8B923AF151896379AE11695B43A7660EDF770EC6DEB9138
059A4C12D235916D3C9D2C4B706A00CC6FC0C6FDC412D1B1E0A59F3E02D12894
A5D3A331145DE6FB505CC19634E9A154886850EBCB40E37E2ADC185C844E9F9C
4E43A978F1BFC81823452803F865A6C97F3459AFE7E0EB1D619B5F6EED3E2974
6FECD118A8E4C90EEE2D3734AD1E8ADB31C7C020DDE6F40931B361B01729CEAE
21FC2ADDB6A500DA1D8C443FFBC94B710C5C325214B108379F5AAB6ABD3B1463
840A8A80E452A3E7C67D29AEBB1CFBE8B892DA5D5E3EE71DB5DE9A73288E2E77
AD04480154BB37875DF0806B73D43BA65C6ACA4B573EFA52D75A80300ECBD1F0
1C4DC04D299DC380ADD41DC1390AF794D6F715DFFC821E104DCC6D03BCFF6055
BC430DCF84FE1E8E556DBD5F54C609517FC0AB69CD2260364701EA7FF9CDA575
786E981F2BEE8FC602BBD6EDEE6FD1192061FC3B8AAC6FC51D99516B2F835376
13171619F5B48E1CDCB6B2D7F80F604D5078184254E23DBFCB0F30248D8B9C21
090CD392E461B9ABF52712E294C9D4299DC03994C723365902BA6A6237F57DAD
C7820424FFC16DEC0BBFCFBA6A9DC19F1BC96FEF8041273F37772D1624D39811
5010170F8009F939C164F582B87A90B3EAB7A54D3481D10A0972E56CBAECB420
596862B986315F29C0106A13785BE044F9AF47CA876366076CA0FDF190DBC423
71036342263B168F4E160D094F96DD0947684B190468BFB7BEDDE20900D14EF9
27A2F0C3A8BE6E4CBC44070FC79D82B2B2B7105E24F4943B0272AC32A3FA3809
5EE5F5360FC3D7ABFA35A439580E7A4E2E206EA2F088037C4777F1644A7896E6
3AB41F2E6778E8050927FF98E5D3084681E2BA8443917ED32144EAEA5D79CF20
07C28974C53324D10E9A24906BA6AD04F1E0F80D6680E7EEC0C95F47CAD96354
BC95F3471EEF465FF4F2BA78019A55A9572CECD9CFB42107AC7B9DA3131A64EA
CDA0FE1B91D9A3BC4DE3A65DF7566FB12A6105C2F3C9722CCA654EE273F6A0A2
10405C9B5CDAE839A2E09C012CEF743BE11D57529C07C114D1424B781B299EC0
4E63E90381E3A52638877B18EC6582059C041F2953887F68EED03DE18F36FAFB
39DCB99A05EBF833FCBB866F5AD692F5610B75F9E7C6B4A4F614773EC4E16884
90583D72105DFA58305BFB1BFD93EE0463640CF867282DC19D247C85DDCB20FE
8D66433855F24EE3252A7553572C4071AD7CA46483521D27F307153D4FB3E40E
E3C8674BFAF5635FBB29CE87B042913B523E0A7ED37BB4161541AEF7E2D5B0E0
DD7E92BDD242982C914EC0302E705EB7552FF9D01D89CD4E9E069D23A672853E
4F43E19E313F2DA928B32687E2A35DB41F9E8162197A4124CD5998A566BE5EE5
A99E4DBB2A2EF0E686A3BEBF3DD8022A280F96ED760C57EAD7CB3795ADEB7557
D345506812B154E372419BEA672405C630BC5257E8BD847C3459D7394E1D03D8
CFAC965561216BB91454157635FC5FA5F5832BAC692909E4693EB515B933318E
D7ADB6DB7242B9C8DD5FDB6244F71CA4F3006140D65EA226376A6EBA0D46DA73
852CEE9FD4B49DE42F60E04DDE79E3A15A697B13763577209080101162F16ABB
A50F261CAFECD55190F15B7722380DE52F7B9A1B6EB323B1CB6A9CB2FF6D21CD
197B4C7B75948DE075B321B73A951B83D6C3D3D77FC9221B995527DC000A2BDB
FC0703B61798335760AC36EEB2C717F4975AC6A410E42E6E4C57EABAC66A48AA
CCA7F65E178F5908DC8FF616D1BFAA82E1D8476C40A6EA3A884A4523F27DFDD7
A951AA83ACA3217B64150A7CCBF7EDB80220C5CB5CD40DD50B34C066C67DD497
FA5AB1ABA3EA4744B72E0AF071BB2DAABE5FCA5BCCE918D5E46449525A4DEF28
F9A81BCEF06D768E9AA488079366B9E331D0A01BF44C1A296FEED926836406E9
6C49A48DAE1DA613DD54D9D87CCD02756C2D25F4CA2B2F44626636E7F73EA89F
8526D782AC49F30695A53C6993666CE1C504ABC9F4E0356486FBE431B0D0B999
2B86EA41C51AF96149C18EA5274467655440B58171D2BDD5494804F0825361C0
0DE0DB5BECD106887725AB50848E7DF543E9E532ED0BD0CBB0868821AA97994F
A366628B3EC1A85807B259FCF7E16415F4870225453753A46D5E6039B85666C3
0C8CF296757490D6FA81BA659F74D54CB817CBB494457AB6FEED1B5EAA0BDA52
26BB7BA949662B9740350056C19A1856B9B2EF42FDEE525DA4029769A1D9B3B2
2BFF3FA494F5FBFA38486197A1CED5292DB08A2B45332BAA789B74A83724CB18
4053E54D5BC552D0B9A2AF85BF6D94B637D848326DF1764028E25B685F7A0177
14671932F87580F34B65AAC4D0092B32F4F17729AFD4509151755EF777ECD55C
CFBA81974D53938CFC0C87F0A3595BB1F41E72E1AD56878AF4F8BB1EBD2109C8
182F8FB7B894A52D881246F7254CB4F3A7BD34CD37FB970F7B11087373B6D43B
C6E86AA0D5F8874FDEE9A9EC2339CF2CC73F89825E5E7B4AA04E8E74574D1A38
3769C4C6C67B5DE636E4E81C6E8024F274F6971E3501A9C9C14ACAFB2CE2FB27
94FB56CA034C63A736628CCE731EBCED8106A7586C43C1D16FBABF62122C73A2
D4650A52EBFB496EC5F39754E728D27A2CE5A3782CDCEA9D47C9B2F89E5287DE
70F66C04BE18BF31642D0F8DC735BE5A8B2014DB72A1D4B9F9539CC6DFA06A7F
5E9284AF035C5C9DB4F8EB9844FABE985F922CC7E860F9FBE554BD27786B870B
25727E7084BEA8B534597C27019DB32D4D817D360AC4E8BD973675284E1745CF
8C9D578108D12E90D1BBBB4BD8CFA8DD7DF2BDDF087C0964D2E668328D2A3F0B
7BB9CB2949FA766E8C18D57637420F001E8A15A5C948246394A28518B5073FA4
923F60B6D8C77C1782B4AB39F5E9D87D5D3A0DFE1F1279241A117EB26DB06C5F
E00F3768B5E899601D4F49ECF46992F998AB2697359DD94EC1DBC724585B9D34
982C57A362C248751D33F7C872EA5EA529F6DE126C11432D8C0C7C65D7F26D92
B52C881153E8228D33EFB93F057E5964D38F696BFB86C3D8E85B76FBB1003EE8
861AB56808D424EE6A69FA8FAC4078C9A6504F826B304AE076AC89A74EB7E6F4
2C7EBB0E4730C7303CAFA48EAF967F4E48D78DC089620877DC4C65583F99B799
A4447376BF614791B94E30255EF030DE60C8D7F1405DE3DD70B00B6B8683C2F7
83EB3A5317697CAB0183CFF2277D34BF695767A9295240C0668BBBC9288498FD
0C72F63542BC3C3D319D0180539C7C4D2A2CCBE75F715BFEA141E0955872F63A
26C470C8F9697C167EE4D799425D869F75A82E117CB23CCB5DD5AC1C4710813F
2AFB131496E10B4AC47B7A2A3F30B50F0ADFA7EE3228B33AC6D011B6D81FE286
34C22C78BF1BF1EAE46EBE8AD2521A6DF2F7BACCFC378C3C1D14730295EB20D4
92FF105F472FF3ABB1F97A722B12CCD435E7165AD760BDA3B74D7E290F646641
6AFF5C55507ABC79608BF8B047EF214573D1A691177F25A7F3BEC5BF51744AB2
992B9433D889849579B378B00586F8A890443897F479F5C27BAC92012C2878B7
87BCDC806976AA4D80E4FBDCAE250D3031CA9F7BDB872CFAE6E69E4C45E09A70
04818A0D429D9E79B0AC0D52CBA112E25FAB340107FC5D1ED5078768079BB7EE
82D00F66EFE917ED016FC23D3987C6A3258A0A5DC0C8BDB565EC847F9DEF1940
A767240BD8B854FC624ABFF64EBE7190BCCBB2F7B25E752772980E67CA3113DD
727B96148F4FFFD54FFB2E9A79DC6055C22187DED382C02EAE5E647D66845CB1
BF145043BC77F5A7C158BF8284C20C5CCD5AADCE81C7427F3A0958D2DBD8234B
F3EC6AE885BD40C3A41CC82DD40A40C6FCC1D2813374584C6C19A8899A4DFFA7
C166E9ADF49EE8A628BB526C1339E4282C29D5A38930548CB93EA091F8AFB70C
0D2C2B16D171B7ABDCE13D9B38CFBBDD8C63B665CA594A4AE9A46CA5AC5B5FCF
3A211021A15A328C151D5598D5C19C3F833A70CDE99CFB059F74A670F8B7E527
5582F7A29CDB095BDDB2E9F6600943B0A5D3440DC803BB2FED2541523C4263C1
B0BABCD19ECC31616A409855639AB72C00B6B165E9D98209EAC333EE21FB2755
3D9E68FD8E40425F637B69537505EEF3F9C30855C6332DDD58A2809F9892014C
54D369DA41DAB8861155A034EDA04A62739BF05B2ECC34F774A466EE81D8C8C7
0BBC0151788A0B02112000839DD32BEFF361FBCCBB7EAF79C2A954BAAA9D49A7
89078562315577689DB99AA1E779A950AA57475ABE6675C5B8A95F4C290C1512
3ED927D490E0869B88D3793E57DFF9B389AC56BB4FAEB441E71B38A3AE076E43
654C207F12B1FE1D19BB42B6AF0F28A4D25FB6238B62EDA3E81CCDCE05F3BE1F
BE21024370FF5311772E3C359442510AEE79B4DEEBBEBC976DF5413F4324414A
F9E2A964D34911D4C62B2218A7526BF5FCF84574AAF687C5F0DDE969ACB16F3E
2561EF9986540D5F362D77F013CE41D65D26C1F42BEEAD417F8376BAC92B0C76
3339562A07092ADC225B33A701C86EBB353CB26CE2189788549CFBEF27C13E26
B844FDC7306718B767E084770FE6C02D4567A433FDE61336C4EAB0B46E9E4DC6
E0454270149A8E7EA6544E25F15142821B4BE0C61AA08F72D352ECB87D3BADF7
29BEA89AA4DB15E7B87914E1241A01B221D6712B7114DC06904F0687712E268B
24828D9BB19483ABA2F381D3361BD884901647BEE673108C0CB1E18FF0E2D239
B08020B4CC9DCD62C4165F78FF6C2B5F85764FB85FB3603E5E89F419797F1F6D
FE62647891132AF82624E24C9609B4787FA906BBA1BB013B4BCAF3FB5E1B4BFB
45899C436EE05FE419B44D697349FFC86B83C498C2CE6431446435CF22A8AC8B
C1FA719E6D6C8ACF2C6986A41EF5F57E13555656242DE39CACB29F04A43EA180
CA3AF831AE04309769AE012855F63647131667653466507D822DB3203F1655D0
4F8DCDEB25124EACA03980E9058AA11C04DB9D96DC0BAC9522C17D1E0074B552
EAF7A51489FFA71F952EDEE6BF74E027B9E25687B683CE35C04C38B4F8DF71DD
D5573612FB291085BED04F35B4AA716C348026B467F992F7C6B0C2C5FDA9D91B
8EDA78839866D4FE444EFCC2026BA3B8C55DAACA01C526FF587F8CC343AB3875
ECA1D7391DD26C276A8BDC8CCEDC51F100127522938A167AFDC7744FC9BE9652
0DE5D0EACA3AB6A0D31EFD20D0F3C4B34BB11F629862DE503BA2A8141331BE35
D1D5300CE13ACADB567B415635CBCDDAA119D7F29FCCEB9692815CE7C5529D1C
66A75CE0D750BDC541E31024B230E5068B86BB0F935A9C0759D31C531058FC18
51B1551DEBE206D14F4E31792D4DD0EBB572967DF6EC4140AC4E1FE58105F7C6
D5F9A8BB59A813C66373E8E10B6C92AD006F4791F7AE954050C48466C4352C8A
BAE3C5AC4BF26338A2840F574B28F87E78E63B871E9265A441608C0D08D2FD0F
D3C3ACBF7CBE02DF4D4D7EA29F29A2762516051417D4CFB404276A25D632EEC9
CE1B8FE42CBE5B34AE44D549F2F0C74C310FE433D1F1665F438903DA6FA72789
43B6B425030F750586DDF5E98CA2E1B70FADDC7800CF62CDBDA5799404494857
CA9A4EB40D5252B91D5A5F4C5C413004F5426F7148BB8FA709AF134427117352
9372AB2DA08BEAEE93767FA5DBE95D894BF5FE3B413805A02F6B421FC2EC1724
DBCF6E42D06B418F7CC6D43D43344AFD3528001B9E8FB902DEB084FA4170CF62
1599E3A9552E8EAA04386B24BDEF8257F92AE1869430C6DE57F025C7BFFDE53B
3B31226325A27C50FC50685C434D4EF1B39F0AAFD08869B878D12E4DA9E19DC4
360F2CAD2B361F837A595E2D887369E841A82B6592C14CBAE0301FC77F645F2D
5EC4E7998A567D881D8D93B10034D9431732197FB2ADD6290EA1FD74D5F0A23D
4101A0CBB8B02BF9A0FA7EE20828D3AEE19C8485206243E716DD77F5010DE47B
944696A274E4CA55CC716EECC1B24361F246F530732AF1CB2017855C026A73E5
2351C0977ABBF6B25A4E52E70E7E76B5CFEEBCD454B0495D1737262A410A7CC0
21A3B60D1D8504A693DE5A28210BA3704CEB35CFDA487CBF314702BD0D2112BB
8C77B745BD3FFABB7F59952F7731CBD3FFDD5D4CF3995EFAC48DC5BAFF6302C0
6CEC8E234EBCFA21050E7C85A4A284F10E4740E6AF79C16559451E481353077E
046E03C374EC2925BD5632C676A56B6212EB139152DB29A99B4DBC194ADC0F18
19578037E09962E46C3F6A5A4CFC6756F37B2A43704630EA681A76F87A0A3EC2
9033730F892E0DCF4958C077540414C2383FE3C57CFE1753ECC0DC25FACE0D11
2D8972C5802753D367D3AC6AB86CFE1D3E3239CADEC5C83FB61E70D397D8181B
63685B8E94077222B339700E11261D77A054E05F981164326456FAFB00D27936
645D537AFEFDC0F7D78E9220807134A2A65C58A86541D6E8532FBADCD06709DB
69EA68EC8D8102AB0F07FDF2EC2A27C9AE49C2D974720EA6385BDF9F0A2CA988
FC9618C2365F528F86EB5458DE20F9A744248E017D5A73D2ABD635DA7FFE17B2
573F5FA1F1AEE941D71BD74833CB42F7971264162BCE84A75F2D60D608707274
16BDB44A50FEF48BC5D73079A6D1754D19F4FA4B66C2D2580A35E742D40621D4
AE1FF654C171AAE71FBD5D4A72FA32E01AC83650387C7545162E36668AF875B0
F7DD466CE95D45E6B54844DB88D90F19C80EED0AAB6FEC1B5D4556470A37840D
B938098CD8E2A8586ABAFD5CD76BC86322361D3D538906D2379C424D985BD67C
D41A19E018871F3C17D010026DE0A6C3F6743B4602592AEB49D4AEA3575C7C10
0DEB0C7D98EB67CE9C25F62632EB30BDE3ABAFEF09033DCE9A0185C5E1CA0875
D16A5AB81D2891E14F84238AA682DC9EC2A4303318B2EFA40E633770673DEAF6
0552201A031E4075EC8AF51FAD8D578BFAED6FB7411781785BFCDBE4FA3BED0F
2531F6463F9B2AB7D175D54EFB893DD1D270D5456DD52043ADC089C9F1CC96E6
5C41E8DF4EB44128E76309EC9D0B81E5B41C3B496F6651C25CD7EDD6BA8DED34
B75652508E1947A8B25CBFEF2A1D311D42144891C3C0B1A03F71411AA92D62FA
7C9BB7380B17FFC45D38ECB125E6F3C91FAFD01AA9CEDCB21C2A3B0A68938656
8307954003001CC236BD3016C37C9A5242693DD59B70EA8A21FF44CF705F818D
1295DF3CA75EFD6B01FA1300BEEB57CFF22C7CBA28D69C7E54DAB585AC10BF09
2BA3AC50A5A93D31607964E58D19D8317B77DCB33B218AACC1AD2BD1C98E1984
76F07F32DEAB29245E726980576319AE8FD72E288AB89F4ABD066FFA0C1E746C
7D6F01A00C49620DA84A7D1D2EE42BC5614F0744B3D92C2644ADDAD07A448C60
1D99BA80B0717ACC2B56CA550B1CACD3D593D3E2644444F7539E67A8C054CF8F
FA682C08F9356B15C104868DB82A285837E62986F81259FFBC44779D50CD9F54
798AC016FEBAA4BD6A933BBEACF75F668D92289600AC2CFCDD789B3BA7625F2D
535767C6C91EF503119DC1D91DC405030D93365A941D51720E5B2BA3C6134BF0
DEF1E84FC08DEC39D507B7E8BD7F2A2FEAAD776F927C4FD3E0920790A57DAEA0
8C5B169A3E2746A3E3A70AB491FC90BCD65775FDCCAF911EFAB9012494634B85
53CD9E2B63F945504D950C13B31CB7B479C38F9E33BBFECE063768C3B08BA647
BC6CF4B18AFBCBA9C81F529E5A19177BBF30C4399A266CE0B3208E7F3A8D3DC2
1B2733F80AA1938F0353103DB83CCF9143F3A1A74792C223B978D0D24A03FAF6
FCEB9A99B7DF7107BE12DEADCC21E16657398D5DC47EB68012394F7EEB8B381D
6D359ED965A99750A337D1FCB6E77FE5E754546F80AEB2B3C473C510CA28AB90
147613F0EBC94C3EA000104748BAD65D0C55D2E264F74091CDF78246C28EE582
08E75D998BD0D3D8431684EAB1BB0599566DC66EF6FBE2FF94B678FECC74DAD0
DFEF443B395C94C477E87B645C964C6FB756231F818BFDFC8AF8091CFC742D62
ED0CB3DAD13D8ADCD2DAEBCFA2FD415212B23705BD63BEB8503ECDE21759C23F
5AC1515C0572B210BA3FB1251D008756472C83F386A6CB3FECD9149469F876D8
B10856C476FBFA10D11E87A61DFE3103AF0DAB5B7ECA4C0234D36FF51BACC428
CC989ADD61913D31D50447912CDF2DD21BFD7CC9E5E7B232CD9570DED42DAB81
56C620B1E6D5B8288CA707E7FA2C69204A4608398A0D8F8B740631E360AA6DBA
1E54991EC7922725600CA4EB6A6F13A8292504F21D932CA72B041AC9E5551647
965821ED503815316CCEC391025FFF8E6838E92AEEF0BBEF5FE4ACC809B0EC85
1E3DF647BBA2684C5C2EE1F17D5C32DF16D6CA98017C7C118D8C67F71A4BC3C8
794BDC3435143889A94EA970D57AEE7F69222502A53FEDBC0FE9DF448A861F57
E8A6CB09971EDB795C30F9EADFBC755A0D2004C82AF464D3C6E30B40EEE9D221
50DFE31081166852788F1C711C074A9C05A17CAB76567CA566EAB9860D43C643
3DFDFFC51487FD8E17CA51A0F6F9BF2FAD68DD823988CB606754A1F87773CA99
7012F8AC4D418CA0578CA18B1375455A8E359BAADBDF8486A6CB3FECD9149469
F74689952C838623B68519D11ACB5A55AF22AF3C69EC4231F69500C16AEFE3A6
FB08B00FEAF1D31D9470ACE7B3FAFAA80F81E8B6583FD578DA222E4BD8CE1570
DF3A64D5FBB214A8B212519D0179AB530489D01BB1DAD65C810E005DFED61284
99527AEB6671815A7D97C9FCA0725A24BCA26C145198385E1C317DD3AF44E468
00FED97CA40252808F6AE9E63CD18E1C13F8419547DF2F02C743DF81C5FD2EA6
908A076412CC883E7F119944A92238A713353D9B7B5541B8222CC18C3B4130C9
93D96C804F030B04DF3F1650FE88AF224055FCA8F880CED6DEE6CB1A043AEC50
9D9275091FBADA15B871D8EE505AF245BF07D5E36897F43F0E81C579308BF88E
604476E2892E205220A35116370C773C4F668EA5AE4D759620FE52D305DD6EE9
5055C1699332EB29C4FF1BA559FBABE75EA3236DB04B400916A09531A9399203
6C78C8D01D6B2324AD7DAAB60FAF8B43F9409392E4D9197B434AFA1C9DD2CA41
A7388013072D6BCF97777A641205316B0F6321F150CBF56FD834CAB6907986FB
B3EEEB74626065C076EA78C4753FDD5CB10A3F146E083D3DB714EEE9BF2B469E
CD3F1C3AF5965BC832A8843144EFFFC2DBE5AE8A5C994173A8F1CD0A5709AC8C
FC3EBA9A0C45B48925B43CD44EE9B07BF734DA1968122EEA8D656FE3764983B3
2A190329F46A9746A47F59311ABA6EFC9B2DED47D9993E9A64757D934FC3801D
241A9780AF5B0A191FC0939C560D1F3A4C867E31FC31D15D7A3D64CE12C7B0C7
D32CC83E8BA0C0106657B45CBD2FB749E8FEE0AD1803E4DCADDBA121E96EC75C
62DFE73EA3FC2782771202EFACD33817D7BAEB7B955CAB886EFA98BF79887FDA
CE081033C2640FBAA2FE8C30B542352D6C4CE712BEB58A055BBC8AD9D465DC91
01AA8D600E7A60F429941A0C8A143F1F628CA9937DF22768797E9DE1A34E6EAC
BF4ACF83B3BA4339968E9597EEC16144700ADE725EBF10DCF364E859A014650D
D9C516FFEE68BCBEA7419EE8EB824926B51CADA6D39CFFDBA38C11C7238C7383
70C489C8F9F9B4879A99BCAF708E326D070B8A72B4B3BE25BF61161FE8E9B9CD
C1B4F27BDAD2A04EAFC90D9DEE76C716B0F23FAC23C2866945E469816D87F586
A0FDD2B4E3D8DF877845C60D5E169F36B810B95AE46788E4C3162215CF4FFCE5
F10482205515FD0D0C1948BA5670CBC359792ADA821140C4AF794D8BDD162A99
57B73C12200474D956A9A0270655811051028B571E39D1A96CC9B4770C96BA98
39BB9028425F71EF541587018C30EDFF30DE17CD6A626FA2286373C66C4E402C
E5D8C9E4B3265D82F58E4FDD4CE2E2EB14C9C997BE5651DE0F5DDFEFD479BFB5
2AF3068203896C931C7478B14C8EBB7CA06E99018B327538CCDC0E508C5447AA
EC13FC4F7294DBDFCDCEFEF373D9449836DCDB327B3170468FB046DEB1602C06
1D1DBBC2F811A214B363605242F5BCBA9C0E5A09B0AB344AF757886F3FEB7043
4A3938E1970D8EA3CD40C7B8FB44205899626AB60601EA695F3FD5E3C045AE99
13F8DB0E20616F63B068E36261D47759D92D9231A7717976FBB04E6A3577A0B7
4486349B1F747F1354E70E1ED37284DDD65E8228EBEBEAB31E73863967A4FF7F
CCCD04CFD61476B4495F91BD27FA815982C58509CC2E624EF96EB96FBB2FF874
8801D533DD1C8FB473775327EA04B84EA9B0D87E5710E91AB6F29E754B094BCA
6D6746F150205FBE1561F538099EE4652F65346FE977F9F21B00999ACC476DBB
82C4E78A7B2FFB41C4992C8CA30CE5024BC62C59AE5BC522F804C219609AF5CD
8E6DBE4B192D787C0F22DF095E472C29CFDDA52C2D3958D6DF5D860AB55E7F75
E7FCFF275EB1900B738568405CAB3D4CA7A97394CE61440CF7152405E488455F
8ADDB697C8B6DFF4D981D110DE486FCF48DE1C9C8CD84C4F2304510EE263083A
C617954E8256BD9A0594D1CD925DDCC2EC217BECF37587795A47CF46F5343A0C
E0D06EB59CD75260255563C88D594B97DCA0A1D9AAA65F0469FDEA0CEB1E24BB
0976CEB7DDB51BC60CB8C0D4B64A6799C8449E97E13CA0AAAB196E8FB3152043
9587FE9FFCC2F96498E0616C674CA5960FB5B52B955569B4CF96EAD1B32729DB
E4756DEF299974B3D9D59AEB7A7D8B455FF753AAE73925C1E355073A03D6F55D
EB90E504AB786EDC328977CA11504A0F43D0C5BE84E6A832C2CCD40CF07EA3AC
24740E0DBF8060AEAD5106824D748D9C085BAC95E031158E999E78EA84B06334
60821B08AAEA7F51DB0C3AC05D7999C5165DBD43A47AE3E906C08CA78FA4E0FF
2C195A39220AF711F687AA6A1FA145DD10F981C58222CF1C4DC905B343BB7241
6574240E31C336C277E7EAFA734D911FB31839155E86F09EFA9F7680FA088B2E
A89D0C478B7D82C25D33938D4CA07A22105BE335CB2C9CEC2CBDBDC9CD49C47C
8E31E70FF75FC4E78751651DA6117D663E34E5A7DE2D3AD36415EE8507501BA9
9A3A2A4B3708E7272F426F700148DD7894AB604A4DC5F51D6C38CD221BCC55C3
76D0EA30C9F0666C91E526580F0DF32A7E56B2EBEB58BB90C46BF9C8741B7A57
F0B1B2721C88A9A562AD35EC87BD0D96D100DC5B1BBB1007A04CBDA518D13208
7207CE9B22291F5811A89F3F1E0E062C9A833EADEF9986C1E70CB7700EFFAFBF
71BEC066CC97D47608E12E15E4A069800228BAE3E6D4040A1984D9474D5EAA68
4B8EADC5D12DA28C937A52B3D15468A15A716D4A007EC9B5F8E0E2CD511AADCC
74FB95B81DD47460B05EB46766CCDF679581B10C56FCEA32C322A4E7C9AF09D7
3320237ED94607C3C045676D4EF218BC7AACE9AE959F78BFAC66353911FD032B
E7E564473F851F794504BF7C7699C8D13A373A18A001810E42B57078E36F74D0
302892D6D3993BAC7CE1DA3C50B340864B2AE897B4599F15587CA5DD46DF72AE
90EA4AE7BA33F6D460F4E8B7A19326ADA72452F03DD228CA807215B183FDCF44
81776BEB4CE00ABADB41AED61BC338332AF14A0CC2BE387BA779B740773A951B
BA93D08EC234291027EBAC041E431E629B6246DA4B173E61879C48F6B34D06B1
14B9381A6634623409DBC3224E613819B0D59ACBEA11548A5F633E20035B35A9
C0D05AE689E22E93F9E84DD9E5B07CD503528E1BB28D50C01C0B9D9D33E13FAF
8B84D2EE4508EC7EFC098F3ED76973B67E1EDE40002AA5F65AFD81A00CA4343C
AF8D5E5753843A42942A17ADD7ED20E5A361F1507C3F02F27087834CB6BA824E
AFF494AB782067526084160C50D50D7E8DA9E0EF30E5FD6C70D47D31637BC0CD
4D61C5BDD7B340A9C9F279E5D41653288CC946C4F575601B894D63C9D0A6A9BF
AA49F87C4FC0A7241808AB8A493E547630284B10206538F39266CAFFDF5AAF91
F50D9A6D03304D17D8832E0E2EE836DB259FEC75B3179FBFA7ABA67C58C39E13
BFB45C117A3C3ECDDD3470C495420809E678E4D2A0C4E727BA4D422508519AF3
280921CBE785B67534E0CF214C9C7494568BA189D2EBA4FBDB82C06FA89E7D93
540E890C37971E766FCFF7D74C648A9DBDB4B3A5CEA866503D32708C76C30BBA
AE0F953D5B8A1125FCAADAB47D1432492342364879CBBD2CE2FE7DD34459EA1F
1A37BF01F1D8C20804D0BDDAD19ADD8C30503B4AC81DEBF1EC1BEA39D1DEB063
C64DE3558DEC96A4253FEAC804D0C0E8C41C1FE96A25738A5FE7D15D283886D8
B4550D5216AC3669C8AB6FB3AD6AC55575E66721F58FC39D634E3C6654C339D0
E0541B9100595D24202DE22DE3D1C72ED106E2CF58EB60286FC8CBB7109522E5
7F5448092DECCB9BB17C47D9D9F75353BF0CB3E744BA93A81FB276D10C2AE96F
1C5931D8580F788594E908D290C4BBAE670788FA0F0A5CB3768D11CBB79A5BCE
21BFA46CCFD6B4158BE06C768C73F6EA0CF7F3371CC1F33591F2A81E947884D1
E3DD1A897377148DA08FCA308A1CF611A29EB57B6B0AA5B281ECA036CF7B0C10
E0F50AFA773ED04601FD02E569626641AFD2B020ADF923F763A8F3E79EACD5C3
AE21E8E0E5DD13EDA35B6F37E0922A3C733FB9D4A3C8FA41DA5A813FEB57905E
E3E757C1AC32898DF769F5297CDCCC70233731C0676E697F344957560EE4A099
7A35BA452DF2ECC9744C9CB752CFDE7396076CB75085E38FEE6DF0A877D12322
8DA5FE0D1FEB64587836A434FAC6E77F6A0D089CEE8669ABC257E8C39641F93A
108E31A1B913217CCB026AA899A70DC8848152E951C0C3F6AD7B57B980E424EE
F51667A11F7CD5CF8FD053E67223B64D740B7B569B81650D2756FD03F4C387BA
309E14C9C0DC371018784B35E7C07516D6249180431EF7F7E7DF68B41BDCE888
853AA60E8154E8D690A5C6425AB0BFE977A915F08874D3A0AFDAACE263A96C9F
D75A5F0763C731FB454C7CD598BCC5FCBEEFA948DA9BFA7CF6A3D8C46514C0CB
CB2F5EA46AFD1EA35796755FE3A19CBF0E048F7DDB27925A23469D89762A05D8
B2DAC3248780C6B1BFD5E6AF3E43BFF510B167E66C33AF150744DB916CA7E353
3C73FA145B8325EC1DE4CA948419D2D84CE582ED340767DD50BD28E2DD1BE584
75ED6688DEA3B2A11DF0545AAD134494AFBEFD9D51E146F6604049D39F50717E
4670442DBC451B029ED37E209DF7B3FA846C8B8B8A7C02A5ED1742EF3CB42EB0
ECB15949FF35DAF295574EBED60685F10EAE1ED416C434630875DFD4500F7D6E
49783E9FC958D3954BB4737612EE4A3F7DFF3DA3EAF20FD08453F7D3A3463ABF
03C400DB3DA848FEDAC339FC1A9DD20075D7CA01CB56E4A8051D5276ABE7F97C
F8D7F3E36B58DD3E802C89472529D7F5D04B500925049188B9D91BF76B2C66F5
66BF46C25E8209DD5BE02E44D31A948E810B6D13391FA794098F3F00148EDEC1
7CF4BD5B6DCC5F7E835C3CE7D4454AAB910F2B78716527B77AA521C155CE3B0F
52E354F0BA788AC7D5F78ED849FEC7A065461871F62A56555CAE6BD34D78FC00
725082D94E2F8F2607FEE135A7DDB8867751B5DFB98FB7FE9F0F90BFAEDF4FFB
D177F235918A5224314977019192AEA21087764A217B1E957C7F35FB2F904B8B
D5F3DC3C3D69983F4BD65023FF7C9FA7821E5C552F14CEB5365EAB02B7FB07FD
785518D695E1B816FEC3D358A9AD4789D649C555695970C7A1BAF6E1066FC08E
31F8D9EF29E177DD06FE4E6782DAFD94818CBD1E5D78441901F4B7ADD9CC0DFB
B6430507EDAE822C094898871DC82A48777DAF2044654BB4DBF82612499BDC7D
0DEAEDC894F11405B03C401E6EEBD0D4041092A4D0AF4F4112CA0619B8CDEEC8
BBB19BF3D8420C3FBD6819ED22A9E83B7C851AAC3FB59E4C7FCDCD4BE9435A99
D6AC9ED69D15F816E3009C46AF7B6A2D09BBBB49AF81EA02D73836DCDBA574C8
6F881A94578C408CE112847E2B1A0BF9568C867B2214CB8FE1B9D5293F54DEFA
D8727EC27D23CE3F199B1E26A8BE85806F8765DC98667AD695BE4F2EF550E362
C30F6BDC0A156BCF1B2DC03F1A09A00D003043473B8374559FF49149C1BE1F6D
0889B8919A01B74A0E596D3578A42EEAF7057213611FA533723F7576FE07C102
0263756CB1407F1E7BB6D8AFFDC6C6849C9019819639E9CD0A6CFDC52F59FD01
BDE8915301E406E1BC306254CB24584CE4576C0425FB5461B64AC315E983B423
88F719B1D3DDBF8BD04F0103160BAD80A004680A23603F226717333D633DF697
70905D11D3022EEEE058F0316E770CE49D38CE73F6589DA9180169A94C445DB7
A56C39CDAB0AC7B16C60C4B75EF73B4C6F230A97F618FFB8868988CA4AE1873A
D52DF039B9F39375401A89AE1F9CC62DCAE4EE399FF9148A791304DD3DE38FA2
FFF0C436DACC0163FCEAC4FA882EB97C873969EFA044F44261FDB2572E1DD4EE
78D24DACF418B6AC1E4520E8091A4F68DED3488EB9ABDBCE6E73EC5A0AD42D77
350E4F14961D24B396DF750E2C44E5CB9DCE747E296F7E78CECED52FF420A24B
253F197A5AF0C7005F6503160BD5153638147CE802E9FA873DA579018D8516C2
CA8F90DE024007029E62858FDFE1EB37347CAC398805FE76AC7E2E0FA657F157
C5239A213A2BF53DC4A68B4EF23567919659B69B23BFD268AA69F8F47B089AA9
AE9DB022E1D4E2687425568F85BA3C5C140343582C9770D946F440FD6F7B9815
E5C1D06AF1859F45140A382AD6E699337FC1BEB3504AB42AE20F058CD38E5BED
F51095A4C68C91442B10B6EA07CFFA2D226FAB1F3A33C66364D76416676D602A
4B946660818EA103F17FB52384982084055F651E11ECF2AAB971E0B14CDFFBD5
2DBC9DD4F642B77BF67EE5D5164DBB576160A9E92F951E5220797F3BA414B081
1D271B835F0FA0BCC20BC41DBD58442A6747739DBFD8DB8B19E152524A12F8C4
B27C5C38B19E5FB75F60ADD7C8BCCD30CF4503A25C97F1D066C4F0C20012DE5D
58BA9334E274E26C9B301BAAEE8A0237B19DDC4EB001A723EE59734A18EB12CD
7C54DBA9F8C47D68361F4CB91E1B3AC0BDD21C129B0CA2EA52E4F9C7DC23161D
60569ECC2EEFB7B6B0263B8B5CE6EE63CED9F3AF0F00F1DBAC1F9BD167FCB362
05F5C3579801427AE607D3B92F8F73013AD9CCB7B29C953456EBCF09E5638B2E
D9C9B8553DB4FC96FC35ECDC38C3E3223F9E340C6C4F76B908144FD6A49D62B4
AA487C72F456899AB0902E53B669AD60434EF2824246CD4B7C7592758D2EB863
2893CCD9E23F72E3F5010A9141AAFCE6733B371BF3603FD02C2EB4489007C555
A6A08B437AFCF723A8F721B06D8300E230290370856A89FA8D56529F252E7CC5
38FD5DDB6269B4BAF7DEFB9CEC1E1B3486EC31DE0E6B78A2DDC6B495D45BE77C
89F251758E01053AB0A81A6AA990EB29EA6CE284EDCD95D7D750777E2FFF6F8B
D0DDDA24F9A1F4CC349ED95F66BAAC167EAE6E28CC683E82F754CFE79598457D
94ADE42C0EAA3220D2D2D7E02F4D95D8E30FDF8339ED63CF34C743843F5E66A3
1AAAAFCAE6A03034E2281BEC8D06F7BD59987A62922FC625AE3CF4A4D2C34A38
B9F346E5FBCF13F6DF8F7304AFDDF88F35E1F428DBE74E70427663479EEC94EF
94D9F2096E76F1C558F40812444C6F0F4DA3FE3CC5B4179222A29A3A4117DD4D
41DFFEE4C98BDE1639722EBA68885AAA85E5709AE00A6391B0E5060513F842F0
AABAA935C0E086E03D6A47EDBE0DC8DB890D11D2030B12ABD16FA9763D1FD97B
C3F78873E3F9D110C52CC5491D905739BC57FEDE755CB3E1DC64691C3E5A6DD9
BA742BC4D01A23B40B4706EF716D48661DB17D104C439595C6059F3AA22CFDDC
29409ADE33D6640B858627495D0E65F7BC578D010289CAB665AEA6C2A88BFA33
BE2DC40682ED03A0C89B0EF64BB3DA65F519DD4924475D48FFEEAAD3639AF806
9CEF3AC8A3E2F65B2F01AEF2D2388978777089C2097D945A59E873F5171ADB17
357090BBB5AD6A38279A4429B293905951355C4D4A4F65BF1A7BDE9791183CA5
F1FCD9BACF833A9D58F384DC27B11B3A6BDE892F09546C3577E87ADE9347C66C
A71EFF58AFF27119A2CB02FD948C06A390605E645D1BDB1786DA4732341E18B4
EBAF5DB938AECA1124060D8D138F01FB473E1B74CAFCBA2E54C16968D6B6BA19
ED3CF567435DB540554CEB67966E9B6F104FDDFF62E82B16CBE3D401AAF3E79B
A0ECCDCD40CE7AC49715D8BD0A6803D8B14E755C375CFA18AE9DE6B7B84AF75B
8034285F698C771CBC857B6543961F982B1DC9E72BC2B6FF31E85648B600B397
5941C98B65AD51A15EE3A1298A8BB5A10DF7F2745FA723F7B76170F5082FDD63
C4AD12A670F78AEC964FC92FB94E5745399DC1A9FA200F391EED389AC49F917F
D5022A280AAD4492BF9B8D010255E47529A1A376E79300675ADA7BE86FBA9E2F
079DD99EB9E441238EEA29B2CC6DF6B650D5E9F54F0A462D1547866898813D84
AE5252F897EAFA0022DF7541E2B1E92984CE9B682BB5EC69C3B014356135AE24
91FF98E998ABD6ADE20FA5D6704780155DE7679DCB4421058BFCEA5746686726
B97E41AEA8DBB99BB5C9B7227FD1932EF39DD1926BA17D82D933C8D68D069662
1DDC0769A3E9D61D8A95883ACE2D4C47204E04BCE8DF68B8DF68306BC915226F
FC31DAF7A48415AA5E57C1EC9AEB0B7EBDB62D7CC4E37C526B2D06F5FD6EF65F
5CC5102A0DBE197B6C12D50DA82647B305ABCB72228DE45A5EE668D33757CFA2
659B2671CAB65C51535A3FC7A83EDA41693AECCC33787D1BCCE89E007B69C309
89B4B8E897B8A1530FEC51039F393A1943000E0D0040E3D2081D28A2B4A0410A
4C4F9155F04F6E53FB446E639CBAC84478B2C654A7B623CE9A908F515606DC59
D92387000643E07C5C38C6653D4DB956803BB4044BF47D137E00D1784B3283D2
C31B6392F8781F8DF5217430FB69D3D545E4FF8C3E107C6387EF0A0FBD38011D
41F161D847FF47CCFAB743A7BD4B05A68B8E2EF94ED05EFF768F7C93878E6872
6C04DE4B7E7F84C9F9A8AB08FF1066E5A6B737C6AAAA382D89348B3F51E57269
15ECADF28BDBF3606873D0B5A0D0689838549710A46414760111E8BF0C3E924C
BF63DB32085D169191A709DDCDC37012B0E77BE1DA2F9322E74EB972D2D5130A
EB1AA28C41896E89218E40D4ADE22564F6E2B0DBCD892EB2766E64A4AACA876C
844050FE5DA4E2B21D47467AB247FDCF3A557C266FCC8764025A57DCC611A47C
3CEA130952A97FCD1C8E1FCD9996F1A2BC76BFACAF14FAAFADEA18374CFFD453
817EFA8BFA15ED768A8A5EEE220B867A29BF156988541C7D762BCC6D6F6CCAD4
C752CED96A2DCCC629E22445B90AAA2C20BA2AE97207A5D3D7FD84CB8F09E094
DB9927FB96E2DBB5D7E407290F42808ECFB5E2D94B18CB27405613AF6AAD3CAB
0B125ED4BCB4D731DD840DA9B08E8432C049A737946FBFC4D184CB34D7DFF908
A4469189F27E8AED643A39B3AE24A86EB3CABF0DA206C10990799F44AB55F8D8
DD9F3A02E1B0CD30CAE5DEDA0BE7798657A420F4AA3559B8A91D37FC98181AB0
F11FB466C821C0D1B781AD0F4DD39C3C6F3862E17644FC22C94B14D96519E76E
CD37153DFC13AB62EEFCFE1A3F320355187E7D3B4AF9FE8C9886DDC9FC873063
100584B888ACD489509E92738A09C2B9B8511D3585517AD34412186C61DADB26
2DB600EA28CAD6FB015079F820F409E5E1146683816E5DE95E892A7598203057
0F576D5B8510CBCD35DA9D0F3CF401ADF9603D1D6B850AB4AAE2C999221A4CE4
ACCC0E20C4E0093E23EC301C481C965C68033D69B3EBC1556FCA79F737932511
5BD895D4E66381C8FE94C7BA8276DE7240F3C9BE670531CCC3F4BE3D987481F6
2EFE3C2E71539C337433378C0F9766F2A3C3D0A43DFE7F4893F5C2F8CCE8EC69
5D829948C67FB7234A89259FE67295AD7F4B5EC31206AF7D603F64AD4EB515C4
674163EDA3E5DB9CF7751C5CE030CBBF15EFD9457337EEE3047DB238CEF57CCD
D5BCCDA3B2A403D6E9E52C726F31F7D7F0A5FC51B272623B67A297A1D759BBBC
13A367C2782DE2EFA8A1B514EFF771162B68B0548BCEC9E33700B5491F4F7241
83DCFEC917DCD823DF8673A3ED8B3CCDDA013ECB5924FA694350E3AE8D39DAEA
C216A5563853AEFE1D2139622F6761F85D385982FF8D6122B714DE8DC7EB65F9
4C89A3B8DC319F8B420CB79311869EC04085C49B63A1A9A1EAB46577D001BDC6
5A24B93A7A07820D5354BBCFDB619FDFF6D8C1883917084AC88DE01003E76596
B595805B4C92EEE087906696FF219C90FFA27C5A51519140744348B1AE433F01
4C0371FCD64B73C5A09403556AEB40C57828E0FEDDD19531B9DBDD61066FB9A1
2F9D2BC35CE3BA3BCD2097A2385344625B1CE8711574ABBEB307CEA9D4E3250B
F48C807FB0BA4099D70F474B8E8C2FCC36AE8FF19A8A72E758B9F03D7E1671C3
4E68F40E464EB222B5CE76EBD1BB1227741D84018657F53F68CAFC306BA89AAC
F42AC98C8BB4EB3815FDC753002BAD3082F27BC6D73E7CCF9CFDCE51BBD560F0
7C9B2903D359DDCE4AA6608DCDA4EE5CB3EFFED5E0137B7BBC81C9953F6E0382
FF6960EACB09CC1E0BB91F9B6BEEB9284E25A1A0ABB23CB9879E391BA95C1E6D
0BFFAEE670C614569978F12A7A3409B3EDC480890FD23B2656D75BA4AC3E8950
327488C43DB4D00BDA04F8A9E2BD6BD6776E54A682039510EAC2ADDE9EB30BD2
B8317CA99B29A3224536E0D9FAB5FB00F28D7848432D47F32881DAC8CB144A3F
109134441D7DE52BACA6E0B0D464644727B8F998EDAAFE3B69F2F7EFAB6852AD
CD2C307BAFDF50C684777BC46DD19310940572E77BAFCFBDBD48088BC8A8E755
681EE693695396AB76019A41FCFD0AF1E83EB0488BA1860ACD33AEAD858BB6A4
E42DEDA2114B38C776BA2289533334FBACAB4A52CBA8CFB9AD75DA1199A1C575
56258E74A8C5211D9C8AD6AC4E63DE54E11C41CB1F004D8050BF7C5516515F30
4F86524199B9585BDC0D9149C6149693318415C90E29F0BD531363FF5AD88D03
B5411CBE23739E9099A4B58BB58077214CCAAE8192467483FBF0E2BCCD94DE1A
F2B46F0D861F28AF264B7DD26F8B1499FD473DD7934595BD9930D5EC3D3F2E01
EC2B62AACDE59A4989B3E4316993193033D9926E4B700D5658DE458EB2D85AD5
735D179E3FC7EFAC5BC5F62346FB0BA0A61FB709CA69ADDE4408340C6A3753C5
2B90DAC722EE949EBC2E7D3C1FDB9EDAD6982C59666AE1198832037FC847309A
106986121C5A060B02EBDBE14697EBFD80735C75A2BB22EB4A50C59F544E0454
776F1489D053B695257BDFF5955156E468586790FA7A04446D6491D5C260B8FD
3A6A04EA64E191B6FC414251AA3178E97CCCF06B3FE91D124B190075A73743AA
1331A911E5E47D8689304F495ABBE79B5DC3CC8DCF5D0BD2AFE24DFBC029FA2E
B4D51FD0941601E09868CCE0BA9229499A00178D209C749613DB2E7961ED1339
A9E9A17C7AF1E63FF44806AC24F3EA3D4C3A3D27DA1F48E52EA759F9EE3D195E
06A59F2F46A3D78472626F9D84FDA7BA9145BABD4EF569E1CCC33F1B16293C8E
625BF82E843E2DE6940ADE794FBF688C49629573B29B84DB0CF6AD712B0377A3
4922E8F480283836776BF09C1472C835CAFE0A04BBD2E9B877DC90F538CF7FEF
1DF68AE1021AC79FB0039C452896D0E01BB38F9C8D68DBC8D7605DB712BDB470
4A9AD47EC3B5D75EE37BCAFF03D95CE5F05BF0B2D6FAA67B8DA8CD1CBC87E83C
EECEADF1B192DC822B5801E971CE549987C27D040C5A582F4DDF57865E412172
D372B86E3E609D282666D7D9B35CC6AAB415ED6A1165373B6E4559BB6CF65FD0
B4458FA7B83DFC2F4EA62742C7EDF7DA1E451455ADAE743A6BF1172DF14225A4
13F8B721B6D451A3B52A172063A50790C353F464EAFB98E2864F0FA8C4CE8FCB
BFDC395A6049BC702232240631690D9B276D013BEF76559780BF7BB9BB3E0516
3EA4F897929B2C4FDB78448658078EF7094C57B049971F5934AE93BB36B1AF00
F4D54E71CCA7D53EAE271F032039F412F7F76BCE4ABFD45CA3330229C4936A0D
E28FA34D6DC4BB501BE239801AD579392471C81177BAD4797028439F70098867
60D4A7027600139D7472994DDEDADBB023783363134E9ACDB33E0A62B3D65FBB
AC1910134329D2A07BE802E9FA873DA5793942132A921B4F36BAC90133B607F3
D61AEB69E7B124F886D8AC883F924C86A37A369A844CB0C84520DFED09F44A85
800D93CE925A84ABECFC00B4B4DEC718F06CF2C807175B1038CB7817048C2CD8
6FBDFB9D934F1787C3C4AF1A690C979FA67040C6636685EEDD190615684689E8
631AFEA19088E97A07081D065F815470227FEFB109D47906288FF071EE546EFA
95801DC95BE9BDB1B9CC22BA39C04D798EBD62BC3758A9BEC65E6594A997A079
E3A0399BD4D57CD61E7890D47EF2DEFB9DEEBCE37AF6AA9E5116FFB29A6AA797
F44B989B48B67F2E7ABF73D932E11E01274947983FA21C0BFF9240EBA6DB048A
B0B3B689C8A508F7CB84F6CFFE96AC85C58EB99BAECB5D3E465FD74A9777B2EE
2BC513F07DFE051751FE7148A98EAF6042E58DAF96ECDB1546B5B5E920AFD625
8D5D5D624DA9018B3C7AA09EA14BA935B7811C6F1CE8711C5CBFDCB23989D0DB
CEA3AB4C7E32CE4A961F2E581CDB3957FE294E9A31B24EE87E383D6C284A3CF8
7A71139B51A1E93319DC1880E5BC8038905AFAE5F884A9AC19AB29001650B6BB
DE44B962D75A91321862BCFCAB95B25F54BD1696181E5F27E59B9E370438403A
5D2DC2C04DFC9F36C825AAC945F7D6C3044BC86A349482BAEDB8E0D8E6ACBC20
71403A88828AC205C81667F8286E56538B9F9388DC8E9968370B597DD33C1C1F
E4CDD5739EE01349CE2966B13F62990D711766B5D021E3BCD6B9FA75410F6EFE
F8BA689CC87F6762F66DA049620458AE3128D0D01901096D8126E689F6B6983D
B3207C7E6FDFD784FEE7C1F6DA15EE18633F332C3A8285B0115EBAA7B5B89782
EE629B2D7A8C2AE3AD82A7CE1A2483E238362F81F1A2232A7B091D4CD4B70032
0B0188FC72FFDFEEF0599FF922113BCEAF308FDB96E8E4AA7DAD28A944AA64D7
1214924841FDBCB5DD9BDE5FA0C60595A29C00A4B0D4099BC950BF4ABC209ACC
91AF5A147B30FF49959C5858E0F014967EF9422ED96D7BA2C602D539B3B1E72F
D9354C8FF8A004C91D18B74EDB415F21BD5FFDCBEA30CF29B9B0C82CB380F344
015A1384245E5A33C054108C4D3E275BAC512B2940D257110AB63FFEBD072817
0FB4C205912B1B68EC1D01D4ADE8FB2D08E674822E6E9F292ADF54BA1990F2AE
72944F71641C226E2C0641D60F2D4D4524925A70ED96BE1028AE7F815DE48185
91017FBFC3734C858A1E3D70A42B4B353116BAB1BAE39943F60D204A93E4FCD8
33348AB46320B9565681980B77285AF59F0F06119930F8B34A9F46DF707AA3EE
B3AD66B3FE8DE1E99AA2AC64965F07FF7AC1C2D3B627BF76B0A42287D6BAD4B4
3EEBD9149DEF2398DBA1738FFB3A41D228936F8E8CCD24E27171165DE8FF85E8
496C468E27840CBD266E3F4AE5E87ADF7A7B7DDAE260D5DFFD4D62EC830CAAC8
AA4889843CA5C9CBA928B5D1A780446A3ED29F61EA0DEC118E3E17B599CC373B
C98701C4EEF24370FF85493A4A6FA0B87292388E696DDCCF78CD3B1BD93E472A
521B20F4CEC8ED5D840EDF90F14A3B60CA14A86C86AB4C27B95514D629B139C0
B3C213BD652A78EF910E4D90929FF6411612D3E9A68A7D329FCAB3B1EC478E8F
661926857C9345B18516E452AE33252A81AD43C9F95106D40C32FC7A709AD629
BCC7B3354C5F2333C03E218C80D7B1AA7523B73A80A7D4C4834E630C0CA64B56
E65C5AF5AD45452DE3B56BFC629B08D00F8ACDB759C066D4808A5254BD723907
340EA0ACF5B2B67B850159472FB0649B9CF8A72BCE81F22E335A09DA47F44A24
ED27FE992468B4C6B4A1EF52E4647BD84330AFDC746C3948383B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Bold
%!PS-AdobeFont-1.0: LMRoman10-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Bold known{/LMRoman10-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Bold)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 60 def
end readonly def
/FontName /LMRoman10-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-486 -295 1607 1133}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105A2B97A2545FB4AED6E864068CAFC11C1B6D53
286E0C557881AFF6159BD803AD491E349272C4420D2E2274C589D040CD3285A8
9B4CF82A5D6CDBB3A3687E0643D2A256757CA467EBD41D83C4068B5F571BDD53
8E7B7B28273CEB38BE621F8217E7D0555F034EACCC39DBF40BFD9FA372B08F97
2001D6844E132A16F34B8B7234D5EEF957099FA45E43170CAA6EF70241E1A720
C1322AA56561CAC98CE90766897AC0611464168BA543C5664242BFA41B3D7688
3D1F10E97CAB51F4BE34CDC94C0EAC376AE280720C33DA72613F8C2D823AAE57
05F548DB3DF8D58096A65BD301502685F53ADF37350A323E263CF938292ADE86
4E420919C2AF30A8276BBCE4CFB3684CFD43C529A2C3203616CC19D8C144F695
88C9ABC4B49497A29F2E748D7C8F5637D9C9D7F057BC0A7ACF91BA7809044D7C
28A2C3C0B39DFD381EB48B2811A3B289364B9AD88B05EC6A2B79F841BB4599A2
76A8D31BFF321CDDF6112BF0C2C1E565C889A49EDB7873A2A09E0B2035E8E5E3
E924F96B97B49382EF212BD25A0E1CD7F132B4D69A79D085D4B3B4F7AB8199D7
54C5C273A119FBFDA9F913E211DDCFCE950DAD1CD18206D7A505D1F6F0BDBBC3
C6692C9BE7A04DA687BC96166FFE480FDDC1ADF8DF328CCBE1B11027E05957EA
41C4F0C0F64941E6A006433B78D17D537004045CCD22F9B96D8120CFE40CB7A6
FD8FD92293D3389F42A29F4F61A8D4A782A141035935D0D6DB2BAE585A54CD88
012870FC97E3FDAD1B5100045CBE72B72E82A6E26D2FC22656E4DE50233CC0BC
C7A54B9F67758563267093C77A86ADFB33603FB3A876C770C80B465A53F2F2D5
8112FDE19AB9A4079E0C90855C51249F2C2240B6EC1B5E300C7F388406E4C645
9490E4F6CABAB531EC31521D635B141538F192D31E24E9D288F43A978909439D
7A156AC8F37C032256BB99967897E536D47EA366FBBC2C9105B7434040077762
A7BC54551705281FA3DBEA2D747BF4EC1FE153036D30B2CD46F4A91C3FD363B9
BFEFB28BB2A79D573BB077085030E27CFF99CFBC4E263D94276E5B1237336108
42E460F44DE3CEAB2B97B60620D4B4F620E8B75D1C32E17928D4CD707C4C9C8F
A62A078FCFD0391C71D6A3974AD07802547E90793784480596E2853A9922271D
C7E6EE3F0F66292A403C32A5DAF8C0F9633B34A79722C2CB58B554D763E0F902
6E2D320B38C49770AE23986F8CDC1C1DC9E4C2143263EC8F7CB9F8AD93312426
E39AA1FC201A18E0B2B745E359DF7147B9234FDAEBF07631833BD20F64E67056
3FD2E252BAE9299E709FD22DA1E8E2CD3FBD3C82DA9DF9243C4E6488D2D3CC9C
266FD12E129320B51C7FDE111CDFEA91C7326AC7FFC2A65A633FD0288067E76D
297BA2444DD1B0EFDAF667A918171169D8669C56BE2D07493302A5492BEA01CB
223FEA3B6CA4D0A1FFE739911B5115C55F586AC878E93ACF92274001003B72CA
6FE435A2B184752DACE1A3E8298420C5F30759C23264C8E7977C4C06D2A39820
0DE19882B5A30516F1B55B5750909EE5A9631E04F67D31EA5D4BF66EBAAC60AB
7F8019D9C7CE4B8BDFBAE69307301C2ECBDC49CA78C51FCA3587638C90683909
D6D65D9F18F201F5A6222A376CCF5AEDB30E5E9CE5C38746DD543805B07BB7E0
8BFA5CA8C5EEF8386971DE077781A9E73E6AB2D1B3339108E2D924FB26FC7F1A
6123A48DB34A3AED6F03D917F0C8BB0CB3120C3CD743789E43599B0C41FFAF36
266EDDB105695B2E4947877EB1F3A6AA2907D82BA5229E9F8D232BA28D8F7C27
EE9292304C0BCC4BDCAB243252E9C4763668573D30B09DFF1A7FC4ED61B502E5
10A24171D3E508B67D68BAF10B94B795B554A44A40DF702B457F0D95CB81DC21
F59D95F656C32D31A86FBAB3682A39F8F72D997555985B11F392CCD22851666B
910BEC1F0B5A22E5745FE8EF46F2862DF5DD9E900D3D5BDE642412D953F70268
296E334D47A725E21021B82B84CA0A8C1EA072FB59BCE52BB6BAF8AC965ED717
36140A83BBE1C4331ADFBBE5B1F6D659D2B03FF71A6E1E99ECBD5080F518D41C
E5ADDCE021A7C84541082A2FE66D68524816961A882B73248DBEFBE0E0F51C49
B16022E06A761A6354881B07218CA48BC688FB299CEB1030A8A9959F324549B7
B4737AD52783C5737C44F9E81FD417458091F70790DC31D5F15BBEBFCDF0409C
AE4DF288E9F7D80A7EAFA1BA4C17BF640D2AF1E0F406AC8B4ABBB04CF3F82DC5
B0B8383ACFEE3B6938E48D3D951EE81BAB8059EA9E653F77B478161CAFF62BA0
053F44244AAD72E93E3DF9529F70D2124CBBC787C29429FD1AD3553603611DEB
B530443E9AEC490116A94C1982EEDF61E5910E59364B690E72D49232D229A3A4
3A98760A5525AE56BA0FDFF1E76B74CEF2C452CA230A1EB00791FF17C6F616E7
61C946A648F86773E5929E1BB1D4C62B3E158A14C9BD02E00781B20C4C6894BD
CBA10A671FA036ADCC813FD66FDDFC026516FDA258B0E7B3240D92FD7D332DB4
097FEFE402D3DB0E617B120CB7F1F8D64375228558C1309B0A33761F8FF3A115
780B4E2257FFF7AF3CDADCE2FE6D5B7E562DBDCF13F0603DD3BC89C3089D9CC6
8152679D1735FC4EC141D5899DC96D3DD756BEA8882826B24CDC3DA94674E8E6
33B5D44570E0A0DEB874CDB15707B7167D0DEE021123C80CE0A0BFA043BE3C5E
83ED4EA71DF17A9038C09BE3CBACE7032FA494C240ACBD6FAAB7F7E185DDCE56
9DA1CC532B9FC6714B59908E6BD23218713EC7D55908AE35CB8763834BA239F9
CFEAD9099FDDD344673DB0BFCDFF1823F3A9A80F1F7E8F7CA7B20F2994CF569C
85F742828DBD3A572B5C21DFF08EA7AC14CE07536610F58CEEC2E48959530A86
B62E15E2BCC1D46BDB20E619935816E2533C25674275D5EE119A62DE39DCD0C8
6F718C6C635A02048DEB6A82E53214FB5962B0E0C454C8C57735031B7A58D1CC
858BC7B4D4DD3B158DCB9A85A656F047B16448D99F49900ED5C76367667E1D4C
76AF0CEA8A936F9CF329B2F4350B0E5B45FCE585256923F98A70DE5036BD9C54
DEDA6D8CCA3FB1ACFA385D9CAC57566163FCCEC2157AFC8FDDBFB7177AD13913
7E1E992023356C5C546DEE5401E58D829AF4F1C1B762DD12E13CF238935252C8
4E876B4DCA197B190B0C1083D696C0FA27B86904477A22C4E458E2677AC6AEF0
85D4C0C92A8021611C8CE906128C155502F957B20E26619874CEBE43D125F6E8
63859856A47A1D4F89C3686AA1450F23A5EBF94C4754EA158845E0D957FC2B4F
6DAFDCA3EA36017EAA8F1F4EB0C5843C9C56FF9F371C82FE3E8666A274B78374
071DE936D310AF8455122F4C6B61307071FBEB6E8DADCE01167F0840F3EF4274
51F2250A597961B6636837829B0052081A7B4B175094D56402045F9A3E8F2D69
C0C67DAF6DD7825A6CBD56048BE3943949B1CC8EA3B80AEC09B7B7D697A6CC35
5BE29D6BD5706D9F0A6F53F924CB26E9AD37F597241DFAEA7979DF9E1754D747
0EDD5B7177BD8E9D24F77E526E649044CFD4963AB6E465A354B42C8975742F75
BCB6C0CCEE1136FC72D90F4A2BE12342D800225F9CA35FEB2062B3FFC8C44777
9C1C30A634A48F72899426CF9EC7C334FDFB71E43B5C31BBE28C4347C76E89E2
8C2D4AFFEC50470F98A1C113BAB6AC38D8E043118CF1325D3CDE7E167AF92E5D
C819963D8FA708A932650890ADBEF2B23769E7A19DF3DE86B975605D286CDD3F
AB8FD8D5711B84215F964052C7D8502433ABBA6374CE96C956BBF7C4204A1C98
0FE488F8D49D3A4BB2B27C838A1EE98409EBD16CFA4D5E4A384094A1D84A98A2
1BD69CF349E494EF15B45200693D9EFD2E0110B640E38CB4A7EDC1FFC49BE014
D25D83EB3302EF6DC77C07A991FEF251F8506762286E5F5AA0B73BE21C91DC89
1ABB0F75E9FA32116712218F9741A9D0BC2BBB60C369C4183F6DD956CE9AD3AB
8669A69121B16C33CD949DC6E4C61EA163353B29D0275E10F95567168AA785FE
3341FE4E4FE3EC2A59D9EE46F33362634F9758827B199FD07035BD0CC9069541
3FDE088379EF2239E77CD65AE29EF95372C60FF7CAF704B31FE5885F3E095314
744F99BD214926859634E33BAC75DC4AA0C96E6DF7A1DFA830F9B7A65396C7C6
2E415DECE0740B1C300F284B0149B217E23798EB43CAD793E287BF3CAD7E8CAE
1E9BB5F527185EAD8E75DFF208727DC428911CB820B9211D2A3C6907A4802055
1168A47ED789C2AD9AB8C8FB7EA2F8C7D4DAA4F6166685C3FDC27532C931AC8B
86E81FB02236860373419F816A5CCE657A26E927CAB2BFFBF4CC1A24ABE453C5
CF9AD095E0BD9530D515129F59FC510A6ED7864C7ED399C546AD2D172C31869B
E10461A0747B9A864D8BB68D5035FA46F719B503CE4B2E2D3463B468EA89368E
7F108E10DBD043E7B7EB3031418152E3EF415F3BEB7D545AD7808EFA961ACF18
5DC1E322EE3406C35EF72CD78211CC3AE2ED2176A6762E968A406843B9FA47CA
8FFB36ADA8040378EF40B3A93AA01DF86760FA5C65BF5A03D413BA33D7645CED
EFB9E2B4D16A0550D061EDBC632C25F750E5E5FDBFBB4F19F8056D808B6C3229
AB971AFCBFFF3D5179BA96D4C42B0063B3407F3CF897C932FD33DBDF59F46A63
6EEEE6A62B6E1214CE593C8E6A44D96188F77651C95BD71456BA087709827B05
A80FF78746C8C5BDEBD3DC879377A13C5DCB4A7FC08F8842251417894CD71C1C
6EF00A8A55B6CB2F2E58E760A0B62AAFD71E82A28AD2EF0242021D85C50EF4F0
FA7E8DDAA7E098E0DE796C8B7268EFE5EE6B0CC0781AED1350BEEDA285CCF340
8D1F434E3FF24D0318007B759391DA5AE8EB379A0A5A4B8425E8038116DCD604
A412FF23A2FB117C45184D30E9CB34CD780C1B9A210A65E46E113C9B602A2989
297C3C39A2A66A375F01A7639182E11B22DD8E44D32256F951D86E0E4C62BFF0
30F461E614AC870A28CE0101EC278EEDA0833C35F798D66B30AD10FF770C9A08
15EB95775D6F86C4640222DC394CB7CAB104F32FF31565B7145D22D820DD846E
4D23028826312F07F715DB714478C1D184E6656CFE6D2A1A68C78C7A79A202BB
5A04139765174D4DBF909B2858AD23360C680E94E8B190B1C3A2D5AF29347797
F3FE7F4D056A5EB03C786F5F9808146BB570C2061BD48E6FB8014B7D771C23CD
C5B31FA66CBE21BDD23BEDB1289D0B7B0C27123B55C2F4209D41058BBB3C53C7
62F8D785BCC025E1C5AC920040F5ACA6EC2D8658430EBB1AFD7F47CD6129B2FD
9FF30E64CB7CD991E2FFFA9C056045A0369FF7916EF6DFB4498E76A6BCE8933E
91A2E23D6B622779FC97D1C263411D2BB7F9B291DF695D85DB4B8EB762BDA2CC
DA2F5E5ADA62706D4EC8EF705C3F01CDDFED987C8BA8B72D68CA6B490E990FE8
4F4510FA428A10857D35B43D4347F6DBFC0F0814EAE7DD5117D4303EBE3272D3
5C4D32534685FAFB8E2FA7F06D68298CD26E5B9EF345BFA3EC2911E2B96A0B40
ADFFE22D99CDD9306DEA21534DE1FCA4F6C6BE4FDBCB64DC69FEBFA63628520A
97B48285DA87CED8A9520D667D006EB5EF9082705FB9BCCC4C76CB01A877C824
2EEED8A95D168C7B9C886031FEABFF2D5599E93E4096B0733443C6E8B1362BA3
A2DDF29C622FA55D54800823824AF57890B2619C7CF300FAA3ABADA58D1BCE5C
9DECE27A310D0F240D1CCABC97F3829D48F5E78825737DE521197C602C7BDB7B
8EE627BBB16725C10750008CD4AA408450010225C2E0322AD914573DD12540F0
2C2D847365CB14AEBBDEEBE8D06A555B642D686CB0F0DD3CA419BC2D3095B781
E1D4193954E87405F8A3441BD4D94A1A3FEE71E1E4A7AFC5E8194110F5C510EA
23F4925336C274C5E67B8575EA78C1E449853FA9B6D42C49637CDFE9D0D569E7
F2EFB063F4E02A5A1B8F12733514B688408CA41A7196CAB0D609C3D4E8A89EAC
ACC7CF0D4C3F059B0018D85B8405F645DF1A4A5582FE6AFB6816FB7B2DAA62C6
7E2281E3A21E12FD05D033B7BB01DD0B9469C910B7A7DFC1DA70208D6884BBFA
2D4ADA174645BF47E448B703A9620AC681C5905A6024BD3208FED44320B72339
2E3F9941096D0E2BC4321030752BF6E2D970D1D6002D80C54F9A0CD739E2BDD2
99569EE578A0F2E627F3CC4754257C7150B14EC4BA6D11343AD3B5D2A8644986
51C5705B1DFF453018AD53F67C2BA8AB5D4CFE4E217103A3A34AF1A4F8BAFA72
17AC70D8D9D02544A545F6880EED34399F8A2752659DCB7D2970392C6F0911FD
FD11B254DA5A7D747F758B40E87EFB947F6EF31DCC61CDDFC39A27718087498B
E27798576A28A21ED866FA75CD39AD747A1FE94C9DFB849DE95191E6BDA41016
ECD6767F1F3004976BAC8091B2E36655C2842F5C7F6E3BE5A7DE64405908A06F
BC8C7B7156D2E5D82C74EFC80E31B39CE0EAE6322686FCFC1756EE0BD6BD5423
B5C4C0F0053040E40D34A48C502C21579BA36AC6ECDC5F4BF936EC6E3053A312
F8FEB6C95B2297BAB78DB580E5FAD0ECB93786E1FD8102176AC7E233BF57DEA5
FD7A0EEC6074F1B7334E238D984E6B0968C2FEEA9583AC25DC5807A0577DA629
D93C114AEC58ED5302AC8EE5561F6A8A354DC78A74DE836AB0D357E256891ABB
AB7980B1B1B4711FB26D09C83B0877B2EE3E5238AB3271A5B75ECE9721E484AE
A8DEFA2A727F621D89F3B76B92097A94B6212A1708B1A968EB32F6B68914C381
02BFD0E48771D4C7102E50ECFD9B5EB79E5A0807FAF68C8D9CB9CEB47BC8DC7B
5B91416861A6DD4BDE932F4992BC3BDD904E34A723CB48EEC08D5E63D2E024F3
9DB90C3AC9AD11247C7876A4817A846A5C50443AF5EE526F8689777BD80A56CF
580246A8A3A04DB486634C3D4FCA898BAA2CFAD867906F9DEE56903E2328CE49
408C704EABA8A055F8A2E33E28344A7A9EC8F2CD186FE17A8EB324726265816E
DBA8EF142D2940FCF6BAF5668DD64D2068C3DE2065A772019C474B0514299334
574AA22C4087386CCDA558F5050025A45A1049C9625FC556C668C84C08EB2BD4
FE16949794F0A487F9B4CD388D9FA75185010A0816EEBCF04F8BDCEFE1F6613C
06CC52BC1590026AB9EB1E58C35E4A2C10DF821DD1B07F793CD3AA123C976C6D
8743F78DC7D08679C38C7E7C399B85852A77B26FD83E21449AF76B88B04554D7
33D695923194BEE0A11D7422E36FAD0CE9BDB18838F2559DAF8ABF9D7DBF1F5F
AF474A0F212719A259549EF7BD5AEFFA09B7607AA14B3C6CBD50988936ADCCB5
EECAF200E1F895B809E0FF1D61A3392B13C2BAA4F2EBC705FD27CD6D26DC1B55
7A7D64B43EAF4ACBAC482D06AFD458F0DC3F42FFCC7DF500C5D817F12DFEAF58
1793C1D178E74AA9DD9626339FAA84C30BB2902C2C710F10B80FB6F4E4F6E158
46F40312B91E66F516835B7EDF02BAE8B740656A044B32AB508D50D30E8EE99A
4A68AACF07094AF4CA2CB96E1FFEFE5493FBEA5FB1D26743416B6D20BA817AB4
9AF175172CA75144E70BEA368A35947E11D1311B45DE585DEDC51093DB28F7C9
96D5A69FE651AB0637C908BFBF3048D261FFA8DD0BED83D99CD39BE14C09475F
81CDC7147AB1F613DBD74DE4AB848D5C8A528C92C8225AD84C7C8CEDDA84A666
5F8C59C1A2F11A4F507FADCC056E2765F9A19F77E45AB50CDF50B9F75F0A6338
BA2148B769A416FA2783DCEA90AC383E4446746FC85E9B1D817C9B2CE52A697F
4A8BD9635311108D162F9B7210012EA351D67D561500E9ADB8BE5D3386982938
81FF237E9135E28C852D90D46BBD8F7B95A7BACEF0F59D7A86D619FE049DB3E9
10DA5459627D2B60C7A3E39A4C63D2D22007153C1783AD94729DE9FEDEFD6748
EABD96D9FEC55051D438CE4EE8FB43AD7CEBAA1E8AC903FB1EF52F939E917695
64393224793BD5B382C23B1122731C45591EDF98D771203CC5ECCA686818060A
D02A38890882836514F5948E9E66997E964CA3FC7ECAE9218A915BDDDB73DCD8
64D27F363CDDBF4C141FCFE9A9A2D73D1AD3D3FB7699F732B12B55E06213C949
1954D1A8509555EDD6F3AFA77671B3B0227232E6FEE461134BDE0DF9A847490B
82EE29D47EE2982572E4CDF1C6E5BA5CBBAAF733DF941BF1D41E8AD584E4E06B
CFF708B6DC29E0E0E03461C073EA88AC966BB305E2111EC5326DCD0180A8F14F
BC5B5194C678264F3794A28699B8E8E73CB2BF656EFE9D02470FA519C9BB6E6E
5C1EDB206222974F0D7417CDE937FC52E2D173EA1D7CE4898094BCA694C00877
E6BC65EC82F51B8BD61FF4C8EDA1464E4B6822B0EA9B636F53F71DB7587DB7FB
ABD255CF3EFD024DB4C40E929960B5F0AD71B4913080769277F5D4878326B6AC
B123477906B1BB4665FAFCEC04A31DFF256C6198A819D55C36D2C5556D4AEB27
B31406F90367E180A14170F7AC637F3015F91615AE0BB8258BB81E248987CE1A
14766F76AF88BBF04AFE16B97E24A6428E157752FCABFE9220DE08713B8F3A5B
7780B6DA41EEA1A668FF1B7B51421F5E65A2A7FC13B78F8361F405924BF40E49
AE3D7453C630FC3431FA13B333D411BD7166DF1E02BF6E5037037DF1CA63B933
3E6FFEB85B0A04D6A74092A710A9A82AF7E4210EEE6AC5E5FE8D6C3B09ADF83D
6F3FB82AB1D7E73598264523AABF9C11F40E869A35A58844DCDBF7DCE03D6DF9
C02645D73C2127E66E8F8981AF7707EEC32DFC80408D750304E9FC3502D97606
30CFFF16DBAE0E230887AEED675B468DC2D5DA0A9804A8F1FA82E223310845A0
25D7B189A5736EFB2810C9B7CC36B5F2A08764FEF3B2B548D2379F1F2C671E49
2D391EC21DDAFB91C39EB134F0044F75DEA0EA80356EA3D76220182D57FB18DE
AE2349F27FD72C7ECECAB8C56A8FD9FD1DC9F621C157FC555B4D973E24040AB2
ACFF5186A7AB03ECCC79A923BBBD362B788F5C9DD4E0BACEDA2DE760A98868AC
B45CCC8CC2370FE267830FB02656573320172DC627587099164627634D49F594
263F8F38F525793AF97A9CE3BF875DC5D845C884413A42E7EB5BFE73E22391AD
1D0DEC1DD4E91AED7FE13BE59DC17FCD8FD94E2F8F2607FEE1B55382A62B35FA
16C62700034DB176BB862C29749077D7104BCB313E5C886A02F4E83E8050A972
38F88827E75E2F51339FAD5776CBFBFDA9E5F1A7A225BF26E2AEA0F352B9C950
B47ADF650D69662288C29CE561373FFA666F6A4161E6593F9EF18F43C96DFB9C
F77EF07C44F6F4E45ECA89C32EC8E7C53B283F44B8CCEB98F747AA922692D461
AEB0945241080D6CC751E1B64DF5D843B0514647A70CB32D9A9EA279607154B5
B31EB70F31F472166B18FF30E1425EE578CF04310331BCFEBE729C666E929DD2
CC04C4F66493A56A4E21125DF0CB0E032FA0793789483374DD552E9B16777F4F
518036B06C33F7273ADF8875EA0E53899CAA8CCD61D560ED16B9DA0C6C6DDE7E
4D47A224057C14583B86DE721BA48899F9B2386BA4AD114054FB455C41740DC0
1956EC729569F2DEF33F9469903A4319D244F00164BCFE6120E2A811BF5CF5CC
741EE4E92E9A64C5A0E024A9C535DE3DC133F7F5ED56931FF5F3870023C31C1F
D013E77B2F6B376D2F261E6F833FED1423463869E3095E3991B1CAE39B2AA47B
DB66816F5C2444346F2C6CB57E619ACC16C5D8096F80B49CA3444CF1294FBFAB
57DFACC9D3AF87B0177E6DC6B89FD204E5235E57CC6849A365F9A83E0CCE1CAF
DAD8FBB5062803C344D0CC32979A1EEEC5542E6F8F48D39838647F35B6059CF7
286586D1DE7A3487991C21F744CE7F3A67AC069D0099A5BBB4F12FD99AD8D4F5
FEE75FE714FFF3D54D09C9747ACA01CEFD260ABA098B5DE64CE29BC8EAD80246
2F66F3EDF479FDEDA009FB2459F2E6B90131359A396EF818B1F1A690DFC24028
8C6352EA88F4538F64D0A08C138EAEE72D20F59CB9AD4169084C46F9795641EF
3F6005F3C00355E52AEC86DD24A2E948BB584E86F4C180EAA5CFF839107FB377
8C1534367894076F16EA2A629E87A1AF908C49FC0FCBC632E2D83D5A2230B467
3692A3A3E95A52591D7947341EFFBB64443EB7D0F6C3883D195661CA3A1BBAEA
7BCB4A0ED90452346F282DCEB0D5BF219807F397A19BFFBA42C168C93CBD6E93
F7B7FFC1350E762B993469585A6838186C72F915E90592641FE99B4D86F2CAB2
B61F652CCDA6DEDCF99E8C85646E7062DB0A99252E9333F29AF1F20824DC04B5
24A3A442C7E50D342AE0995D1280C93ECDC1EADDBE29741201F3B326C4058F24
38D94C9A0DA688BA599F4D60FBC4C2709D6B1A188777C0EF5D2616577012E64E
129E00BA3BD9CC0870FB6060AAF40EB540CD50D75664886D46FD31A07B390F3C
E60CCD246ED0E1CAD736D01247EA6A3F7747839BC4D6C9E9BC86B140640EF49A
59E31A8DA7AFFA42839CC734E717BDD52F97832A206DD3E67C7715A70ABD4585
072F8547427127EDAFC2B797993B81D32B76D83C4E4EA79B2A917E0290F38D66
41CF381CB620CACD3A22A7881910197E470E7277AAFACB0A3B38B07D11674485
6E689A479CB3A8BC081F33CB0494743267F18C5E91B6CD62494A24FD1CC370B5
1C17E3C3740C3769907BCDAF2953E0EF722E382CDD254C83900DD15752ACF12F
16A5BE9A050B0DE704CD8EE4010F3BACE55E29994EBA7BFA669EBE57C23DA2FB
25FBFCA98624889998865C8B6D7EE450BC57C3C08497B28DFC78295D272CCA14
331792901E33FA374D2AE78B868B197240199EDC2480BC8223B359DA5AD05039
EDC7280BD9F167CEB388A75131FB8726B4230B4F8D878451CEFEAFA497493509
A230B2578118918F97C7BB8B62E532972120E5DDBE5AA2F7686797569D918E90
67154248AEB3A2D3027A4649B6401B0A31F3DBDA75E9AC62446C061296402E66
45EC2E1DA96256A9C8141D8B7C8067797C0CE920DC60139CF924E96BBCC2E1CC
DF12F852BFA2C3AE4A82E5FA68839C74458AFE461803EDAAD78BF5F7A738766E
7ABDB920A0566AF29195C653FA085F712258B8A1B9AABE1A07C4F99518B09E9F
6D1B78E72E7E52019EE8FC129D15A510E38EBA2D3B88B585A260DC483EAF72E4
A3209D2541F5343A0CE0D06EB59CD75260255563C88D594B9386E4A4CFB85AFD
46ED46CCAD840106074F69AE7C3068C02E9B6376843D91DA00229226A37259CF
B0AD3BC261DBE8CC4ABF6976AA4D80E4FB2C64C79C4E7B77F70EC5706A6E5489
C5662EF190E9502C097B3D9123E213615EA7D1CC1979414B141B0B14ACEA0C0D
DCAED669667EA033762AEC53509E0DB0167996518A834F071428116CB670E59D
45EB0453370647B615E56986C8D5E2480661F5B7DCADA6C8FEEE4CF11F9410B3
0C4CD52372C3B9A585A58115818D4AA1FBAF363B899827711651101B499AC33E
5EBFD6A52297BE877AFD483B7A2E45D5CBB0102002C5755230611A6A981DB0C6
D6509CBD4D31E445F889C94793104A2AC5D6DC1A665719DAF2D483EA1B294EA5
D0C71C050899D71BF8873C2203C7003FE088725F37CD5FAD283BE377996B8BAE
B01F0F81E2F33E81335F7086B487A1347B4F9354DC900685CE73A8D5738C2BC3
A5CAAFD9ED2A3DF44A0E9804EFA2830C2B630734F599392348BF82D318A75C5C
ABAFCB69898E3BBA20BFD3AF672D546D11426B798433263E6D36537E726577CE
1483052A0B7A34426DF9562D021B182BA2924AA1DD4DAFE4CA472B4A537605AB
2800530F414B89D4EEC51F0CB7E9D9A86141A488B9AA83AE2B91C0C602E587E6
3247986CC3B29E2C82E3A099154059B4C3D3682E201087D5254167A21F55F418
5480E47C868308F3906BEEE44131B11B2B14E649D8A58AD06AA5691C9898813E
5A4AC9BD0087BFA2F7C7E3545FABD70FCE958A9AF5CA8BF41C7D48B04CF05893
2E9F3B1B48224627B776221603B39A31DEB68B5D80CCC089FE4605247509EC69
336998602318DE152D2F89ED1E2983F1E3EF18481EAF1EFEDA0068BCBDB28A7F
C5672B5294EBE1BDF98378FC18DFE2E7D56C84071892EBA1722254FFF6C2929F
CB76A235705EC088049C1F1B0F2E893E84FBE34E8FD6EDF70B1237FAD79C39BC
0C98179FD38DEEA590BF99760E2DC5ECDFCCE4922C000B0536341B226FCEB33E
58A669E704123CC218A3E114BDEA9F3E5E3E0F5A9CC7C841C2AABBFA90CEBE55
09654A916FF556C3149999D9417CC312E8D87F14AF3DC280BA7B1B775DE7DC09
12EAC8754AE29EAE5AC87616C0C26855C79BB02C2F0B84531D5B7072A70AEDFC
73D7697FD45E384A5D4B3C55CB96C5D792E2DDFD91D5D62FEA685E88587435A5
11312DB573060A7E73001ABA76E395D789B19E2F5909512D622B23F00ABFD675
9758A409DB1C7394DC0F2E9DEC7BD65B80885F9C3574339A61253C3234BF4E1E
226C890E566ABB7A09A262E516D108DDEDD6D7DF3168FD5FECCDBED653F73085
2B641E72BC01C639A25CD435E4A6E8C45BA8FB7D7D91AB2AF53C297A795976B7
AB5DD6695D85DB4B8EB762BDA2CCDA2F5E5ADA62706D4C6870A753952B33B466
9F562097A2EC39A7CE24DD0C1711BB4817680EFD0BA3A114DB6AABA6C4D0D57B
09EF8D10DB5E4004694D39E05F5E2AEE30F76D51A3CF5FD030B694636EF8C890
D69230D0C80EF12569804A23475AE36A3E22C76818637B5E9824473883374833
E2C4E3EC16B669F8ACD321FC39388733CA1C0B86C4291E60DC73CA0585BC9F30
6B44A7BDD35F637D616C7003024B08E523400847DB2791AB32CABC3FAFA58B50
89FD5B584A49F0CF52C6272165A2DBA4978322F3B706D42300C96FED2158AD03
BD9AEAF42BD39A75248C2A76C5007444F9E47D7BC3E8EF9FF13E29DC064F3C70
730B6B567A9AA1CD0CF50C0F73DE2564F315213F7D17A7EE4B34B024B2778C42
CE25DD384DCDD067444272BD8E263B7E189B0658357D6DD023D6BD1C2CA79CAD
7F0FE9BAF8F71089C3F94B666F8E478603573F9FFDD42D1DA7BA6D125B96B6B3
11BE94F7AC612899F38A999CDD672AD5ABED614AA483E13431F9C541B744E139
2FDD6F261EE615054441DEAF6EEF3EFF1A924BB9615DBB6786DF6522B4AFF4D4
6E8B5044363504BDBFA2B4520DD6104F783317388D31B2DAD759D839B928EFDA
00F21BDC87DD2D8DE1BBD7947B768E44FF8232AAA9795360C83D537D6FC32389
A0081A6844013A901B021C755A31414883C29C68C3260535835CAE99A9914B44
5B822AEFB5E3B6C185648120398E67E38568ECD77F004F7DC1CCC96ADE0D0290
4BF3E689B2B26437059ECBBEABB9AB7AE45221207CEEE97EF66017F71AD12A1E
21F58C53CA17934210C32A35B68CF61A1FE31FF423D48D50A8899DD24D4DF5D8
73698E7150995524031ECA7290306F2B40E28DCDBF18E72B17D6C2F443F270D2
E45D9A010ADDBDAD28D36FCAADE15A574DE45CCD569FF6E45F73DCA2513811A6
517DBDFD7D818F48E68350598F1F390A0F59258E4C768AC0134A614BFB94C297
FC0E5B65E218E892C350FCADB5F66EB82D0813EF551EF70C04F2C1DB42C06989
3A6C31F0A44812EB0380609945583290B7DCAE4B0B3A76793F902E074A6A6FA4
2F3015AB1380CCB977ED5D8F37B922515858D697A44844F2C178D7B0BD195F64
242395E6C807B7D00E12CC9CA7119FED647774408CD94DB0AA8DD8DA1FAEBC92
63DBB3C52AC355BE2C86DD8CAA9E18C093BDD727BE5CA54B9CCF49D756DA5883
534D7B8680D0D3062AF0E81ABC55AD1242C7AD8A4127CA7332E5039A2A7E32F2
389255B0491050DCBAFA0541F2E746E3F5A7F0A84C2334C2D0E64590A5D71DB7
CBCC65CA7DB3E410DB1AB7AAF9B483A4DB3B365CB9A016EF151F02BF3BAA09AB
E4C1BB62EDA276008620334EE8FB43AD7CEBAA1E8AC903FB1EF52F939E9170E1
34F09AC718F307E80B29885BD8B971C8670EB6567D6FBF8D8085015695A4B206
D94F9FBEE46F6B6338DD6F0C361A942C82E3E05B19390A1775D2A5F9EE021B22
207BDB471D1C6F941BBBA29A0CF844AECF49D237D1CAB973D51079D05B0E7C7B
DB432343F0DDFC433D1F9AECDD9688C85174FC32A61B787769985079D60CF711
31977F3349E00DF185FA99BA638F1E44ADCD03F326227FAD7D55D5B28BEE5E71
772C8921D69D11ACDDE095D43077D3B30779468E29838365121EAD77DB71CBA6
FAE1532A4678C02B1BB6C11FCCB9708565DDE5047FF8489BDE53D94807E34559
21CA39D69ECB4D0391BE0894F486DF1F507B5259F386443D3D689570B64E63F8
B6FFFBBC97BDB30BF5CF2C4D2EB942BB3D915186E222EF53C533AF3B26731ED2
B983EAE3970CAAD43ADAEE90F3C443165E3118C31DAC0DE34D55F775F2EC2F97
FEA85F4B53BAE60497899D7CA480468889080FB68E9896AB991D6C62169A6517
E92FD7F27C852C97CEE1630AA99AFB93D3548358D58B4BB08D70E5C8DEF0073B
297683F806A2A2C038FAF1EDC640F24A30B1C3E6AD87C7D4424486F4D2504B04
48E92DDF49D5A06F34DE2335626096EA26D57B94A928E0C4ADE6D4925126349D
E06E101868BED82BB51E911852E165C0FFD4CDF61A9BFFDB50D7183314985C50
64F39308C0C424B7A487A48EA5B567B07AA8D634C702038C771883CB37FCB364
82DF85E9BB4725630BF0B5CC539DB2E0EA7E4306238F06F910C43CFB7809656D
574C1887F5B482D92E7074356E75788B2AC966CF6AF6E8408A0C0E629FE5E533
A30B97B735B1A91FC71909D220C791738F52987E26D9C375C5FA13ECA16AD171
6CC234C4F66BFB6CEA71E3442C0A00DD938476920CF67869A9DDF5A29F900B0F
7C555721D258DB8C4DC732ECBBCB771FBEB2806541FFC86D9C66ED01B85534A1
E39BD5C20DE216B3342079CAFCBA2E54C16968D6B6BA19ED3CF567435DB54C24
19D6C244D36FB6F2A10673088AA9391CAD3D4BAC76383A176B640F93FA574D34
25DD12DEE557D4BF8A3035920B7EACE9D30FD01A920F287B0681169A88E0C8C0
AEED4C65B70E142062C5823246B268F1DF66B627B992CEE9D1705D73C2CD9A14
C5396873DCE47441B413975C0BB4F62C03D1492C3091905914B27B4FE5D1AB2D
CE3795EC91ECB4DD4B8C7DBE9B8A3BD00614A35B7BD9E4187A6162C7109103FB
DF1B4DA7CE2B7194624D33B42527A0E279E87B767A9A08694D5372104736A2E7
8F2BE1A10FDD13495E7F26989BF6328610AED78D0AC8A6526EA1459CC091C4E9
A497534338C05DD286A6CB3FECD914946B597270BDEC95A9AB4C9D9BDD58FA74
D12663E6DE20CEC621ACB9F1C9CBB82AD5C5134A39347787CA96E2E00BDEE02E
F2773DAF259E6D1B252E4E34BB5437F75671944A6321C5E43FFE8183B78BB6C9
34338EF87C2614D3517AFC1E78386C0FA6BA73DBD43E42A5C77201D4CD3529DF
6B3174D8876188AEE1C0B9BB4BE6F66BCEF2C09E112BD2F9BFF7C22433634B80
4E051583F49A74CF39D36A8896A0182BBED304B28C825FBBAAF61C73D2254EFA
2DD51A43ED4906BC6DC19203559700CD83DCF3EF58FE49BB5646BC76CABBBF03
C6D46D5553A1BD1AFD24743428F8B9F647294D69198995C75EBDE2E0FFA891F7
C4EB8B118E9410822C4DA3FB1A29ECC9DFC6179A8F984CA1423A806BEA8BA7A8
A2DA134401D0ACA9E239449DF4A65CA4A8712979396A4CA810A650915DCE8EE5
BA9CE7675A9282DABCA7D280DFAB8B0B3ACC533B21FD461641C4FB0DFA59DDB4
A16140C85D55AF2AA52C92EE85C378819E081A9AA02D13551FC49C9344082893
62F2470B36B6DDD1FEF49C4438FACBBE1896E3E67F154BDFB49E029FB2E5B84B
F5EA1CFECA85E778204F6BAFE3AACC1AB6377A6613CD82B634562E96B8EF8C66
BFBF49C4C5B41E4E69FACB7FC15E725CC5F28BAFD1E94CFD3A29AE7A70CC0166
254C6B2558C0BA02DE051B617F9A19D5DAECF77E2442CDA3A61C59E99D1B38E6
5A28397F992408E3E8BC96206B783C493794BF12502E04FC52064E63D005F203
4F0BCDEFA0457F1B420AA61EDADDD60410CDF5CA46C02474005175CA4F3CDD7C
B1D87A11B6393F8133A84721DEE97F83CBB8EB531837396EB5AA7BE08E08FEB6
872FD35FE75366E0D71E54543FE04BA6F49575728D15009512B3BAA87E004E59
B9C81FC990594B82C652B101F0BCAD6A27A205CC15503BC31EF6605F4FCBC99A
D58058728E7365D33EA018A2270622DAB445F2876A1DE2884E34EE315A91F5C6
DA1BF602A2FB59F293CFEAD3E55F65BF2AE0BDF1DBF52B698D539C111D3AC7EC
D97E504A9737300A32CFB25E01E9F870CA8523DCDF93D57CE57C1759F2E1ED45
A0B5C75D5B24CDB8B7144642812FC3C2B9A4AE5C8432FB6D3C67E6A4D8646298
E229C517E89E253C6F7B632E74DA5ED29F290C37D03C0EFFE15D0917BB65CDCD
38647C5F531173262DA2DBA680F9240B8C62DFD2553D20B6BECBCD412A7D6A0F
93A57C39E2BF0A9AE90D009B355386F68A54730ACFB5FDBF4A734C8CC44B4628
72F2A06FD0EE22A88D9A1F1E0F81552BD0795515FAD3FE0B4F2DBFB9F42CB40A
63BBEC54EC63CCB18E93BC17C6B015DFECE6C9A7CEA474FA9151DA64C5A488EF
D0D6F4FE932A7ED8D31983B6A9DB00711B0A471A98DEEB6759DF0C12AC489992
1DCF8300B818383FE550B3DF19AD8856D3E111A000D42EBDFE2F1E19060E939D
525F8D011418F897E596363AB8F026A562E25D24081C0B5B747F971B7773E976
0C57EAD7CB37952D1A0E9F744FBE8041D0186EF1BE88C20A59AE40E7A7DCF577
F22D21E2C2BED47EFC284D7A14817DA0640D7DB680E79F9029FF9F7962305CD2
C294C3516F1EE4C13CAAC355E995A962D99271609A1A05A5DAB4C473CC5665A3
15BF1B163C9BB372AF14BECDED1B0AE4D903524DA5839DB2DE078A37DECC17E0
28C116478049CF740734665C580736FA56E82ED46E29F74D443ED3367BC63361
5D91969E95A95F212E3B9639C3A186CB38EE68B7E1DCA0D047F853A3D0A7FFEE
FB19DFC36D9FCEDDDF60123F5ECEAED14D9B0CDDAAB8AF1339D1F68931DB4810
B76B109F14F8843E3A0B093AD0A4656A116BFE2D6F5993FA07FDC9F4F88D0BC3
12539EEFB222D9FBB92FC49349947D809D417FFECA75A82E9483EC5B3E64AE03
01E4D98723B5A14A5EE325D1C4CA5023439EC8A9DCC6AEF534C4587595D6A94E
70F6DEA969386F22C8324F5DB956D9BF8C072DBECDF1C185B123EEF35D8A96F3
B3CC88AAB0CD130921560822D8F89DCA5B1802B72CC93E5D3A6E168B7BC85A1F
6D3F7CDA424750AF8261DAE2097ABD580D75F5873A6F37020AF88EF7E6D9C645
D624FB44E49D23BF85ABB2031EC08E44F09A3B24E4E4CF35BB69AF5703F015A2
10D9182678AF5F984DEA53961FB917172079EF21F73ABC121D8DB43921FF4000
6597DCFC5AD8DE5177013854B10911605F872456B8F504547E27672474BB912A
3900BBAA22F86ED74A7ED142E5F946B5412557689B9103528A7183858CBEF8F5
DB1F798601A9D0DE63E1CDB4CDE6CEADA87D16F3BB71F5DDB909BF92A96B13AA
52DC9F2827BAC12E0E45B310AD8C11FEBCFC727ADDFDA6A5FF6E1016133A1B4F
AFC8294E84BB98938CE3718B9A9FAAF727F2D8286177EE27BAD040C661B2D059
AA70FDA6FE7132D0CAD6B7B51706DD3D9048D3BD5E62B358333483A2C30F1E6F
2D0EEB83478AD15F43EE2BFB151F7DB3788BD9FF8E30545E13A3ED367DDDA8DC
D2337E86CDADFF3B72732A4E082C00FBD73BC06D8309E2772CAB23D9CE5BB993
0CAA6262AB6280CF987C7CB4BD6330C265A5B7F41D915514AA0FAF252C2D470B
EE9ED76A10F3E75C36E9CAA4AD5418193E66786659050AC3D747FD647E044206
E1567BD589C6D37033A588A778D71218B7A460A2DE4498F25A81DEC9360CB9AD
881528E28EAA066F41264F0AC879A67E1B0B621CD8572B3C62773615FF4B2EBA
5E902D9C5ED30617417F403ADD5B2D40530C33B10A5336BD1E521D18869E4C61
65F558F666A06D48574975A677652AFBD27526C8FB89E7E8106F13BCAB65D279
FB914D02BEE1E5FE8B17B7E640BD4F01B8B64837023CF1A9F7A19EC131C5AB6B
CFA7D35816E582D15F1EE8EA5563D046BD8990CA3F0B2956BD268608FAE24316
514A13C7441651605B9CA5DB8F1C9212688E32016C8A3020EC96B8B48C55D6D0
B9CDAD690F8976A675C0CC7D8AAC4A74715CFC76B176E1104CE528460DD02F10
4220082622BD4E3E50B189223DD7593D3674AEB6FE6E25C0685B03F604B93077
2A4D52CF1E3480229AE080CA1B925AE1F57117D2D4C8EE4901443AECD2BACD55
B53C464C4AE6754336416227A68E47E30ABD93644E4C2696A24CB9EEAEEBB91C
50FD3E2EE0E437297DB82A1C782FA6CEA866503D32708C76C30BBAAE0F953D5B
8A1127528BCAA3F64D2E64AB21C48203C608CCC92CFF820CB8188675EBAB53F7
58648FB82BC37BE81D825F1372C73A5EDF9C6BEDD2A467C58639DC0E0728CAFF
E3C5B6A3B551B6448D1CECCB6CF51A58DA1841C4372AD7DB3B5F86B79B72A508
E242A05D015A9A32809DD51DF932DDED7DB343D02A196F9653441D5D99563AD6
A015995764F5EB871E1B1646488C2FC5C5C44DB357C7DE9B455DCB92A8E34280
88E006FF95E07F1CC14DC82CB3D7C5BAC359A5ECA5EB3D4641288A4EAFBB2D88
DBC81C63A31172C84D92F4AABAF671B02C86C840845174596C6E1F9EDD7A3246
80221A48FDAF5135B233283FECCCA13A43A6EC347E93FEBDF96D3DC8C4527837
DB241EE7FEDD285F249B27DAEDA94A5F932FCE2CD96CA703FFC8167C703D76BE
931B1D5ED6EF893FC514308BEB097A3C1FF486AC03EDED01D65F044DD7D1A1FB
182766565B59F1021509A8EEF35D3546515B1EE31660B76219EE4C2F891E2EA0
12B33751A8CB7B2BF06EC315469A666A2DDE52244E9274D6D74A862A31853BBF
D87CE09B188887237137C5352FFC672705D129C86166CD167E327C8D51E5EB5D
7DAEC7FF5DE263FBB838F923953C393E4522AD74E714466099CCEA0D42A8A15E
E28E5772676DF8F2F603F3442EE12E199F0A1826236D8488CE4EC4CA405368AD
AF00BB2C95BA008BF6DA076F94B31AE4EDE8237218A12D5E9DEEB9EB2239541C
7D72EFF375CC4D0754FBD4107B9A801E9D4CCA609432F62C6AA3368B12D359ED
DC61A8CC3FBCBA6748EB62D05C8F655BF7D1612317DF305BD7B385D49521169F
74335DC5F878639CEAE3E2E03FC534751C24EC1C8DBC3D0A85275A7DA9E0E133
6F13F8526C6BBFF2B1DB7B5EB9CAB0DD9BF9D336F25E5799BB341C0177F10D97
32DA73455D8CCA320F1449D3E0C5801EDFE4C8BBE24828D8501D232D35EC5F35
D5AD07347B69DBC55E6DD283F7F9F409ED8BA8CE852E3CAE46D3F482355E947D
18B664D72488534B0E643A05643E8A83038029E832F016A7F97B2E4AEE3AAB63
B382FDD2568A537E7296E0EE3EE6FC0C1B8CEF273808B048A910329044B03442
47E6C405F65DDFF8288C2D95E222EA6F455AC5FBC299780DBAA1992390A535A6
C346A08DBE65B1C054C0587AFB35100BC4CCA91D4351F88439C6FD7C7268EB45
915895070514E9A606FCDA2034A6E5CFAF53CAF1C31EAABE44B4E65AC679CA53
824C6C5452E34A39E05BFA77CFB2AAFD32A72D27A53D1A0160817288A83DC3CC
63DE40C1316698F13A2A59B39A58964B4CA44CAF45F63AF49B330AB3DD863B0A
55519520CC06361F075BCCC0E4C90A598B0F9E10AD0EDBD55B8CC6FE26884040
0BDEC78CB30A2F939E9171A7E0E2D42213218F2ACBB2F5361C86BECDAEEEC705
F7A00B72273C6F5D2619D655C3533FF17CC7A87BF1B8E8045CD715668BBC03B9
2FF441FC74C7773F68111CE4A2C916F448337E748995A74E9D3DE60DE90966B9
A2828E48BA8D5DE6831D51B47086683B838891E3B60EC51916B00DB9E81D6D5E
001B17A8D845ECC703FF0851D4A534AF19D51E5460CFA0338DF1F5726862FAF9
15051533466D36E0880843F700FC1F6065FA37F248AE52A1FBA980BC660D2C08
D1FE8B52B6439032D4D1BCD52F450A80883DBE45FB3276FD3F0B755A375F5C9D
4F03D038DAFC28992563E9DB55C198934FF5A56D8648FA85E658D41281D4BC44
865AABD3A1FA81EB70279BA80B98251F9119B42821D204C9F508DE64083AA7CD
0A8F3C0EEA6E6D9A01EBA6A53326E328A8F446C41510A842D5DFFA8223B03077
E4CCE19FA7B3BA9FA1400F1A17B257DE3F0661DD7B29E8B6FB0433BCD7424BCA
D824AD77D8837021895B063C085BDFEA36924D015ADC134E03735263CA0862E5
C70E54979A0C70147753E076B73687915D05705F38761AC951DCC240976600A9
0CEEC68D8D1040036F2E0E500A11434B829E81B2E9E3D43B31BA437E2958EE9C
A27A8D466784230B776E9BA0BF1ED2545A0446FABDF17C6DEA44F870F5E45C90
044E36AA5900CDED03F7D42CA3610E4889840CB824A16D67D19A33AED2D04FF1
54BED027CC35BA5AD2472AD6652A1AD30C39ADCE69EBDE3AADB1C26F48370D68
355C2007E89333537459BED79B9B3EACADA0104BC6B76D049B17736CD9E28DA7
3506142B6AA54B870BF69B37AA1F2C7843A71A64C773142F47AA2F4DD3C38FB1
0A9E09D504E360902F0680AC09575B8AD8AD4104BAE4CB6DD2FDFF0966F0AC0B
DDAA98F66B8D3BB8E6FC57A802C65011720B337658E1F16E079E663932EA1150
6E88B538522D048080030FD0C8932BC9F78CD04768AF80C4913226569816BFC2
FED797BF3FBF60B3E0A4B8C2E568C6C3AA0F4A29839430F1998DBC99F4E035A4
405C6D952A5CAC70B1A8AB77403A0B2E538CFC17AF02B34699A95BFF5381619E
31F007CA70AF320616E0FE9CDD00D91E61D6FBF0894C659A61F005C6FCE1A0E9
7003611635ED3FBC4DE9E8AEABC46E892F5C3E5A85F1CA9C7B6DD8993EE2A25A
7366BEC1FB76200D272C713BA3B61696E356C49EC3850D88DBE34BE839D3F2F3
6EE30695E3D9527521FE23F4830EFED86917C5CEFF9ADFD18C0FEFA2E8FD7DC1
D74BDEA77930F422822BB15D1BFC89A85156E7ADBB28E969382B124072BC0D21
A599EF056F964C6CF34EFBE0FD24EACF7FE3DE94CD50C269F967F3ED05DF7335
95FB04365CD4B4A5FF216BD8534C4ED6F449EA1A57E860684C8875F735DC9F31
6CEAF6BA883ED6019DD1F3D28FD6296AE76BEC4B0044AC2984337F2EA913D7DF
042A4BF938AF76A97EDD40B7F6F9D15E91CCF9B8BC3454DD24BF3CADEE7E8C95
6454650FC6D9ECFF2EAD2415AE65DDA53F44B6905704CF35D7BF8C3CB2AFBE30
969864D979C33F36A5E3BE297EFDF302D8E8D5CED4481C331B6B6D85EE0FEE77
A69FE2205D5FF8A88E84AB11573E2B023955BC4D42F8399E4DCFE470641036F3
2E61DE47C4D4AFAEDD552DE4E3BB33B7FB4F05105FE21843E411FDDBBE067F4B
FD25E5D4B24CABEEB8216A9599E4081BE9494718C56D998F9DDE9AA52807A640
360422F59F50625FAE9DD08A8BB3C39D282B78623E4D17D8832E0E2EE836DB25
9FEC75B3179FBFA7AAF113EEEB2495BE6DDF7C7106C66F3EF6A89F9D6EE68156
CC8CFD8E6C388E38A36437B7C085B17C9070C59EE3A27954DDC4E736CCA22A08
C53436AFF4E299178F373B56F15DC095FCA2071BE8C67EF945078DCDD901074A
784FCF19BC6268B672E98D6D3A64C4D3C3AFAD0869003AC00DB39595658AB429
EEF5356F7CCD11E4F2FDF367555148C257B44CD3C84C2A44189A2A90426C07F6
703B4DA97CFCCF2D33E5E2C360DA0D71C5E046C9A49A2FE89E3C09DBF81D603A
A8E1C41CE5D48D0DE181A612268EF434F9153AA26341AA5AC2DCE2E64092DCD8
A43E34700A2B081CADB630138C9B03ED2F4592D3D38E10A40C93C995894FEBB3
79F0A21B75F34987BA586C6FF368ABDC4759B487F02003C375DA26BB94765520
A3577B7F8EA6A46672363A5E89F1F6C668696A2F1286122C63913DE4A5EF85AC
8E83986EB56A641FCE4DB386E16B322AAF048B83599C02884A712216A564384E
3C32208368A9D0420FAE50785D6EEAA6ABA1B58D3A468B718366587D0F331CA6
A5EB3FBE055BAED0E397DFD15A3A53981A5F158B487CB2F9219537AC98E1666C
760F3C795DDBD3954CF74C2345E61C0B63D478DBD9D1F904EB6959B1D3A39766
51CDC513AC9569CE318E21C11AE858AB0BD573C2E4B6849767F650E5565495A5
978375ABDCD02EA24E6776FDCF88FC75D05D0E3F9E07539C80A599C7AA782512
41B46C824F9379E76128411F6F62DA2124572295D7FDF91A1E9EF372A253B6B4
77C24A622E3473E11CC603E82A0A11B1E04D27F61B3EB6BBFC5B319FB61C7E8F
AF394569E7169832156D67F7A6D7B5F711E2B3A8146BB249CF5A61AC81475D8A
32206AEFC8BF47C1509D24027446B048198FF2354CA4D7DA345AEF9160BBA6B3
BA13F0C6568FFA42EE63591E79784A80175E3E4BB0392370980FE8C496737BD9
A8D1BE060CB343627CC5EA64D47B8012CEE097C7C8EFD108277C1B6C547F34B4
092E027CDB9142F800FCD10FE48EBE9CBE849A02868BC24DD755FFE818E628A7
42D5736019D131ED8B94E2FC564DE99C447C35DFD7E381A64C21070738838BE7
E8F0DA026A315CDAD06E41442F8A7F771483C26BB2F7622736A0FDD2D813AB43
69302B097A654FDB4013212106D464B0FE966C983286097F64E1DA958ED4A65B
374EE14A4DB8F49A248944D6DBAA67CBE30AA3D87E91C47AF405D5884EBD5F11
759F181F1B873808BA93761E557F9DDCD736006FCE1DFC3ADD6F9B3B69F4B4DC
168A19486FB4C1D31E05643BE95D9464CC39ACB17AF6F492E24663E0422B21DD
2A015EAB861674EAAE636315CE9D47B1A020296D23FD0A59D6AD28E78C89EA61
5BF622CBFC2D1CEF22898F1639376A8639A1DEFFAA08F8B0157396CF63CBECDB
8867CCAC10F06060F818FC7193127782371D3D4884B50E1295C517FC56BD5EA6
C9FCBBCA5F91B5E8E9F4D23CB6E7B93B734C1CA3A77AE0E00A028B98F990B4D0
15153CCC2E1853473BBEB42F97ACABC52E9DB146BAA3A8A02B7C530BED308ACA
E5925F4640F348449C01E851C4736321D6DFCE201338753A4A15E2A8A49F428A
D81EE68C30F2490362FAF9F1FED1DDDF82939669A03C2A9AFA9544CC0C8E8B14
5BC8268DD56BAB8807CEC8A8F7CE1AD1497CE2E1BB5DE4EB40489E2DFE707DB0
5C0FA723D9E430A779CF890239F7911B8A93AC42FCD811F7C7966D2112DB9A31
20411A844B1D91847A571AB6E2806206612BF5DB0BC0C43B5D4C0C2812047671
8A1CD9960D5448556D1B2623BED9C8814E4AF3438178B028CA1BC3EEFB3E577C
48B5548AF3978ED59A4CE2EF71614A3A93D4995639E91B97483486C68AD9107E
8B918D946E250F561E5E394ACA6EAD2890CF226B7869550C5C73D8A9AE183F08
3F4068CD684517F5944331765CE08C1F7C77D61A9DE10664F4BF13E2B8009522
AD72CED5FC0448F6DA8E36473EFF3FF7B1FEEECD2566F1B899CB78C94227A3AC
6A6F78E48B81A8CA1192749E47891532AD525190CA68D5739CF0DAAA36061D58
983FA3A8571D54EDA7D7E39BFCCB87122F41D6F72A7381E0A24176DF46F0BD3A
5958376B794F2043A295E20A0530A6BB79660666CCF6F02A2710BFCBE86FDD31
01BC108AC83A4A2F5F8B75858AD3B5EE0CAE193EB0EC4A375829DBF45DA79D94
9C6CC647F1791136FAC55C6348C1F7312A289DD8BEB1EA056C203B431634B78D
BC70A30974E299851BA72A097446FE8D54CEE9CBC3B88AF70F6819B95AA37895
36D912DC15385EDA65E18872A93CDA8F8E3535B07F29BA5EDDF0C968D7AAE390
CF09972B8FECAB11EF72799E945013469C3DFDAE48F1F131513EBA32709DA23A
6BF1BBDD51D96BA4A5207AF1044E917186B1CE57C8AEF37D9872B22CD19ABFFC
0468B2D448A840F6094A49D5E120C8C3C96A3D38A88E5D4A9559465191633D92
D56334B16EBDE16DA9FCCCFE6933499EDC15F231B2E632E0D1F9F1E4A0135C64
145D44C0D9BDB91E39274414F75950B0C5296AE847C21072039C8206693ECCC8
A16457D782416D6696AC8645E10FDD80D52109B4D002FC2D27E0B32C249A4566
4F725B8465BDC62636823158A6FA0124260E0A4B165539944EDBECC4B4B8D446
096061560BDAE91726125C32B8BEB0D3107CA1AEE073345D4DD515F7618FF21E
E6384ECAF44BD7703E2745BD99314B8B41176C4A8719DA2C75A3CE10FCC29EDB
E9205C38335AF7E319879B5DBD7FF3FD4AE9C70527A55D3AFBE871214C9A33DB
CA5087D9E044FAEE66BA2446568997D4C2D84EB7B1D37BA13752B6C966C7A139
7D801606872A0B9F29ECED40ECB176762EE87E30A376D1802E24ED3B46F204A6
FC1B412F9D5F9B488DFE4CBD9C9BCCC7507B2C2269BD8ABA42B40E15C4E1121B
95E2FF0F76190A7A08E04B4614929631C0E140672C6445756E4E43CA8AA6C934
ED4E8DA5E883449A3734F9EA75154BBA688D6AF88DF1AFCA17F4DEA8CE198ACD
51B48CB8EEFD48E705F80B009ACAB117C8D5C8917C242C02A331EE280CECAEA7
FE970E5163187A1AFD423B1BF490E4400E6BD41BAC278FE141F58D98863B13F0
9F0538290332E9684C6E9B3ED5E27673FCF706BCC94E549E58EA59668CBCA064
DDB13B68D37A640BCC901EBB437A6C1DE1024E5FCE8DDE9CD3808E94173D888E
7CBAE692581563B7D42BA2E6E677B95C8A9390B33C5C31CE1626D8F34E8C84F8
01CFC922AA636F38AAB043ABE7ABEA5FC37D43B5540F8A198ED3BC4DC80195A0
A347B174992DB8D542BEC631C8069D0DF3B6F3A65CB9F0069858293901A02731
16E89395A49AB5121BE886C2FD94BA99DD39628557A83A95A50DCFFD4DCAD23B
8536710CF184E6783456BFC48FC51A1185D758C54FD7380DC9615F0DA4B21E7A
C862145E3D814E7817C6B93075FB3211B599AD6036A73F47EB0137A2E7FA7559
39918E6A9219BC87F668804CDB793530EF5B16FA667198CD88DE12171A05BA38
3886B0E1CF667E91B25258FDA3424416DA870C73647C187BFD9BAFDDF89A2AB0
3992BDE06BB6CAB32249871871BD55E515F7FC9F4DE75B2CC3FF3D6145270887
C0AC4B0630AAD1FC0B5E43AC491292EB204D4E824F8D506A27BEB2795772DE4E
899B0F39A7F18529FFBDADC1AC42B75BFC767E992FC46847D567EEB2A4DD78C0
F4BE0A08435A003E0B85367FDBD93C565DE80DD596CACF69C92423C57FF43C46
B41EC21A57D020D5B93DB3ACB4231B0DCB9AB55FE8C985DA3CF3465E3DC9C4C1
4EC8D6F49E4366B74B3A04BF5D624B31C461CD143594274ED956A6C9BB821E85
27AE929FD27E607081AE0F2377B9A075D8FB3B00D71F5F95C9C958856E075D8E
8C3145139F39098B65E43FD19967AA6643C73930CF75E0A23701E9CC7048AF67
288D5BCDF3792571A69A50119F8CE30B320EFDA8DF1E6571F8AA9D0020095D18
06AE5B832D978BEFD2D7A3B3F5923FA1C308C9E98D12CEC8E64948DE05417D8E
45CB2FD9AA2EA934DFD648841887CA3109C04BCD175AFC9707C904325F137999
ABE33C6499835231D4F024791E16192723A4D7CAE8999E74E99DE2E3A1EB9089
5DC2E246F1ED23876DDE7BB52BCD21575B6BD2C7D75E6935D7340B2529AFCFCA
280E809D2A50F6FEE5469DFDF0F14DC1106E756C67744C823E38B1AD2E066DB4
F9AF5A9857
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91B2AAB03B33ABB45A0C22C491249120F6D6784BA8E9E1BDE1D
E49CA8078E716ACFC56247BEA146E10516B2AAEA1179D951CE9BD051F9323250
9E52940756E59CA4A375CE1613358DB3061D125AF6741D6656C98B1F13580C3E
838A2017268AF205A5B8FD4423C78D62186FAABF1E2593C4B81E7BC78FFF52E5
6705E634F67DA8EF639012EF6538188EDDF6B5187447FD88C7E56C2BD06BB81F
48CF3B8984E767469D5BC472CFF69C4180A4BF4F1BD102AA61E65E9B4596F626
1F5F79BCAB60EFCE5575BC04F41FC896291364B162D5CF7B9C1EB56F9782D85A
987E16EECC211027194B026186BC401D80BF12B2BC2B2312712EFA5DBDD316C0
C9BA40E4E96045F714E6FEEB0856683D56BA26862C46B6F426141ADF7F2C0D09
97823FF8119C10FB6D9F70F6CD3919D4236FC473CE717311AE283E1271D002FA
34DB502E54DD60BF9A2B0E2919E474995E94968A401DD7FF690B644A502B11D4
9BEF13BFEA72CBB7DB37D249F295DE60D9E6F1FF57B02A74BE6E42AC73897D01
6AEF845F7A8C7A6D07215D3E37477AD50237061B71A9EE12C374285D2D200084
7D3897463BC015EEACAF136DA6440EB37856AF83EE1DF31DCEE10AF35BFCE7E9
98069BBE425809102BA8A9D685341300FAA00380E0754EB9D00551A039174DED
22EB36B22555D465B12A9C903B70F4EE37EF022F63CA043F05E1CF4922F0A2B2
570619479EE7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75FB8D5B00DB7BA78FBFC5B95E167C6
CFB9A2275128DDCE62E56BBF35D257EAE99D627535F8E5ACB4A4D3E1E6D9D24F
9CDD9F80028D37C9CB4067A28D41E879AF98739929DDADA413EE35894A6A5B14
CBB136548C4B00E47FA77732DBEA89E10E98CAED50DEC8AB2536A447F7D46D4C
63A99114EFD23133E2FB8243221A2E8AB1CB892DE716CA34CE544502ABC9526D
F48B0762B57F8AAF2E120D5DCD70D140B498BA43863C45D94E6642DD04CBDC31
0087B2FC75CAD18883113AAADF162B023352069DD1BDEF229E16DE8D008A4CCC
BC317B47BE42354627EC77B91564A034FF2F3B60508154B08981B62A2E9974E0
E9A46A3AAC7F87B1FD8620A5A695852F2FF71CD16FA34635B526265F1A635254
75398013F04B49F67164F03610FAAC41229306EA37B9DF6E8DEB1C6C2BDEC9E6
EADDEF6E99BC482289181D89CF74F9995B40E5C55FBC81DC7686AE740022F764
C49FE9B49A108931E3CB077A9C53C764DBB47C789C795E97A537F013BC2BC786
BDA32DCD5A856714ACD5D2BB98B011650B2A5D8B881D6854DA373B002BA279C6
0649618BE2D9B1E10DECA9090F66F089E4D7C6D8087016FCB998B95F194BC9B6
E95BA14850E251A4EFF1C66B148E036AFB7FF007F18AAB4CAA2CEDB34F65F327
D58731A241E11468BBA16BA3494A4E80FF16410385FF17A1444B2D1596343B25
64124D648B1E0955CDCCE027BC9F127F79622FEB3A6781181EAD3F02101364EC
FB540C0B2473F20BF05A8315BBC31178398C4DF5CA482F899FBE7654F08D93E0
29994A566CDDC866CD6A1CF5DA076F94B31AE4EDE8237218A12D5E9DEEB9EB26
7CE99EEF40ED1A5A247FA60A89A2EF6AB95CAE1FB119500650FAD0C18B03564E
B61A0D261812A3EDE5BF402542BD215541E3A478F0933EB129EAE44484E084BD
DE7D2CEEF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2826EF2D6E38C9EE32
60EAFD1C1B7E9CAE9EE810B4C7934D08C44E8A3EDCADDF8FCD6E289C19A7056D
A716700F391FBA6480099E8276173D443884AC0600329C607B7521B1C1C0F575
F4A979FF04F1B3C17864FBC8B92B77DFD068E53CC9111E290624DC39FB79FEFA
C07D2DA7DEC9642694ACAD9C980FC6F26BBC4B98AA0F9624D8678DDD10596E3F
55CAF2F4419B78FF39B929627428C3A6736D8777332C017A9411BF924DE0E40A
24B0E1B797094DDD8EA17A7A281D007F1F6EE3CB17E0FDB167D05506A96F7296
047E208835176F3154E8757A1C21857556EE412F4434E8062A9F9101ADD125A3
2195B8CB98C9B19235FE35E0DB6F1FBF31ABF448C9261B75BF1EB61260DEF86E
BD69F26D77A20B25BE10094D4C196E26034F2577471EF7CDEFD087BAFFC6C93A
F8FE338E70387B4F1BA2119F24E0AC14D6C89D60DBE2E17850FEEDA72C8A882C
F268AA853D036C7633EF1DA737CF40C5F170EDDCB3B5518E28C971EBFB43D842
99D336736B15B05591122AE51D1486E1F2FA31E9C9379F2B3440AEB83539438B
B83563DD61FA39B66B4DDCE39F3E590823590CD7C75BBE8B58EDC2F2ECB1E684
00C6706D29DF0BCA1B5C649CF209DAFA7619F27D165264869A4D5EC574FFF640
76FD6BE210178957E86D8B7303BF3EBF660879783E563E5FD42AFA2E2C523957
8183B066D5A65BAE4AB038087E40257C1FE6F484941D7387A2F92A69CAD3FFA9
AE559D3043D7128482D9ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A60FC
7025B92E55DD5D5897F13EDBB3356F9E2B9DE1FE09288B35903108785C1400E0
D9133C0D0CA09C9D486A9B1DFAA213A0F5B946E6A856A4DCCE2297945EB83595
8E6A31D07C0EFBD8B5FA9F0005C6FCE1A0E9700366150C731FDF9399AA84E583
B94AD627CF78D2B3C9138DD0B6C7FB148AC5342A93321EC4ED39BA2B09EC01BA
12C16350A9F5E215EB4853B5FDE117DA33A13BD08D044EF5A480986B502216EE
842B1C2F9F03A4C2E81BB9548C7003676D13EEE81647141D24B6E0ECEB25B18B
CBACFAF313AC51BA6360C4F0BC346CFC7DF99C34FA15687F78572C5BEBFDDD80
971DE3920882A07ACB5ED28FA1E9FCB1CE83942637B2A6BD6CF81D029EF3ED13
B3A092119275C4A4E8E7635BE88FDA3521D79C6E41B4251518F5F104AE5CD4A2
FDD0DDF0A49EBDF656AD597845887AAFDB061C48AF125E5940927893B2791F0B
D574848C85BCB7F3D74FE0BAABA30A31E9D23BF09565A133D00285C4FD7E49FA
5D2FB569061CAE94B80B3913C4810125E03F6EB91BA510563A49CC3E4BAA3BC1
0F8F1106F98799495DBB3A05C04BD649053FD29380EB4CEB65118457D5C4E806
B2A97ADB2DD5A9F66C4F808C7AE95DEBA7E62F33D813B1D32B75ABCE6A6BB030
727AF05B153DE73B5AFA62C6E671BFA6CFFBAC0CA1E1F8C7F43601462693C32F
E5B20E2D3CCCEA810BDD12127D103E9F302BDBA57DA671A26A6A2ABE9D3BB94C
8169568A8B6B047EC8B3065930E77CEDD673F09576ECEAF1CA8F445DEA4E75D6
1036020AEDB7754226F422E9551CBEF405ACA10EF2A46B53BE1C1A79DBAC9CB3
9A6BC253AF3E0C166169DAC568906DFFBDB38CAEE9EB849CE52FF7F496445B0C
E59CFD89084011AED6E918BA1FC040AF04A7F790F3933689ACD25EEA2A612586
7EF523C2D6CF26F76E8E8A7357B9C86BB64C2A8D1A532A1EBD4C83EEFFB29B25
E6A38C407C126D97595C9FDBCDAC33916516C3B4AF6CA7DD212083440C3C61D2
BF3B821B98289693291DCB124A2929C398910657C35047F319DF546D864BA222
BB785BEEA5DAFF02758FB7059BD3600C7881088CC1CA997EF38084D649289E46
00F5A67256788F406EFD30EAF3B344148D1C44B49B3E6398E1051D1F85618EC5
E90D3F71AD80915AD23EC75C7511B956691BA9E1F38570BADF2CDC65AC636325
718AF7EA47946CFF07C2DC0FF66E079CF3315CDAC8483406A1AC1DF701889772
49C80AFB052626A434FDAA2229EEC078C2116A4D36295BE3F0E369F4EEC9B0E8
1E871C39B9606FABFBFEA20AEFCF5742E6957272239B7DA8B9139CCF9ABC5294
AF21AF58E4A6BCB7463B16492EC628DBE6D3D608A7BE0B7EE204C0686B534F8E
7AE523E0362AE977FED22B5D04F2E7058F09FE3B82895FAFC35A80F855645E13
4C36B2FCCCD0B5A9983FF5933ACD2938305FB7CDEFEC635C4E3E11848D6D8714
7C048B07CFE453C8070B0CC35C26E83223783D66DF6D10F12F7D242B1D2696B3
210D7958A6DCD6B2623AB09505DCBB0ACE93422A64DEE8A6007303A2EF448CB8
1ED39385A57F9383AA235717AF84AFBF5D808D32048E1A3715DC8998AC0E556F
16DB74C13D05E062FF908AA98DB6226EF1B9E6113A1C31010A4BBD104C7E5AC0
57FB7C18B2B8DE41915E54DF679F12079DF942D87F70486682CA7D1FC1A124D3
C9624699D76D7351A4A78FC2B50C9E80F8EAFEE102D755AB6A0DD12CC09CD911
269075F34B1D59B05C81BE2AD99D3ED86668487ED31BD3A282235F730A70DEAF
9D6A80EA0E6F4883E39FF433F53314A9DF48A4DEDDCEF664ECFD1D04331C07AE
954D0E9CA3C6D09F65A6F56EC07545AB05B3175433ECDF6F8FDC17529CC9E7DE
AE85DC7A673BB1D8E2B410F5C5A738B3C9588D3F2F175BF705D4F7089B2EBFFE
432B337B76C083AD1A7F3380C2E498998FD037D939B772D6975B5830264E9B96
65078867B4A024FC24B16AB6474F370F7F61C6FC5A60640BB17710A5ECDADB2C
DB17ACEFDE8AA1B6128C330E2A8890F44A1C629C360FA9C8D25588F16892227B
3D52C2AE0E9177DB0B86627B9DE43A7CAC25E8A1DBC56412943296B481440A3B
2A011233C57EBA78A4B34C4F6AE3174D25DA268200657965D92A6B6AA4BB9B27
206BEA4965302A8B4AD3F6880ADF3C06F87F30465B40B55336A46DAE2CF46DA6
CC1D18B00177EB84A53FB40DA42402197D7542BC10E7F9CF2FDDFE83B006FE1A
6D13CCDCAC16F31C49C5E84D13998B3D02827FC1683D296A9378A7F1929CA192
818AA9BDE03FABE59313873CB1AD4DD3DC7D5373C293BC00646EFA0A96570BAB
2AD4C3467C36FA7384C9D2DD211B4E26DD455B8C450A3845A54351050406300A
30CD7AB167F8259FCEC503AC5A3F9D962EB5A1A260FFABF332DD702AC4030A4A
D4B5F9F13F059104134702119C2D414E4812B2BD61FB558B9D8E869268B53504
4701CF8C14B23128617137DD98E2016A73BA08CBFD07668883E67BD4EAA01B45
7E517B2825EA5C691668D3B64C7C2FFA658BB21E8FAC70D8E3823E35871842BF
8DA9FDDAC13FEAF57217EC230CCA301F89A1016CD38CDBB47674AA8DE3B033E1
6BE48F51A34D8ECD2F28980FC62D255CF0B013F84FD22F9302443A93281A24F7
E237B8DC9E20AE49D3FE7B47F0B4C5BE36297E9DA5DB6B8E6F76B627A600BE05
0E645BEC59B1DB14A6EECC6AF3F3415305B0CDD5AE2CFCAF3AF145B9BFFE5469
4EEB77FC68F65715BEE99940BD3B54587424A5EE94FCB35E3D30593DF95492E7
4983439AB75BC7A21F225F83C4666A51617942D643E7118C6FB8485C3B49DF8D
5CB26E31B1D5CB96F07CC74AD17A93D3206EF4D481A294B8874E021E7DC267E0
D478FDAADC38FDE58C8251C5D0FAF6B63ADB71FD2248A1547A381B388A32DBB4
1CEED0EC58FEF86639DF42A1661D656C27C4864FF69822883FD8A0466655F111
6674F20161A512ADE5004EAC1983C3A27BD7997F5F8CA528AF78DE86A40ED5DB
5E33336D961B1091EF1495C54E72AE6EA40AD3FDEA10C22CAC231126A1CCB9E7
F56C30AC8709634561B22D04D700C82868714AF2B47D07416D2A51B83AEB1553
E6AB9E62C55E71761462FE9F1C24F12DA53F9865CCE548B567BD60C6E84B9FA2
8BBCB712C15A5BEC215FD698B7E849070F08BE14B7747A8C2F41D7A847E18511
7A40E3C6F9DABA745D35659462E92935F859422E93ABBCA9106F31AACF67DDE0
217905ED11DF349F54153281472BAB0260B819B52B85053185AE6CD16845BA7C
C58A0CE61B646B556A116064975734ED3E8603304CAF2BCF74B60390A1920950
83A78F71C4C90A6A0EEF92943AE783D52C00F552B9EA1278E210D305677B9A47
39C67ACF82AAC2152E686A3D22F12830D995534A8D82E4B822F07B115F31A1D1
0B424A89E22465768238A66AD71FFBF5C9832BBF3A6831F5E9B0B2F86AFA951D
9003B215F8F90C96566726563B5702D385F53C020767B5AABD7911FC7437F2B0
E7F1B5B2EA1E7F9D68D0D42680C791A5E92CCD42DD2EE141DE9711BA3E39071E
1845F4D623DB46B6CDE4850FC54E7ED8470DE829CBD6CFE9A2B6FFD1AF0AE162
ED84DA43EC5BFE573655D4AA05C100B3EC61BC0E15E48BE663EF85A6483E0E6C
97457D5BFDA26B78C69BAE522B4821985E2F3BB273C45AFD346545AD9DD197EE
807B83CF7E1E095CB10D5CD3263B03C83FC4B41B08181C883DF60990A47DA285
D767E651964E43988F19F06448FE10D773E106008165D09F007ADEA7201CDC4A
2B08B1190E191E921521A4BD6E4A678BD8857D176C2A06F6CA058ED16528D28E
50E37BBEB1D1554503645AB398669FBA2A11A006AA062664AF4D91AEDB312FAD
233CFA1943E10792E4096DCC5BAB8E5CAE0B0ACFCBC6B9C156EF807AE7A911A5
ED5DA44F01487230A3702428CCBF83E82E1FD21984D255DAAB15D2530F5004F0
63AD75356884230B776E9BA0BF1ED2545A0446FABDF17C6DEF4ED391D0CF9CB9
086D116D56152BCE329695FE8A830B1F4C2D0DC9065A549730A059B4021CE25A
2EE7EA03B751CCDB88C6D93DB82004DB8D9E8A2F161A38FEB95067EDEF910269
82512AD84206EC1ED85DD0A6F34D79C331689A4EFC52D90EA1C3CCD41ED86ADA
E9C01123EFAC52F7478D98DBA4D248DDF9AA7BC2E51ADBE8D42764C75A82C6EA
5573B0381BF73CEA99D4E06EAC2C8E77082881823DD9D66638FDA8BDD4DE1F10
153D551CCD7325032FFFB8C7022A2FBC90C5B6C0745AF40B30A241B262FD6444
66D8B9BFC58740A672F6547AB5723275A2276EB60BE3EA435515BF52FD453207
213F3E13FC83A36F2D86CAC9653404BE5BC7D30BD640E7E27336B7A9B4AE2125
9EA558BCA560E04852E7DBC79C2DC8561F805C0DA1E125B16D8D61E25B73FD1A
9E54BADE8F858094DF755F2C34C6CD0A317BB545FCF1D4CC29C8332F46F00388
F75E60765F0BAB9B7921775DE49BC8132788B2E841F0256A90F9F14CAC53C721
060702EE12C6641799994DEBD48FC72CA8603888E74770C07DF34EAFE36D3104
DADE5D30F0B56BF5795C0DA5DB14593F57087E60E18B8233387B632799E6ECB8
C25ECADA33E3F6D69DDE5DE40FABAE9E9951CFBB3E23E96C776726A1F615251E
69BA5F423D896ABB27CCE21F2292F9B6C3031729E453E501C2CBFAEB6FE80899
830AAD8B5AF7C649CDD908D2209105ED0C2D29136996DE232FEB35A8AC6CC6CF
66A102587591419E8DD0EDE59C74B491A0F78459504BBCFFE76C57B6AA7F5B3B
F9B315C9C46AA3B83C633E473EC0CA66CBB224FBF95B8DE8FB0274CC120718A9
ADBBD9DFB5380033BF6A3FE89A498F9CAD2B7BE121B35096D9C6A88F06897BD5
269E48D840AF44B95165076E6C28728D509E5CD1768470D8A13609B66B1B21C0
668DEA8D18A9B80D4DD2F9F9347E39F037E0B3F85762A08817672D41973FB223
0FB689F0DB5E1F8CF1FF405D523BD8070B81576F497EB09A9630A006FF0908EA
1795C412FF97D813C5BADC08A7A32948413F34D770D1202CDC5E5A10CEBD9D66
F8BE7ECBC8A6F5489B0C17900AF38B219ACA301DA5BDFB1FA225CEDE409A83E8
E129216035F189CC9CD78E73F721BBCC26CBB47A317480DAFB142380C6A94C43
FC696BE86B702102D7FD9E0BA2EA50B07C5DA129FC20F4F7F10E7B3B25D4477B
713B015A306F1EEFB66EB6AA32260E95199F6B19286AE258DC9E2206D9705E4C
43F8C5593A7FBE0018B685A34C3C85CEDAABD9BCE6C38BEFC211161F1E96FAF3
0510796F922E69F5EA83BF85A992FDEC31351C18F0C93A1BCD7D614BCB41F763
FC08831F2AE55C6756DD5D25D06821F2CCF1DDC6FF153BA9BAA4A0B4134C30ED
C7F97908DDC6E7BB65CF8A58DE8C31EA06A76B29E132634A1E34B04D9557145C
824496B7A73DD46F631635266FC2CA5EB9736576A2D18DA69F9507116B9BB2AC
7952170CC7C59B75568062E6BDC00AD89F42A743A9FE7D4393C65279014BDE76
C22106CA436FCCD67FD88107643EC1A422244B1F2D267E4CB947879C5A4D65B7
0E142062C5823246B268F1DF66B627B992C9E0A2ED0957B2A13CCC8B93FF7BC5
FC7C7A37AE0523EF51C522AF2F2739F6074B0FEAA6D8C2B1B137814854BC29F7
9C9F3591DD4C298417194F7316068F4BB7DA76A849E7929121E532C6604C059C
BABE2C9A512F7954BFF4418C128B8B12C2B28A050B50BD46CC83DDD732C8EA67
64B0EE7B25FD8E586E601605E5777DD29330926A2BD335CC29938FA16F33A245
55973303D8CF20297952486275D052A48A918EF0FEB00E6F5C40FF92A6670467
1E545E57ED4B4AAECB28AB5E1CC4FFC422917E243C440FAA2F97B5655117DB31
B989EC2622635377629CAD8E55092F07F9C8BF47AD2CFB938B0ADC4336125473
E7FA6FBB0659DE1E4E6D9936FEC600F414DB2C6D92AB98F3476BDAC49AE64A92
B3AB194DA6FA06220921EE7D2A520E1004A7FE7F45300282249B72EC6B430828
F906E8DB9E45D0B3C95B6FD047603E302D3D296FEAF54D457AB45064914252F3
D8F9274D85C1B59A2A11E07EFD6044AED5206450CF9DBFCC96B5155C7598D6D7
1114D161E132C419F243D8A3A09D09EBFEDF3197A5796A23B927227E51EAC240
1987C715206297C0971364CC5B83001B07895F0A7162FB0F2F0056228FE28DB2
DF160599E3A94522133F60C63200C869DDC5AAE04253AC240F7A64999F242191
070F848850FB9B3B0285C7FADB28A3711C06273B79F97E953FF69654445760CB
A1D313DC83B5E924BD35B3791EADD3143473218B6E51F82EBEF76BE7CC8B8094
7EB0E97C5C25DB451DAC56B286F6007FB874686555FD056DB0543AFA59C4B1D2
6C6EAE8E4E226211219C690F3E71B3EBBD12F041CD64AFE61BAC3A46E4A43E85
BEA75A6CFC86442CC8D0A0AE401F14F4BB6F6FCBFE0F4541F5A4DFDFDDDF8293
9669A03C2A9AFA9544CC0C8E8B145BCC787D57B95A15D3B8F74B1D3101578C35
ADD0A8D9D4DADA4CBE10B839DF0E5EAB1B036C24E04B900120FCEB68EE91A17C
CED52E42690F9808BF40C0FF302E4E863FE457399AEA0AAF7AAED4A85C939794
45E8D1E5A9BDD3B2294C752BADF79F03E033D5873D5292B58642A9D79D6F5310
8151190BFAB12DE3FFEF4EB1C1791129C526E7EC49320CD3F2792ACA6EE48DB3
76528012DF50DB540EE6F6BDD4064C3A65B38641C2ADE78C30BFC3C5B1483574
2AEA9873A424C98F8E905C9CF80FC724E5A519BBD1CD729718CFA0BD6F3615B6
32568E0EA67288F7AF12B051CF9632156D67F7A6D7B5F711E2B3A8146BB249CF
5A643EEB1DD40C60358C55E4CC8E22EDE7B3F23ECBDA863CA573B6DE6FF9635D
D8C6FD508F211931143BA01D7D08E4A3D7B5C08967B38478FD9A143A1D701053
1EC3868FFF8C8B757A68BFC53ADF8F88D7F4844A8FA4414EF3394DE414CBECA6
C2E7E0A6FDC0D15A6913B9819B3642F682809412F9A6A7431DF5AF888E3C414F
73321DC5FF5A3DF7100204D212B6E7A84CC797802E2E30E3B9D85E3A084CAA4D
13204E6203B8537D4D7B517D5067DE39B786481578CB5FBB61218034C721F5EF
704DABF60091C434ABF63E3F44DF1BA5F724BC963D3825F1111C442A7CF5B276
0D2E407E03DD4B3C95AC14504665A6A8D0534585212C7706ADAF1B24FEA02222
D4B0EE989B48B94474A82811E2CF7390AFEB6F7F9E6309A71C82A089CD2DF108
9618A84DA1B7F2BDD3E8ECCE1499F3925DACEC43096D5876FAF336B7DE1C1668
5B03F824324A65D98AF2785ACF696DC47BDFF6C0FC593487D43D5C9BA5724888
757CBCE7F82603E21287761A738634A25D56C898E1E40F8FCF426CEA7DEA7A05
59301281C6E62388AEADBEBE941A339FB597CBFAA9A695DB4862EDD2CE093194
75804FA90AA1A40E38B7DC25D78E2AA6DE2D8C18BDF9A390CB22489618635F0C
806A7F79AB1668CB03AA08FB060A2ADCC8F6186A550FAC789DC46BAEA1D02889
1BCE072BC406477DB2E9E3FEBCE28793C40544A989869EB84A0148537DDB1182
219104B22197EA041EB4BD5601CEB6D079BB7769A11BE2F6896603072ADBCD36
FFF8986EB0A40B59B5A44A63AFBAF673B83A89C8BE6B2C5565027A5E6C42CF8B
BC3D2799234B4CA0D09D1FD373A0A1698FF3E494C61E1EF7811306D168A9E62F
4696441ECF94A72E8720E656EC562808CB0D98FC87B893D2B604D77A609B503D
71AA9E15A7E232176C51FAE6DF02EEACF5E0C9F80EC18A00D365B57F677A92DC
CC2FDC7D9D38A8E9A887E9C7E5ECB7009DB20905E27D47F0624CC89AC82466AD
F5E53A9B85C1C7E1F6B3D953A6FE422CC55B18F85A93203D477D5BC1A5983732
A160076864F407F99A68AD7AAE818E60223E0910BC6092E488A3488D54C024C9
D1D083F769C21760E7B2BD1AB594E30D797581F5A0E81AB0F7AA142ADA62AFBA
21CC46BB3207676B96695D911FB99BB903CDA374E2E2A206FF4F75362111E463
091E2AE2CAD0262B1A6E0C0F58C98B26492559C69C8395B1FA4C2F65DBD8738E
B7D296FDFB736747800773AF74ED5B7B4E0FEF48193197DD6640CAA6F371095A
260DE5DC01B8DEA8927441CD8C4B451A43766C89DEE2E639514CB1CF6E1AD693
E79F53A21234F3DC2ED2ABFA3F1661074778EBB127F4826F5D85031896D58E53
9449C89C4C0EAE0F92D5462FB60F86C0DE562561BEF83496284C96B1ABB917C0
7EBD3C5FE93DF12830D995534A8D82E4B822F07B1159017793BB4DA538B31952
E14D6E5B4077B438642E42FA754EB6CC19D867ECB72ABC47C0CF0819A3E16636
E7B07BE7A7AE912C213D0F380112FEBD737CFF6C1483C4559BB8168A0890CDEB
4D14ED754D8D56C2BE2B6372F2D06B2D1C079B0C777ACD0210BDA4F06EF57BFE
FA0FBA505A9B3161C348B445B13B0F6CFF95473D304823F59C0AE72117681FCC
EB541872EA71001C654D42DFFF1DB2A67E4D5C5BA1D48A8A22F2FF86AB80143B
C0C81D5A73E024922DD92E7209B2CCDFC5C711A3A752FBF80C009DA96464197B
F4D3EDCF0267A48EF271D6AD67DEA1649F5576C25CAFA6ED87E41DD3EE3DED90
C3B3F8A39F36447E2B4A5A0C143F7D89F5A7906D76138611002FE7E9282E547A
4B336C400DCE97D3384AFA5C0BCEF133DD294C2FAF8A061B6F44475375C49819
775F2522B9208A27D9CE70D084730B650D73C9ECAFD53217BDC48F8E503BD8B5
19BB9116C0E58457A66912291DAA0915E7D640105F3FE64EF1C45F6C5921F3B6
7F8C92ED932589114E28A4E4ED0490A4380917962C18EFFC6774F6DB08B799C5
966901B25E91D383FEE2CBE95660CF4ED34903DC094F76F851796C4FDB613F7A
E8C953FBA3414C1695FA437CA483A03B066689BF00D01E884D9F04CB52182197
311EB2A51AAA6FD71E0A16BC974D8F0867DD9FAAD38A467B4BAF4C6EDEE53E5A
CB468A187E2AED2D268CBAC815709316A4DA3481D7677F4E5CF6BDD0638430A4
D99EA8B47F01F8C51B388C76A39DD9F14D883A4CA48B1597EF3E340183D58831
A3BD98C5361B66226EA5E832444FCCE71598B59E7753771F4B609B835A629378
2B98DF6D6112200522C8084A7D159BDAFA098838737BF264CC73DA9A1547FE8D
58153E4C2D0977265870EAC015A3096905876A054CE3343DA01E1383BA6D010A
596CBDCF5A96FA3215DC9FEEA772D2111082CD9BFCAAE019C01BF1F6E94DA8B1
9CAA59B3A519F57AA785B3391F9355F74CD2351AF96A356101A3C4BC74CE6EE6
409F66D517503270F802BA8D7F5D9DC406C943B14745C15A208A90BF3346BB7D
A15085C064084FE7BC4F5B60542FBA3BABBAC93B61A938F7BE54BB4DAD4B0FF3
779D39D39D12059B64E8C6097B55159E15805AF829D5869F2C70B0233569EF12
0DFC5F5FB3738511E79DF1586378263B64C3CF4908332217639661CD4A17D968
CF0EE334272D0C07FAB282082DED26D4E5809EE0591709662A1B521B53987881
8276E4A5A5274E17759EE22D9F51DAEDF5873816653E5215E436CFC5328EBAE1
665CE873BCFE5D090A8984E98030FE6B21D7F5EA1D0A668FF731A43F7E85F640
CFA5E7F8BDC7A64312BBDF7AB57F34C18CB75637513AA762A8A88C2E79E2741B
EE19827EF69EC670F9AB7C93E25949E228C801834C72371F8B5C888DC44FBA56
07435A619684F502CF67510EB3AE2E0B1F5CABE244D8F1F6D29DB3997620BB2B
7BD32C08906D0D2154BB984CEE2BAC78CC0994D3927C89A1669681D8058179F6
7449AE6584B538A32295BC5939316531420847FDECB667D6344DFC50A6DAFCC3
7D625BD635FA5C64B046AA8835817140B76DC22B5453AE890CB5A40449444EEE
34A923562A80CEC3AAC0FBDCEC19C99A22B51F0060951E935E026C25847C739B
6EEAD7196A7BD06977F200F881FC5238ED936026B990B444882E04BF57CD97B1
41546FF52AAE673C3A8FA461F426952AD89F69C9BF448F92E9EB110E4A01476B
E68E839DD0AC96DF7BBA57F79554AD8BDA842AB063B025F5E50D42E691DF32EE
84BB9CCDFD13ED7461AEA5FCB5653373DF42DE2492F6C98BC185514EE6896702
5779E5CDD456756F38E8E141307E76C13ED37655816E5DA7AFF8145444A12EC9
AE6C4C9F01745475B1E3429B7F0736227E92113DEA8CA643AA958B11ED879178
611E0E2FAAFDF0A13E3C679CA584D93CEFED8768DABF7F2E4FCED47D16F4DD22
E8D8DD09F60C7E4966B4FAEB0406B72F8FF605BD06D348DC10DE5D0AFAFF0687
C7FBC708A7DFC55327ECCF5D01C8B3075EDD207C35BC17DA8E255C9216E00048
6D0BE56AF1BE88C20A59AE40E7A7DCF577F22D21E2C2BED47EF8EFB063F4E02A
5A1B8F12733514B688408CA41A75EDB02588B208505438142BBF1F1BF869ABFD
F1228A637866E31324B0F048C2F099F9085FC2395C8F5A8934880B5E6C0736E6
2CD1CEB660425F040200EDAE2413F8723635B4CFD3C77A50DFC84CAAFD32AA71
6301301AF68B08FC6C61800BCB0EB3F63364E6189AC765FC2C0D760E88E91CF3
180D3C3C1F0B13A98CC0339E144825766BC39AF3194D4BE46D007753445B322C
7D3AF68FCF93A5453D18E044675B4A4C1292728C3946B7BC590B9C68F2091758
A33BEC1D91D932FEA8A790C218DD6FCF271460659CF1C4370E3FCE02D064A643
D3F64AEE679B05EBAB7CAB0E2A19321B7CF95EF16323FAA568836ECFD4A813D7
0979CBD1C137BF68BAE02943FAEF0D36E3CF03D2E7C263A55558EEAAB08B10DC
15E662E4E766AE5F6AD0EDDE6DD76ED69EB52BC90411BD034E11E6B81735AB30
E658A407B5431392AE9068155217146338DE3D4C65A1831786E7E062F1DF68BC
C50EAB2B6C8E7EC2B798E2E8BBB25A13E3F6D67AFF806759BA0A3FA256607429
A7F3407CB723D2B7482692E8C4487E1FF5F45B9A4E0A50A59749E95D7AA9B516
73BB078799F0A752F3F7DE5CE57978C33A2234F273E1C58A786564ABF1C6ECDA
857DEF70511A061A7C5DDF1A876B9C097934A8DE6D8125514B17A8D2F6C3039F
C62C37DB28EBBFF30F651543A11127279FF930B5AC9F23CF55920502D0BC7EFB
D5CB140E02C5A8C8EAE8D853133786151FD06B447323A98E0481DB2B8032EB91
215C2ADFAF9C4ED4EB6497E5FFC3F42F921D984E7B49F658D020DB057B1AC3ED
1E8A75DCFC69B0F51A420D1BF1F8FAC9AAB39662E6D137560A8363F8D0B481C7
1582A64E19314525F5345D90E505AF1D4F053CECAF3605D0640159E49726B0FB
BB1CD0FC0B91C99F9EA3E2D60A5AFF6660A4443CF494BC17A9C644FCC9C73820
477C07CC1548A348C48D19182D79249080AD244A961CCBDD2318D2BFFF553A53
9F05BFD3125B9A52934AC46E268C7A68B81FA3F3844CFB23383CA50C135971F2
7E862D84B3ED766BDB7F06B86095774B74948C839BEED6D6C31BD71473131882
FFFEECE9FE525503DF25B27B0B383BD71C7600F8D1AF3BC27182E4FC085D49E0
B9D5DC3BEF9EDFFAB3114E113AC272E689268C2981DD9B4631F18699FA6F8D66
5D7AD4D88D93C0C8AB119B54176F13818AD3CEDA16BB65D88A7AAD93961976DE
90E40187EA775CC037E43CB5B3540FE72436B7BDC9E33F6D4B2E9C167AD89090
1DB7A1C0A3AA55193D4601EC0BE3CB303E06CB722696B35BAB672AB65D7701BE
2C4206934FBFF484233685DABEA85E0FA7139DA9D0FD412974B1FFC634AE2399
7590709F66FE8B0BADA48B50E47EC0AED73FA6DCC881D79C7B118F9C0019B318
CD3A83CB0A1E8891BE5F6A0BE360F8DD24262D80A1DDA1396947FBE8692B77E9
A6F5B074DA82D3784C82D6188185870FFFE100AD9EB380107CF8A4AF14101364
7112E761E4235722E6CD85C35C05C51539C239C496145E7DD84FDA4F11EEEA10
31376186268FC186834F549D3C3FF963013711AB72B76C72F0989AB3FC8E4B81
75703FEC53549A80FA0B8B14AD07A99EB6F857542D61CC0DC9510C95183E2D5D
EF0634548E8720B73DE2F45597EE0694AF8445C41A12A0DD5382793DA878A97D
3CAC875F3B157CA31D94764FD69135A8315DD3B87E3EBC4D1B2751AC7FD85A8E
9725D8D3AAAEC15C662B83758D1D5AE4904590697E8612476C7782BF11C857A3
F221993D48754421E6444BA95515862E744155C8491CD848E67AEE69EFC73CD1
2533D3F6BFA0FB13B42874C164A5EB0BB4F2C8AE029BD1172B430088B5786E7D
697D501F3FB432D886A12EF6332152F0E30D38E2B0F5061BFFD39B1742918B32
AE929B96D9BD9060797845C206019B6E71FC3C112A2667AB420374B85A3C89DC
B80A5D4E5ECC995EEAB01EA2E3783E865648B407169FF6C50805AB70128B30E5
1476B606CED199CB908406702E7AC4C6CD053137B8E8D2BA43F68F4C890594E3
57485EBA3FF57BCD5DE4B4971B302527A867A04A99AB827391F2554FA2565E72
66C0B3C6A911B8C20E9BC1E6A0BF326D23FDCBF55CC3237894E405957E67C432
D34DABD05059ACEEC8AEDB5D513317A3A65B4C4CD419C22A0535BEBA631C1B78
50A83542323E9B3733DD3EE7DF7F774DE5D0D0980DA8C450F574FECEF9406C03
0BE3732916C975F583FC660BED9D00688C94717B2F1204BBE9A32B02C569FE47
B75784ABC4D3AD5C7BE95535B486F8C805A2EE1D38F2EA58597AFAF2137F05F5
24A46A9757D94335F9AA9F42C1330F2BDF601187F13556C213E42934840ECE41
23BA815A52BD8A72DEC59D297CC24DB89EC76930D071A679EDCE7E083012EFAF
ED3434FA017B58EFA18D7DEC9E43F0C01CD28FDE705075D6AD3E0F12CECB75E8
7A4315E0C8CBB4D082D142FD0F0D769CDAE03F7CBAAAC5716660D0796DDF33FC
38400703DC7C13AD6C323C6FE237BE3CF806DB38B43350650F2CD86A362980F6
4AF3173485774C6AAD499DAD6CD26B60AC037AFC3E8CCD15DC239B58AD2E9A17
C3A56A463436889F3CAC1BEFAC1311890F19423E985E06BF742EF8B0B8479963
A58738B22147F8386B43FACFE8DF1F7B0A6BADD216EA735B2F76F0C4E334DDF7
3F19B5844003D33B7E64E4DB591F812C272C20E6767E45117F52001F9FE01C18
2ED43AF5EE50405693B45BC96AF80597F94E6856098CC0AD02381732BEB2B958
7D6B50E6F7B4E9DAD17D025044654068EE836036C4EABC2FFFFD635262090F80
F300B8FD7564CBE625198005583B193873D837EDDC8083E9AC2AEB8E64D3EA95
FA22EB08C999AFEDE6F666CD9E0704FA0598477BF73995AA4C37BD8D5AC97935
DE4D96DE780BA17A05A01B74BF8D0AA0BADF717AD3D206B0829B31303F61A695
B20B65DB5CC404B62D98C1FA97517A181721FAE4B1884FC4CBC15DE7E764671E
5A5F3E4FD10BE957F931995C83EAB1684CA637424DC59853EDF69A8F8C9B942A
18FB29067DC0B60E794A59E6048129CD0E21D2B6C648E57A4CADB9551D5B6876
F38487881D72E0B04DAFFD7E650438288069D628D6C6432B3DB333A13A2D9160
1FA203AE3415AEEA37E86909CDFD42FEB80F9C86EE6A858EFFA9D7B7F99764E3
718CF5AAD7E22765D7F0EE8EE1EDC4194F1012D8BB958B6940681AEA50C0616A
0B0ACCF1CA0A25AB10E00E4D5A8D0C3299FD377794C514312748E0A60E83AFEC
FC0279ECFDE314BC8E09F9925A7A2C587659A74FE3CF535DD1901154F701F3F9
6289BFCBBA6F05F8821359AA00F71313CADEECA74997EE6EA8B9F4BC91A9DFC0
3C3F55166FC377E829EB5FF163FC80B0C4C682AF762302005B0400CB5F7CB498
2A825761F8D64F522715A6B6AF951087C4CDEF45C52CD2ACFB1943E19E74F2FB
D7F0C50DE4E08267D894EB65A2D706964693DF54FC645B785D5A4BFFEC5EB591
81A1C02DEB60B301C7208D5B65CD9041C31631DFA20F0E56EB6D7FA230E6126E
9745030171081B31166303DF6A79C301E00600AB38A00EEA61310B34A0FEBCAF
9223BFFC63A514AF6BF4AE2B867B9CF1B3A17D93070632416E2316A739A2703A
399BACCB0A38FF9D653A291E232C1E9F8FA4AE4EFDB0A7885941AD2293441E69
192F920A6C1CF559C515EF85C7747CFD61EFD84E2CD21F229F107D0A7754C4C2
7620D6CE5925909FD73ADC0CD07C7CA74633545ACC6E1B0078A6D40CF7C7D8E4
334344978F194F0502B7E610DC069791E52CE628CB5450C047C01A924BB9615D
BB6786DF6522B4AFF4D46E8B55B500C2AD0153759083DBE7DA9B89D877992A8D
C821F4F6F7895CB44BBCFD5FD8B3D978C779AF8848058B25DF33C2D3DD9EB64C
A74A51274134606E73A0D0A9ADE782CD93BFABA39D0F2725E0DBA7C8CE305DE7
C1B59DC2184867CFA9E68D9392462B76A67EA8D37038E0B9D9C7ACDB71646185
62DABD7DB8E7F480D0521581902848649D7D63D05CDCA6D3F2057FD13B76678F
757AC1ED7052AE409145B30D89A9C4746392E8BEB42A4BC5D8CCBB281CD5EF63
589DCDB652FF0580BE54FC52BD298B1DE626D3E1F46E1F985DD607832F8A6922
F3A7991E8A856D78785F3F8E9D13824FEE33451E83D800226155BC9D1A36F6E6
811D1F7D822A57E0BA52FD6822344E2682F728CC9DE495A988482D22A585867F
2B8469A5DFC4AAE701C1AA0BFAC3A7C06483A7FE49E9118C94F79ADB280E5CC3
803219464F24F5E4E1A89954B77EFF44E1C7C5B7562B08CCA259EC1F94D869B2
59DD936CA24930E7085F7B9D4B4698F7769E0A6E389AD0B2A5D10CD4C41A4009
7EF7511CB12559A35F7C4AF039C7D12B6BA9169218D70EF87874BAC6F9947D61
3D7508533669497454E52766AB705A5938CF03191454F3BA5CE1AE7C913A4018
FD77C171470752CD4740BD31A9BDA29B8D036473E7C5FF6EB74EE7B424D48264
80273F47C2A67F00C609E89DEE27118035F2EF8BC2B92100E55FAE9C25574971
375F6E7FD7F1635308FBB6FD875ABAE3E6DAD7E057361D7CA62858038D8B205E
E2D6D31BFBFA40063D732B10D2F6C24D1574CC284FBE16A730E9A1E3EE6A8B54
1D6019ABC395919328A0A4DAE7850A668174CDABD0BD1FD8087DEDF5DE863BD6
01044BC078EB8BF412CA3035EF9C2C397740F2460BA3B85ADC328CC3AC493DE8
C2F022EBFA14A2976D8E3234EFBB940F4B9E175F63A948F9E8787C4DCC3DF532
8B9CF05E2458B4AF11A7366C4FAB27ADC304A99639761D22D748A3DFFABC322A
2A3F62BF60D6F2439E2D50DCB828CA051B340AE364B05486B6A11644A11D4EDD
3FAF0F3B8B3EC5FF9D4CCF5B55F1FDD677541D10AA22341A8A35B8F787A85EBF
E02B451271FD4FD59A553868E958DA76EB61D739284CC512ABCD937B60978AE0
D5CB25145FAB5F94FF12D08902EE97B8CAB0F872DDEF7205F6412F250DFC5608
982CE8CFA119B586A83E8FEA614F379B0B3DAAA9B441F5418A96DD92239D5084
600D19573E37D9B107BBF43CDEF5D2A41B5CDED1A9D574718B9C7AE8711D1120
1CC423CC64CD04FB869B9C1FDB4F47D8A8C19C3D9D2D6FB809016DBECC699F95
09C937323EB09266960F7C42E27E04966555DBC860D42BB03EED7CD5ACAE1F63
5AD4656A8411543FD8B3DB6B7ACB32CA6E48E27196D5F83D54A389FC2172DA93
C47D22E22208EDB1CFA5EE9DC972DDFE5750B9009F8741061465C24DAFD677AB
7E537227DE9FF96147F750256CE1DF6441DBCF275589A64173BF894005FB893C
BE5D859076B5AAE89693A998CE93D5063F7D87E6F759A29F32ADBF5D37B697E5
DE3C16715507FAC1A256207D14A1E013338CA388A3A6618401800155AE380DEC
3842751B0C9CD72E6375527ED4EE315E8CC92F0640CE6A8AF32ECA6F9C06E0ED
5B8F15AAB0C85061A11D90CFCC7EFA0C9401C93F7F83226D12FC837DE581AAA2
970021ECB65E6460F3D3882F51043C96EAD3FA778FE5F352481F6DC97E999840
091388096085B784385CDDA42BC4773FEE81510813973E1BE80E871CB71007DE
C2F4F87E7D7C830251124EE10925A4AC11DDA2A5FB82168E28F0AD3B3772BCC3
73A6967F9F36BE057366D0B3FA05796286A85B71D65B2F34911722D69DB4D3E6
7DF812A28813BA8D3D99207F91BDACC98378DAC3DE2D3183B646672DFB2D45CE
801DA6FCB815622C7863BA7E3AC567A69429EA3D1E7FCCF0E3330146F527C59E
5FC718FB751B46C7972BDAE3C044E0BBD0FFCFB0E5B0B881067990DEA8E62000
9AF715685BF81CB8BB33747297F7AC612899F38A999CDD672AD5ABED614AA483
E441657494E68E34391E2542903355658BD278E6769612C75BE4A992CBCA5E12
85AA1067D470813C4EE00343743A930F26C738D1E8782D670AFDCFCBEF6BD68A
A64D68AE560E755F0645D7EF0ECC05416ECE2F061CFDBC321348F0481A19CA03
EBE2F1EEE59A3D6E3FC23B65AED24539B4A57E0206D42D82D2022D0213D8AA16
275D53AA375ADCF188A2EAB53160E97AA67C23795550FB9C592FC1DC162322EE
D3BF20028C0019ECC8CAA5E07458583106C7F43FFD0AA111D6B991AB46827F81
542BCA6356A39246E80768C4B15D651FA8B720DC21DE0755EEE6F50ABE014A3F
6A4DB719E4FEDBA7F882054BA0E6B528F42137AE79F4E31B08DA208FE08B4C8B
DE976D18C8F669EFADCB768A6DD355CE23F77BF90DD88672ED1AE3C262A20655
77D2A4A3205A594FA324A80535967BB035051254C462276C584ABD904D7018A0
0F6017ADF508BF63F64AC0CEF680E28B1AB973D053D8D3A68592A56AC054E9AA
4D5F364C60F518EE6B939CBCCA90FD837EA47FA3CBBF9C9CD210AB98D922C364
410F36D3C2D229D803EC618F42BD7E4F25BD6581217D977B3592C79197E9EC90
D4EB52525E0AB6D46578E8E438FFC41BE6B509B844B73E5863A655F9851F31B9
2C54DD21C9DC3DFF06F3966DF7A5CB7D8858F60B40D0CAF340B83A047FE949BF
24C35C73E5F3D059A8385466AC97F5F8F4361DAA66686A89E3C4C6E3F3C15409
EBDC8373B81B6643420F1ED8619221907CA3F8B926969D1F898B5F9A7DE36FF3
A32F6B29B0EB5CAF99F89AB4678AB6609423412969FC1DECD51E5B3FAE95D971
05AE4903D01C0D1793AA3387F7383D154BB5E30D6E102FB29ECAAD60C12F5A15
2863097FE8153ABA636AC10141148F1ECA353AD07C46D076DE76A585CC2F1CAB
B4F9535C4BB445FEFEBB1E5752CBC7539470C7635FD84DB08D70E5C8DEF0073B
297683F806A2A2C038FAF3427E873E9673B746ABECD69F352839BD9D28044161
6A03B1356EE5059463613DD36491F24D7C3D634B25C2C98544F173ACBFCF4475
A0BCCC17527145D62DD8B42065EABBBC735D9E7226D2B353CC752EFEC2E91DF8
E2DC60C1AEED0E119E5ACD18F96868A8BCC914FA5EB82DFB0F45F76933B7194F
D9F3E4EAF4D145E30BD9AF179FD6BDC3D739087BF78F14B0E819D643B659F742
EAF18494A4CDBE29133FBB4663DE44D9F03325964D8B66865C2F9E42D9367C3F
CF5311083B89C86D81AF27BDCBDABC5756994ABA51AA3FB99908B46B10CB5A9D
710435404EF38A2FDDCB265CF381F02FBF83D19176AC10FC9132536137891634
4BA5CC8E4B3FB29F2DDC7EA1B24FF6C382ADA631C815FAA0DF5303BDF4C89757
BD860D5479A701BBE25075E3FFCEFE1D9D56A1660DAE90B755958197A335111F
BBE83E2C63DAC1B073442BE71DD5EA77DCC0B1F1FE5707D4DE844DDB7DF11812
F106898A0938D06549E0C2D5A275C62D0812886357B83180D000BFB4C8E8D447
D5FF7EA0CD7A5079E668142F32A60818E661E1454510BD9D6B538C80B48978C7
7A5680FD5D8DE8B605ED3013A69E65112E47C2AB3C0B29796D2BD1DE1D4B673B
0D41B850D1C55F5ED7870DE90DBCD8AB3972CEF5BC502DB98B9C81A1694214F6
637DB6A215655EF488D040C63ACB5FA24E41CBA396D257CFF8AC01064DC59B43
DF12DCA626F8A21479B9AD0B353267B2BE5B8178E6B7889A33771F86276E6951
B1E22875FDD5C9D9DDD7BCCEA2ACF14D47E1891484FE9CCB6110398F577234A7
9D34F58AD6DDFFBC47882F42E1699A7F8FFFA8BCBD4D5D0731559C721052784D
16EE7DDE479B9877082D321C9FCC928638FCC2FD5B04E35B13FD57C4B2F686AD
FB72757FEE03A5D4B906997D535992BD2F7FFE6009ED344479A8615C2F353A54
0FEE65F8FA5C0D480E34D300EE501DD6EEC702869029C91DEE2D791089559C97
2F241B85C3465B3C551DA0888924F8B7D0E36371E3C1D4269EF71A57E12C61B9
EE2DD1D40B4AC65A245A39A7FD55D42E3FFFE439D20EF38EA4183E313B9EACCC
45B962A67731C76AC98678B54E6E3A103B2D20EEE764D9AF9DD776179C1F610A
95C6BAF7DACADA46F5C0764BF53506D27D54D7BD1B948B1BCC4E6AF1E56B891F
251F863683A1ACFD7164EAD511A3BC741690956658EABF0EA6EC704BF556C274
C0C815503DB16E32DB9B31A3DA1E51A3282038BBA7F7FC70987A57EC73E5A266
393C0B66C95599776889FDC612B4247BD6399A6423EA5D12E39DDD8187CE7E34
B9F87CD4A40A1DC820188E85766AFBB3B9921E7A9C0D6AB7EF8001B0EE826F64
08B1129D6A5D843F40FE063935776459C824FA2F48C9A641DEB99A6202ACFBA6
35A73EC67F26C4A36894C4120C6ED4767259BA58F115A12C0D838690138FAFF7
34F2E3B201027253875DAE598DECD3C4C26E19284730BAEC36E743C0A4CBC051
86338503B91199799ACACB28A6201C966F2A7176C9524D7CA2AB7B9C639CD9CC
802AEDFADED63A11900D564658F0A4ACFB0CFC3F7D2668AC317CC09A93E308FE
AEA896271A3B6DB3E7D2AE858A1B99803754E5BE88A5CC380114DB40B124C844
BFFA3CA29E638C17FEA49A51613E3E6A46C9B7B1052C0A5491130E312ED28631
EA5EA1DB1FAD71C69F5C5C9D103BC205185742394D9CF5265392E03264AE22D8
1E75A04AE68344A9F151D0B3F56D75393A665BC35F1E515F6BA570464F63E2AA
FBE10091A2315EA8C071AB631CCD04C3EA77541646B2F6B92F2E8840F8D2AEC8
1319FFECEFF0B5C6F445770BAC50F59DB81033F4F4AEA1BF99F8070976D75485
DC4EFE66EF6D7975C3D2EDC2E7C2F5D2C8CFC5F6FDA3736955B241515FE91E14
33A56A4B1C717A38CF9C88CB71E7B4CFBA75207C66D0B692FE7C9CEED9A54EE6
607CA152AB4E7ACC5DE6C22DF58627399F63ECFF4FE661FD5B5513A3D9835580
86958FF839797DB45168A9F3FEF6B8BA7EE8744E56631FEB5BEDACD00C64C344
DC67A6461971386EB6C3E3E108892F23FEFB203990EB6DDF34E806EFA14A2C2A
D3A949D41A94C28119DDC415526A257154F866CC7290306F2B40E28DCDBF18E7
2B17D6C2F443F27412461AE5AEA575249E6D4963C88AEE9FE7537C3F8E23C6DF
0CEA69436B823B1A2FD91473052C66A0BEFC6AE7303FC097C0F5D0ACC25DDE69
50E596AA1A3DE6A405B173B353280E315B11D7E020939F4E5DB2EF21DE08167A
D025F24591E5C2F51F98C01BF41ACD72DC7E6F29FD01407126D3973FE22CD3AC
4F6FBB0AD7B9694ADE410D411CDA75C4C5C7864FA957AAFEEA79FEC8CAA1190F
DFDF3F6E03A90ED01EDD1A46782159CD556302D5DF93F803C670E243F0B0EB1C
548746C08C7F4FAC0847E3BC3BA66933054518026CA3C35805BA4101E5B57F53
5168FFE584012272E231983CB5E976DBDB2D13A7F91C43C236DBEBC18195D4BA
3F2D9C1BA99FCFC7C1AA00CC837750BE4A783198354DC5C16AA511B556E660B7
C09388A8993679CFF2A83F7C0050DC2F5DED04CEAD7FC7E4EF9872232E6AE73E
DB32EA58EE480B9F7FF55F120B035C3A1A502672B17951401E5FC1E44E37956F
B033A1DC844506CA93A854676CAE3BDAED8DA7D7C8016D0FB8F1245A299C3D4F
7F4116B07F1625707CFFDEDD5CD67162F8FFFD5007859E6FDDFC381A5725953B
4B89397E943A5E4AC6B808540C553DFF75F3A00495714800B306BF3FCE0390DE
BA757BEA45FA3171095052B839F7A2A9E687ADCF5D118DE26D1A1F383A2E3003
317B192D35E896E785781A0B7FE592860A47A61E951CB5B08CDAA8FC49E3A73A
A596A5D16B68355F68A29263C5559C5E7E303ADF225A2FD871183722A407F7C4
524954279E275DBB8FA07624DD3968CB56997A12C2DACBCF2913AE174DEA4F03
EA3B26FB4D5E3D1751ACBDC1812004520E40365C8752480BC01C7FEB8A6BF182
467ACFE3B05FE61A64BF5B76E471B301A60F4D9C07A3E25581A4B9AE47730F34
A418A9BF7268900465D114CAFF0FCF67585A6BCBE22DA791FF97B554FBCB62F9
0A0A80260CCF63AAE519616F27BDEFF76083AA9BC41826C942C841D1E97FCAAF
1A9A3689EFCB50F09C029DFD240DD11799F2F6B3FC0438504B2906E0FBA6D281
3AFFFB6256C6A72975F6E5AB21231E0E17A43F331F7BB5FC96493932CF91990A
C68769E281BE92D72FDB8A69414C6E3C4882E034EA8E3130C5C36BB2496DD523
3BA301341CF48CAAFDE6C13999210CD4D7694F73F26D672A7BE20500304BD428
BE9AF67AF35221CDE9FA92225A5F5E1D7E8116BD6677BA3106A6BF5C8893C457
CF577E82FF229A45F7FB91072F362FC1C2780E963028ED2ECA0B7A027A91E515
38B0132A7760C13A25D4F58FC0C20BED7AE3AFC8DC854A40D3F7A924CD93B97B
6A079BBA10E78FFA5A91E9A30D0988FC0F98EBA85E3873810F3123A000E06E01
95E08495F5241B4557418A1528BAE9EFA0140545252B0FC624B2B7427EB52D83
80C5112F4C6CF632C025F6DAF58EA3E7BEB2566AA4961AC93C3E0CD14C54304D
EA83E19A7AF2324395864961669C3B1CC966FAC85C21A80A68AE510704F729FE
B3AC16B6E3061140A7377508BAD0A7CFEAA913B935BA91F1682C8957FAFB3428
02E09FF8F579B59309F9142F9CEB88DC7864A1D3538A6AD12C95E35E48F94F97
079164273D164E138B8F6171854B27E61664C83BEEA0958198AE0AE0E053D05B
B075FA168681C055D562FC34461835D0FB7A9BE1E8FFFC44E44FB47949643896
ADFF67741FF8F24D7ADE309C9BC47DAFDE1CBE7E9D3597A3F5B4CA2CADD61147
9B9CBB82AA93E1B541228CD9817B27BBD0AD095F7A824FBACFB30566D330813B
E00F185D8EC22BF69C7F3C7B399B7001BC195E409C760F618296AFBFEE1989A0
9F9F96340E9C40FFAF612CB8A2CACE0B6688CDBD0567637EDA34CE757D2D2A95
344A9BC70F400C8112DE7DC236752A08E58F873407D8ECC2D0DB427E8E9D7FCC
7FE4A0402C2DEEA247B213A287F8D31AC4AC1788A4E78E365F57BA9BFF2365D1
8733275A1938886D2DC102825CB3EF2A75AD68FA2AC17072EA6C9F52E42816C8
5AF34C21215E7E976AAB19CA41078D5E52080755C7D7AB3CE97AE2F4D2223DCD
9895C6238C883492A1DA82310E6BF4F054EA48A039D07A191CC377126A41EA96
394170A5BF25824F77C41C1D6D06E838F7245B1347921D8D93659EC8BF539B38
A360546DF3F774D3814481FF721C94CAF73D5DCFD19C09884C96BC9405DA846B
0272CF151FA2AF75FAEF208E4D2E920B0B254F0B2DBC4988686B65B808CFCC21
F82BB53B79B89DE7E561195C6853D22BF99D85992FEAD87C4B2DB2163F7CADBC
404D407A616D6C0517DBAFCB5C037BD368F48FAD6D6556644783FFE23953B99E
BFA7A4DD56785CED7E829F5B18B621B99B494EBA7C4042809CB48636ED71848D
2E7CD6B766D4F3E1751C3B528D02B246928F931B1BDF59978009022FD528D9B2
13F4A4E1FF3BF93CE13E54945B0A6BCB5633B1D580346D913BACD29B6592B557
1B13D28E585CA2C81E20639F0DA069B5552B4D707C0A9E349EA8CA18AD26F3D7
A01485B45862200A11E936D310AF8455122F4C6B61307071FBEB6E8DA22F71CF
C54A94F447A97175E18373A7A108C2925DEC6B084E7437D9D11E55BDAD616334
1BE08A9EBD674FA75F8496D3FA34087DBD5DC869DA7E06851A91F7E0336CF681
1B229AEF760C253E9AD40B28FCE555DDBC29CCBE2D85225893519349085738A9
0BF6AF759F8222596F106F1590BB741AE73DD94A94669BC3DC2CAB97F476CC7C
DCE3DB5DDF931CBD65C6D98196354727A942CA3BD03B589E59FD355EA0AECF3B
A173966CA2B53DB31F0659208BB467DEDED13A24AE89D472AB4C64DDC84B9308
951D2E3D03E1F9908BA09904E265C7932B3C509D3B02172583CE1449920F9A07
306A2E8132AB459F803E0DEDC3DACA2BAB2D639677C6C842B2A8AE43F782C9C7
F3EAAB68393918581E5D402BD2E5F5996D6F2B1CB3462FCE34CEDB86D1A59923
04E47D91050350FD4F8AADCD73CB08A376CB8E95E4248C4A1BFB6819CFA0F0E0
7A4A320264C90B9161D0B9B612199008A3A1DB2E4C4AE4356CE80939AFF6ABE7
2FF971C36D480D94C819D594746B67554206ADA08992CBDEF437DADFDD31F62C
D736AD7AE654A7A2D892EA471590989EDC988D1DED23AF9D42E7E92E35F3CDB3
5836193EAAD4C38343219321E41EA5FA846C05226796D86CF4415C5B78816160
96BBE4AD2D5278A472D2F56ABA6D2FE512EEC9CB566FF63B9DB65DCEA2DF2F01
C1DEEF096163BBC69FFC31D5F9AE0D448ECAC7276FE6F679C95042B4E88B99BF
3068DC9B8FB761FA0A95395609A8EFB0EDE5990B9441D6673E65487B589C446A
3523989B93A6CE7983EE529A7706C431810114A1BA9301CE73BDC3777031A7D3
82C2188C659C1A9B51DE04D1E2124CEDB39E04D2869D59770945D1D0E1753D2A
58030C75E38DB0975B198C864005DF63A036F901A464DD487C17117AF43BF83C
F25F25300B3F33D1E91C99BACF5E85710E5B27F4D142E96CD16120F55B9650E2
48F0F53149B93618D9EDBBFA1DE81E017A9279DF99F748114A5F27BBBDC772E9
DF96B68A3A1927BA4FC4672314F03433C1FD2D044F48B59F8C8E8280EDFD3C14
374CD05229B1EE3E06548011F3AA2FF3824F67EB14A7D28DAC9AEF7D76D82C88
2CE48529FE6E1BA456555415E37C88F763F6F0D0589E35C29B65DF54540DCA00
58E2CBC008360D0E835559FF2F7648D9A5E682A0D7E8BE807A795387BA19CBD8
89B2DCDB5C5076C2ADD726D9F7AC7BD56D605CE097587ABCA2F4ED75C6005B59
B995C33F0E8602B1E21981C531421DFD5F1DEB22E0A26A1B8108E3197771F75B
76060DE2F3258A8B7002EA22C8D15426DC553D5233D4BB67B7F80D29793C5674
125AE70B9DC5A66BBBB9B909BE91E956B5C854C11DFE22D435DBE68071D056DB
3CCBAEBA07DA11BEC82D2E28FDB7C39FC72AE16C2CA284ECB967934FC1683251
7908F58E5E195C1DF3AA33712743C2E3C9AA296C605B2C07374AC3EA95A3E7F9
FDBF20BD6B8022DC95128AC148BFA7798A2FDB0C51EF78A75BC513EF3F948802
427B494BC2C925B5D29496ABDB3529C61F94DE138E6A41DFF2B40AC8BD19728A
49987E993961F23A952BC693043F2456FEC90A19DE4CB876A862F38291E60062
960AA8CFEB2823CDA7B88CE18B7F91EDB6575B03AC246E7ED482EFD964F49F54
5F847863C272658D77457CFAA7D92555411CAEEEE8CFEEB92B8EFD39F5A55907
6CAA692797DDCFC8E26B65403F1DB7CC9D4CAB6416E321E15394005D79EF609E
F1098044B99178A165DBB31F6D616267DD0CEC7E6BC8C152B3B83812528A5217
3B7FBD24DFE37E30A51AB63BE9DBDE3FFAF5137F1A93D6AA572506A0A09CA859
A0FB7AB969DC07CB3FA37FF64FDB6E1BEDDCD104679D221764796FC969E1CA78
5DEC60D4A8AF41F24A9C1FD3A0B3DAF78245FEAE56AAE2758673A7025F14D210
EEC8CFD475075F0EFCD0835D57406D9DD5A05D6122B6D8D15EBFFC5673366565
6BDADD0654E66F4B13CD5D2B18F15D135CA16A5D03FFED0391D02A8B0F08A072
848CD279AFD9FA830CC935EC4A6EA78F730AAFEC63A2469CC5F5040F7BA28EBC
2ED7BFBA625031BEF76E41296054E2CF273026F8FEF29EB01AF4FDF117DB6999
65B359EB7E9E5EC20E705514E8A1448FEEF81EDC5D2312CECDD87B47349BF74C
D33F8919664596298931E16E9F4579FD8D8F0E51F40238734BCD6F309BDD20E0
B1CB276FDFEE66293306F8B19350581378D98F3699F0E95FD3E95849D1C646D3
88FD9D42B1EC8CE7C37144C541DDE80B196F66170539F10367A08CF6AB44B3F3
CAA7B405A84D594AC5189C7D29222F5F0B76B6FB48BFD4D29AD3FDF89694884C
5D199A7478E8A68EEC208E9481E2F1B2FF6A5ED0B1250E1FD83903B3028B9625
9176CC78BFF1E583996E2A0AB881C718929F8C0D73F3600BE66D6BD565FC8C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E346203718C
ACA3E953E1E2A74FFEB0FD2DC6A1BF941DEA5FAE10DF5D09615E225407050EC9
D4A8A4EF1D4C0C97B6D22FE5C5FDD6BB11177772757A5E24C1E6B301C72039F0
DD57452323088A8E1C8640BD1740781D9F5739E0E270236B941874AFBD2EB944
FF7B8B68DF1CCA64E069D1D62EA3BE6C01D9183BE635C63FA884815CB9E5D191
8ECB0F4C877298555F42D449069D7E1C67977CD8AD71DE83D848CA2D2C45E399
5047DECF3C56A9B0AB1238DB9B1C9810B72D501150A08B06771450D142AD0F28
9E851BC53201EBF95482CD309CDD85CF13EA2C2C70B52E035B41362A9AF37F8E
A0DB03119590D8B45F1964D556F8C8B6A5DFB7239E9918DEB2A38681137DDAC8
9B50A49BFDF33B0CB9CB949C8608BC51A652D87B12D4F7947C4D9C05092A8951
8CE9614E8E2D101A1B192A73890C4FB3FE4A5A2D2EEF6117CF9ACEDE40A2E73F
6077463351C18EB596C732FCBFED4E2175BA440B2847DE9ED406176B3D5BBDCB
421588CE990F5BDDC8AA59C6C38DB03CBAD827202606F456EF38944896EF1F89
FD50E8000BE5047648CD030E594A51D67859F664562A53C1135F4A5346F40A43
CB696D98698F9BF79375892E752C6E49E3AC85C8046C7CCF2779956FB8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55F7E47F8CC4190CAD924CFD804CDE03EC60563D081F110
CBB104055979B93481E76C4D12A3E545A312C95C6F263FB469142FE488F9EA5C
7F6511BE330D228B4EAC4A163E08F5A824ACFE020F88E665A1EA40B36D9A6110
CAD90C568431CBFE3E0BF24777EB917E73BD2FB9DB6751F7C31EED8A2A563F68
C1C2F0196F30AFA55779A6802E2B05A63808AEB18F2D522ED193C8623E340A55
A5ED72DA5BD1C45D2C5729767507D93B8C0D596E109DD3F8B06202FF8DCD698B
56544751347E9AA3520060DA0196DD4B0E8AEB23739AF92B579720B119F21B9A
96FDF0798A4397FC6B28F7DFB72F5895A6BBE8E502E2980B0ABC6B5C2A2B089A
F41F48E074134DD18452689E3195E821C930434AA2DB7DA9BD9B3374BF7EFB0E
5A1974504B9DBC017F881EFFCB871FBD7A0FC3E29A026D43F6EBD50DC91A2EA9
C32D7D54C749870B3A32AF67E260A239F82BB7C8495F86D4F2865934F77E8C32
C785FA2212676791B6871521F2EDF42FF7D1A5B664F8B6032905B4783C306A9E
97427CC102BF30D70870DE8F9AE8408E4DB70349D798C9F0BA92EC3F92E5D53B
BA17457626F47ED22F8035AE055BB8098C6EFFCAD22786B1498703806FB28895
A85EE6775B462AC8B65AC71D57C95F8A624BC961432EDDF6A166F0A2E988FC20
F16EB782F9BF109726F7FFFAD77551B8EFD72B485F950B8B4C0F5E25DA3D226C
5E4764B007330E8B09C04F7D75830A646B007A9AEC19DE4517D2F4DE84F7193A
22C569416F518B0DC25391019F0C57607838F4C4E1B08A595B138086D0212A5F
6F04FBFDEF865316DA8EDD07678818D45B46AC25412EC6B9EFD4FD0ED2F2D171
7C1121CFD459192EBE1392C43B6B7128F15BC6AA05F9450CFDEE641C9F45CCFF
5114A2491504BD8B5A22FDB8CF978514D49014716D59EA9713B11B091B077D3D
9AF99C6ECE1BC23A2DCDF8715A34779B63AD142DCC96FEB61EBF21787AD1B343
DA95B6B547BEDA93690051A2662DBE1919D6FE3E55C525FD30BBC70CE036E518
6A0F8B4DD78959A2C693A9938EF236F4147CAEB79EE6376FED911B301EE754EA
42038577F43FABEB633595C0E30A26DB010EE349F4F2885FD287FEC45B7EEA57
B2768A22CEE5BF7BB9A75976ABAEDC4A456134C235D3B273A659AFC6F867A0A6
B298936ABF6580C629A7592A909A4F89FBE2E3EEFC8D2DD90F9F9D582ECC1519
AE9AA826A6E6F42357CD70E3547146BED2B01DE3892EAA4523280A54ECD6767F
1F30049768044C8DBC0B9A1993A9B392A4FB76D29C0565E07061365996AEA1C9
8CC87E8404F4924E236C0A765F6C5E0356A44677277A5C9FB3DEF38EE7249E0C
6DE00B8731E03ADDB4AEA10E8E04BE41382577738F553F81135829F9118F4BFE
20CD51190E7A979DC0DF7EE8E51C4BF6C70BC794C6BBE8A2AF233C12EFFC2E3F
E1428B2DAA1853FEE27EF30CB0A492D7AB691726819D04F3A68E45B06D019599
8E840EF00C1660351ECC1541F80EAEABB72C4CE6818C16225681AAB0FA618171
6DAEF1BF8B103EF2EC117B7B970EF06A43877AE57C85675CF04B7646E1F37AFE
958FF41F7E69D8D88B40B4B914F0F0EEB88C67423D183AAA6AD1E7E84BE6501F
47A662C4E2A2D16FF35C3D8F5FD37B1D57603AF1ADAD376406D366077D2FF909
3CBD678824479EC7DBE4C67BCF58C0C5A01FFABFE7D1BAEEE134DEA22FC78901
B52D25A002A6CB1004210999958A8DF4DDB8440A510CEDBD1EE8A6428D9F3B88
2D9138FBA7C87D7A66207A05FC8CAD11025506B3A100CF613EF0DD6169645C59
195904C5ABC46A383463B07CF4BE9786A7240EE913C3E6F16C8B1F5607B4E6BE
2269A9C20E57147A147AE436D138C0873E6ADB401184E75643B1C50D188B1A40
E88ADE2D4799D6293BE17DC0C5FC22729F68163E0BDA8E679645F142AB98ED0A
36A9570255FE58CFC8A90324064A7DC750D6E8941C952F08568090BBB12AABEF
8B55D21F8AF6AF24C33B26319082C686ABEAD5301220663F77F802014FFF6D5E
118B8C87846465C9D01FA6E71CF9EA41C7E5BBD20CEBD78CBA8BF6640BFC9497
0BBBB578ACE3E1BBDBD35E77F8F4D9F80DAD08D4C78A12199CDF7D6B50B7DC1A
0D16BB82309D5D5DF4F36DB986C6C618AA9FADB05E2DED4E37983A1DD697E84E
881B7E125896C80D268729C3BF7D737EADFE43C384883A5D277CF7E1675C69CF
9C489B42E69455A4D83DB24A125A3B7E8FA5459B9C7539F8C94190134C9BED36
0987960E1FD034F7A925C1777C9701F4383059208DD163A3CA1D6A45A72B8BFC
7CF7932E195E4754FD03B8A688512A664F735AC5A01DF7206CDF17FFDEA8B775
6107D4213DF0E4E6779367FD6C6185FB05AC592A947C600243C5D3A1D8A33F30
2FDBF44D3144A46838C9EE3260EAFD1CA585B4D177B6FB80AAB76172F5079EB5
2429F4F247FE89A1C7D5F5542EFEDFFDEE41502C4ADECAA0F3BC592BCFC9C0ED
743F2F648A921018968FB6C7B20053058BAF8E9A559133330EB174DBD704733D
3BF254E9EE08B5A330A3D7DA3A8530213364B98D71AC3195537A6D0762805928
C3B5BB3B168F4CA76630A4CA78D598B81F3DF651AA5ED66806ACAF509F6D8A3E
A453323E7E4BF9F754BB5A877855A626B66760F460775266D03337EF9907515C
21397F74F1725CF9EA22A1625F9CFAC85F6FB1670C3BD0501096B51C79E18636
673490A4B38938D404133A8CF7C8F5EBCF38817F7D865A786ABE014C018A47F7
EB30EC0D37AC97B64BBDDFA5913DC220AD09F341907A0C68BA1284EE09DDFC56
7F6BF0973F433DE4F11F842996690724B3149C28F368CAA44649A5E0AAB4230C
A05E5B55E0B9D042664C00E18533DB46251123BC05CEB0844995FDC46A4C2F10
02A362CD1C610EB8CE007B302B252802901EEFC1EC5079110E9C7D000CB3DA6F
422C28C5FE042DB40A7FBA24FD5DBF673222038C43352C586D097A94F924F37A
0BC10D80F63A6F8302BC50CBC070194746DD9123407F265666D7579B766628CC
DEBA5737C4EBF308A4B46E72D0A0F5D9CCD3889CF72C7148540E8CA0ACDB012D
FB764E086F42B2F823D54945F484CE4252A72037DB5731FBAEC0C2EC283180E5
1F1800FFB00043997C6ABC9BAB545814B24A2F00B6C611358CC25BE3CDC4216A
48BE771F6A5B58A1A0B08D0B379E329E4FAF5A80BDCD5A8FB11CD9785355750E
411D6065BAB4D1AE366A838A12E2B96810DA379E24F261B8025F79954335B34B
29446A9FECB3D02536E684512029E2B1C8136B36F8DF04E4F06CBF707055CD98
317F8FFDC067D4169C864825ACA871C3AC10AA9C34467C32A48F54410E854CFB
F081424768C222D7EC4781D332D82BA558393B665AC3A7233D777F0B5047BF04
E31BCE788D3F71D5233D2D3A7445B36188A29DCCD808D073FFF51B5C94E7C5E7
9B1D9F55CBEA2CDAF1081DDB50AE6932A0D312149717469B691582F5E1EC558C
BD64C9A3AA506818D9AF9418D8D27FF93CD65188F21CD9ADD868379F693AAEB1
7F2703D47D3F80EEB1CAADCA9D4D6F1772B709460F4DC6C966CA634BEB3FC65B
185D419E9592382AFE80C2AB357C26816B8B4228808B953ED97A5429752B887B
046C11C4A0B97D2D3216DCA733BA5809C5716D39C8E0E09F98040E0BFE379C2D
B999F6016C22
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Bold
%!PS-AdobeFont-1.0: LMSans10-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Bold known{/LMSans10-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Bold)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 83 def
end readonly def
/FontName /LMSans10-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-460 -297 1761 1134}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFA25B3D2E21970B61BEF6BD441C0
853BA8F00600E933C80C0916170925A5E999AE3F4523441CBE8209ED95298D28
7897FD39E60633B3341F7B1EE39A74B7CFCA379A6C2390E7C26A4B9C8C556F25
96A90868B428CDFF58080D414AFBA9B90E752A5C7F4EEF6EAED9684DCA7DB0CC
268AB1DF914EEFDF740F44F538F1E841659F02898565FE3B1F13BC87C5713FE4
FB373864385E506D1C0BB65A3CB8E10A78C20E5BE320989BC3E8C8E8E399FC24
E0BD4271E70E8D7A8F7683A4756AA988C5E78DEE26995F197F2360620656FEEA
739826F54E14481B446F1D7F68111FFA8C859137AB1F8E90583B98BFAF5C6329
59CCC441D095D44570B010FEFDC0DAA465ADDF3CBAB31B8A5E7672C9EEAEA7B7
A345AFB8889D3C53E0F9619B8F0C11FCFA80839B0574D91CE6AD50613E12BAA0
115864303556F3EBF5B786035121016A72100BD90BB46818BE2E8AA15252FA00
9F20B1F01EC0EC35CBF7D6C9684AF91F00880B4F0721698DD568E1B3D09641C0
58E5856E324DB2E378120A56ED141762775C5AB88AE8BB5B6B18158A7A9202E8
651774A479D4308E7F29052733CD2724314AF8C61999D544071407B7774A5610
C7A8F6EFB5792C23498F7D5347CABBA2DA469A957BF2BF33E8E3045016270416
4B71642412D880A7601B66C002B4EEA76041F2746847EC01F5EB5744F1EA82F4
163BE681F7F568158C214BBB58CF2BED8BA9B4030D081D755D41B0F8DE4AD0E1
F33A1CE6E38EBEE8CEC6203C2474727309D75E85A83DD36CA1A05A37C9D1FAF7
E1AD48F23A222889F92F15AE9C33A8B3E343774FA496C5BFD6D9C1328E16F748
4D6390CDDA8EA19D086DC2E49DAFC1535299AF0F42A16E89B2D395B183098334
286F4678662DDD87FE71DAC85B1BEA9546CDC788FE623C0EC28B6F1208F01B4C
5956B9402DCD2BA235EA01291DE436B80388FE6B31D225383E1054FDC6AF7600
608EF8DD116B8443675F86A09522E784197B8AF0E94FB9D58D6EF94635AD5A85
2C19B5B7F5A937AACAEC366C096AE65B56E3CFA6862030A05CCAD0EC604B0384
3809DADFF492CAB59B4C0C0FE29E6DD2B9953609A7383D50F8A9A814589EE48F
34019A1D2FA36F076BE54353DF63F952998C3ED886221FE1A662DE75C772FB11
323AD065201A7943854ECF312964A0059FD24E9E54539DC2641E36ACE810685E
9921C790177E79FF3F279C52F72F03E439B6883552A1F0429478C0FE53F7656E
408CDD8A3C8215D594C6B911EBCD36C145CC25F858E34B6D27E13A4E773B8D62
1B2F28A52F9B53B3FA27F000DD189ECC42864A1D5AA933B10F327FA3BE68C541
EE8DA5E0A6923FF60DEA152FCEBC963155762A1019FE6A9467DB7E5464F6CB14
D786DADBC2D91CE0B646D8AB5073A179EE0DE00721AD7280AED8771C6EE2F7E2
D86C5661CDBEBB3548794F243C6CBFC3B5D8C8D09EA509188421C00059421E6F
538914CA986D90864BA13504A76E3B85EB914FABA0486DF5FD63771F4A7654C8
FDC3A533E44F41CA40BA5C1868021E69F6DCF2B27FF31EA794BC8B59C6F44727
073E848B2EC0BCAF7A59308F505DBAE59B4F725AE99A990B727C6C7020F14175
225EFEA39202B2352D8E5C8C129AE6DDC88039288277AA477D07BBE39D97FE30
F301D3BEEAB6F9716275EB86A05E8F77492F0CDAE87B801C0C536C101AA0D77A
3B65651CDF745F413B373AEDC78AC0CE9918EE8E8D4BBDEF36BCEE444A7BC5A2
9688E833A340237E6A7350C050921857B94DCAADC24515355F9825C8BF93F4C0
E919197020F092F2BAB79DD080D0A44CAAE0DB157CC7893BAAC530B5368C099B
59A711C4B67FC3B0E86EF0B39D244D27D3C8B748AB636082E7EFA02DCD670BA4
22113B3B90BA90FA72B3EEA6F3A8B7E7F21F1CA698A994BE0985125D4777602F
732DCCDAB71EB262B8A87DFD9AE2AE636315CE9D47B1A020296D23FD0A59D6AD
28E342836BE55BACB3C737A5C73C170B6563DA6A0785D62BFA51D77207778879
7A24886E2B4C9795FF0B0F87E426AAF37E86568926485134B8E657042D7E908C
22DC32B806286039E75042D590F24D8FE9F50D35EC6FF42A84EF98CF8FFC6A54
709ACC186A9078502B3AE1B12F5F4C7AAD461F3FF2EFF20DFEC6942E2E9BF904
C8312E79EBED8E98A4C8A688068C012538FA612293D2C5E6EC8DC24FDEB0B8D5
39D079FCDC56E9BC4B1EE0B25433212B4E4CA2D203D5E732FA02797B386F2EC4
A210B279F0F086050DD553553B3F87AC2CACF4375437B977E3C58B941166C1EF
276997F43FFD6487CFAA7842D60CB4A26A706440E79F43310E4B9C2EDEB4F1BB
DFED56FA3AE38C1C5EFDF898216CE35B7CF75C683A15DA0432E4E6B15F9E7C2C
8477AB5B1C5A25CF3F695B524A6C07661FE6953BB4C0EEF805F7A0245F6F2A04
D26899399FF91F4FB98EF6E228ADD22D093D1047D22E22E2A155F9249D0C7BC5
838E5864D8C8835E607BA2BE87050F8AE8EA728056655F9D9DA1ADB9298F2AA0
04BA3954B288CD9232F88633A933830B45DD9286B1C00698760DAAFCCD32B85D
6FE0AEF640CF0BA8136687788653CA9F5ED3F9EA7A85CD0B6B7701E27BE3E3AF
28807251F21C1EC7472D56ED0C13A9677B873D93D17B5F45A358A7A162679E52
850A292A07CAC2B96879AC6792E812426A33CD78A844120B5B63DA2F0F6511D5
92F4184FABB8C24CE1C4FAA347AC8360FED1325F77B07A7AF1B9480289790691
04F355206369B2357DB7A88096EF19171074364ECCBD76D05C12301556F56D22
BFDB9912882ED7CBFDA6CBCE8EE40DBFB9338561B425E7FB8A486E8BBD89226D
7B9FD2367E45AA87B3E7D151AF48008CB0A1F82648DA2B391A8E87F2C6E50D86
A356603A8642D8BBA1EEDA09F795DD3CD508B405C6BD07CC7EE9BFE2981B05D7
3B67BA0FE24D41D94194E5FC2564ACD7935C74259F5454A017C6ABC65E4BC733
F035FDA08CC184B178DD6C18C08A283861D5CE115E38AE2884231EBFD6AEE0AB
1944BDDAE1FB609F621928A3A51EEF5326805335937A0B37B5F1BC381AE35499
EA5A9CBA58CCAF82F185B2FD093493DCCD90A97F22BB0B70B8DA22B7404F4697
09A6476CBF11C97862C34607A7DC2871860D31BFB773789D9E08F493C93A3EC8
60A40E2BB12B97B32CDAFA0C2270679A62DD349CB6F6A20E796E715CD024D45A
9A51D740B3A96E7AB386AB4E1154350B1E3272E4B12630C2651431B3554ACC5D
07ACEA1E09EDA5F4712D1AE15D95EE92368F47EE16B78669BA73D68CF5162AC5
1A6AD727D94AA242D99B153AB4FD76B5364C164319055DF4B81282E0782EDD5F
5B3232974DF700581F8179E4B7182CCA68F8B35F57AA77C9744E3B91F292832C
2695E79BFA462D7789C875F6331286F86BF32146E98FEED2F17A27BA34968B95
8BA37668A5AC5B5FCF3A211021A15A328C151D5598D5C19DE50CB7069D9E3D8A
FF77E26D1C44212DE67A96CA9E355327F2DF9ADAFB6DAD382BF7E4EEF2C2FDAE
4BBF1332A95B595E32FF28C330E73A2D5F605E33B1B0EB2117681FCCEB541872
EA71001C654D42DFFF1DB2AAB63197426A1A86E9150D3A1EC4F892A2F092A3E4
50601EE32B2425551E7F03D504F27BF98F90DBC75FB814DDC232DA306F6F29C4
3472FDCC1CB26D7B4D256D0730F57792DAF2D43D99E9EB6392846DA0B01BEB9E
16204D8D0EC8AB2AB23D244FDBEDE098610F35EA1D1028A8BB64EF2EA43D7C1F
A208EF44EB316981B1C7A6BEBDC37B3AFBB141634F0D84EB6821FC9B0C4B5EB7
4A622EBDEA00FFFEB8C51B57F75ECFE7238BDE664DCD48D7F59EEF1FA42CDCEC
69E61DB7DF9881CE7C6820CFC12980C2E7E44967F3545D63CA72EC43886158F0
63F4C34E514326092096977A2EF5D976A0689E9EAA01D48C428D322774EC3C02
18FDC2174761E4ED43D4772E358CDEA9FBA4E782F0D41E2070AA3A421603EC3D
1FB760DE2F2604AA60D11C3ECBF5247BF3F222D51EF24DCBE949DF0F28C360D1
87286D4769A0166ACA47C3614F7E4C8CD2F737F19B1FDA0404D57AC0AE89822F
3DC3F10258B45C2A9EF695080C2C3A5459F52DF5237EE2205F898F832F2E6191
D3F22E335FF24246DB126C6397932331EF752D98BEDEBD2737E97DE815BA34A7
CF425621F06EEFB5E0949674C34768F001827F12F1BA77AE866F948749A09567
1A46A4D8C410705B100FF1033BE014B61A9CFE9F154411D1ECA40563B020A997
586C6F60D7543F94AE238F26B5D50F9C8BBD6CF8D6C6E7A0F0875811725FAA21
D939A4FAF40EDA07278DA546A1DD26925DBC56B562DB11A93A95D033B6AA4DB9
8BAF2B46850047DD1E00689644E9A9D6E22330BF572FF87B00ED797BAA3658B8
AD58435B34B1D7D501B561D3E187C0921EDF7B8CA9B4FF039FE7704B8D86E980
962317F6714428803979CDBBCDC96B5F791E79254ECD13F25779B90B7893E571
0855134A80FAFFA126081DEF3224534B171D6D0742E87C841EA0267D10E59599
61893ED52543013A961731D322161500E15ADA373D503552C0B76FC6514B3AE3
84BE3D9ABA647142B2B8815F321407ED2E3BFE6ACED73C8C771345EEFB470C54
3C59D960BE4E232CCBBED3F2BD829F18A73BA4F6BDA48AEF16E1AB71D7CE24E7
8DB7DF1DA1BB41D984B457154D1DF0103E0A79EC8C5D01C5E9A5ABF400254311
AF584C008BA19D607C517C3164AF5AA364DDE7579E59AB8F63B4E0D1C4D5047D
4ECAE8B7B0E402EB7ED23E493CD05C34D4E12899689A3660AD357112F05C939A
6FB075136208DE605765573824EE24E9B252D12950A0B43047689E519FBB2B77
90BA64EAD1C4D7019C9D7DB4E0B11EF82EA35ECB85486697BE5651DE0F5DDFE9
3C21AF4E50CA9D2E0F4A930BED450FF8923BC705351AB2DA194885FD8B550525
B75CB9C6D870FE9CA500BCCEFBC89C8FE5005A196389EAFF598241368502A350
A0D4C3C5629CE9608BB7E77F5201C8A046181A94005FC21822F84466E3BD897F
50A7A62C8A3F55568BA175BE511A90A773A97D8956A65CF6BF8D3F29A8376A0F
5E6BFC9D408297302124C1A7A32D8F5976F7CA9EB5969C73CE26568F78981B48
0F688646A5C8C563B8FAAF1F5004A4B42F39A4935E10F10BAABF5FAAAA47A65D
31ADA88AF1A0B3BE75E98F6E712917BE7D4DCC8E5F7C553BC1AAAA8A72683C54
B45F81F355D9D19496D0F80477BF0F366B61EF18644E80E57DC95D3A51508B5D
2E4B9FFC76B3CE53E504C6BFAC2BEF3663F1C2350D6479115F904EABA74B228F
54D1025997833778A5DE2AC5258B41041D67AA1F04A4C533EE8B901CFD0AF403
EEBA2C528EE2729D0F7855EEC149F95C853E0ABA4975049E84F395971AD6C244
D36FB6F2A10673088AA9391CAD3D4BAC7392E65BF9C6B42EA671743480E6A45F
EA04562958033991E92505E3ED7565083022A07F2DABDD90859F3DE0E6A89A72
047991F13B71F527D425312BFD58FCD53D79F81EC3550922E73CFFBE4201AD74
62760440A2317E38B52C617C2C1AF8F72103F1A7415F526A2CF3C16B800786BA
ADFECB08A887E39D1FFCBA9B62757C21CC2785B71FCDDD27A92D2893658CD5E3
F769CF5080E398F6FCA427D2A453620D60B14983E03E456469890FF47C2761FF
C163A406C10DEEF835FAE67D3EBD682120F16D0C5CD183D626883D5D0AD26254
38E577C63265C59F3BD53A8882D82929177263931EBFDC4C7A43DC069BA92CDB
E98424EBF8ED5BA75646FBA4E43DD949FFDBC1EB5419A9DD28A2554BEFDC96EA
852C54A355CB6F4CDC952EECB9CEA4547D57B9EEB3ABCB38CA40FDB69362996B
1553EBD742F260009449B6284B91A907A17C647A6DFCBE5BF89E5C56D299A58F
1BFA1D0FE7C2E3B80761EF5695001EC347713986999A6BF440536FB08484D515
C0D9BC826EFCDB25CC23092555066C2B09D1FF6E8BE11546D448B07D0D6408A3
845FF656ED7180CE63468E0AB1620CF517E98EE8437F47D2A1F30D99CBB19CDA
8EC4D2120A75F8FBE6B0D64D790962336CF0DD8B976210456F13FCD152FF9102
718D0FC57EC5B27A8FEE3A4373691772A120BEE77098BB898BAD21749370F6A1
CA41DD1A493A88B3E8BDB15D32C5B35103B8B0346C461FE03D435D01FFF15E7A
613EACE41E72B21E93092C2359F2535FA1D1A508FB5023D07D392FDDDE2AC74E
FF86436194093E227746DE035B33FF9862E3081AFC04E187A44BECE5C6C1E4B0
358124B83444B94A006DCC63466B43EEF7035544EB76199525FA7D80B4A7D80D
A1BF10860EED4BF3E929DF288E1BB1BCCE88D89ADE52E0E951D4B5C232674A98
40F94B9CC170284FA71225B2B84B50716F96B850D6FF61144F6A9E51CC1B8A86
A35082DA5E6E8DC4F671A68F8B02EF2EF44976FF68DF0865B18B10CA2367C4A1
234AA8AF985A3B1B3AF560AAD8F7A4C8E81CF29780690190D2E829323F3BA9F7
ED7D399CE11A1BE5ACC76D12FCB66B4CE90406085978F8EAEEA93E04B90834C0
501DA25AA2B872B756536736F4A79DAAC2556087820D6BFC7BDEBB1F514D9469
502241D4200BD22A95D28162CF3A762A40310717779DEA582740E49F0B2A5851
CA265048A748D61C4B7C040606D6661334764D91BB7DC517F403076BC8897E6A
8D5B3683C9BF396E85D83575C377D3C5C7267BEFE151C52A60427176D702F75D
8385952F764CD41D74BC87F8FB363E28C8AB16DCC72C35BEC350358D62B7B015
A019679B0B8E742902AAFBC10CAE2D5E87BFE61302B759176098C0CE2464D643
609143E3BFEDB380026F89F98AE88D73D7174B84787F6396B5B50FD44F61E2E7
C76E18A0D573BE4BE58E0D110665E22CA630B01A0EF0761F13888A4306667786
F6967AC1713EB3E53F291A7FD40567296174F0AB0E3BE746A4B976C296A11ADF
59C4919F63C78F9B7C2FA998F5BEFF8553E34B9DAB4671298B2512B7B9A70952
03545C01B0B0573F906E74846306E52E324E00D300A78B984ADD80D34E03E5A4
1ADC0636AFFA3A9031A7D52AD383ADEFEE56ADADF89E8F9B0B086AF6A25C6901
3A095E5D061651D028148953187801CC5CD18FC784F3E7FFE8F2DB95A4AF6099
BF01F74A6CD04E80FE8CE8FC240F3323EA950B489C0B6301B1902F233736792B
3CCAE73DEF3F7438E92E28B8F5FEFEBAAF35ADF8B5DAD7FA81685829A47BE47D
8080FFA7BE37E8A4A621D08846ADE751956AF6389EB1A3B80CCCA6788AEF2526
4822AB4D94FD51449F12FE85F816E2FC2C82A5A8D5FE0BB2929C94EC4E0AB012
8C153B28D703CCB29BB0939391BC57C2EBAA31C5741780CF40CA1E36570539BF
9B5C30B050605CB66F364269E28AB7331C62458523B7EAE820C10BC35D42045E
5CEEBD10F8EA7B75EDF72CCD4BB1D84D1BE81AE2EE6C98ED6295F652B2759825
CC4836DD015B037C08031775B8A3004E983ADCCF2DAAAD831000E27307D6CB2A
A6ECF5F92A1B3A7328F6F57B13A373A9E0DDCE6E0CB2008467372419BADDF2DC
4B8D59F781ED48E700F5B35BA0CEC0EE50D398016E04B4623EDD9332FD97D03F
0162CC8BDB0FF74A581041B0EE4D1E1AFB6B6FA6EFF9D626D24C4FCC91156586
A98D901BB47DE5D3C0CB6239FB2D5B4AE3224A70B9CEDA2DE760A98868ACB45C
CC8CC2370FE267830FB52F9B963C235A59BC191B84B9B6A2D87B85F21F39F0A7
C17A2A9B0044B050747E7D512F9C67296CB735C41593466CBF7316889A602D35
C37EF36DEC95AF26E9BB0A31B3F8C8CD0019B10BF80004A6B31F1EEACE14F17F
4FBB1A4C8E807806C7D90F8C2414CA1669749E13E6748F7C1EA489CDB5C599FE
B9014C662C9C68868890B42D92F3BA0B93D5479BC8780AD28B965C19DF138725
7F2013EE452D881DBC770FE98B8287A1D69D1F80068C9B0AED83074C6270B177
BAA18F1975F43F45B2767533FF7F98ED693455F82F098F49FF48762C6B8C7BF8
8EBC67BFD892E35E6940E94893E1CDFD2793D02413AA146D643432F79AADFDE2
0FEED119AF2AB84BBD8AEBF44CB95368A12024C0BB437E97A0EBB4121AF68C59
C3F3561B1CA13FDB336BD4F041E9FE46C75BA73D543BFFD51B5492DB49BF8810
AF0BDC54BB1D08740819FBB4EE3580C618C1814F112E445F32C0970817BC4051
4DB7F310794A648F0D3CD8F51792E322DAD8CD3CB421CC02D72483DD8EE22792
6096F165FAB755DAB5D72511ACEFD7ACD77C30FB52A523A63E5294B8EAB30ADC
5158DBDD7FAE6D0CF0B2BD75AFA2BB38DD97C6F426AC06714DF95D678008FAB0
329BDB6AF0F2AE4E41457830F8D213DB2411CCCEAF45E1ACB497CB6F88ACB8C9
0E71F6DC61D91E6C85B2018E78352250261E141ADB4233C55765115D9E3B1C64
7F00D147F33C0A680456C5008EB66FCAD41CE8ACB8B4E56AABF265FC35C70118
E421AD66D3A9454E7FF9FF20D50D96B41727A72FF76E7DE651DE14A8F4F77B4C
BF6DAA00B960B965E9C7F789DD05BC094547F26AFEEEB5E3AABD25FCC13339A1
037B3FD98125E92AE3BD6083B0267E52474998E3E6319EBAB3D1D4F44B21A86A
B691DC36A30ABA189BF305BEB48A5422CA6E434F0923E27A065EBC126C816B00
FF5AF1029041682E2C543ED29235C7430364163AEC6E911191B06F159BBBE9A0
004C4CE1C6B388B901F937A299F65C3217180D4BBDAB861AEA4554C959537D1A
C094541331B0FF94968EF45E4E0172520647FA07B7B6A0D06F3C5A9923AA703F
DE16707DA2D8288D07CB27623F0936B1D6390A4581052B66DBC9FD7B4105F597
D9EDF534831D51265DD59CF4A57E889E0DB8FF54513822A586932D1B1219BE52
5A61FFEED5E312F3AC9421A46A3FA3F6BE1B968E6F1750A2379E60C0729F65C2
6996C69E6486DEE35F247C439B8FBB6A186F23E36E65B9D87A982B8858D24BB0
C12715940D7E7367D720CB772B840B1F52CBDB39B6E9E037705608D332929276
2B1119C8FC5EC152984A0D172D7B3F99DAA47965B086FC994070DFCB8299304A
5AB02D643D8B74EC6E88A7A79AE3E5A9D013F904770B1F2E9B707453F8E9A44B
0B73207821859BB191D53398A26D610D53AE6A1B0141D3F4F013108405DF82E0
D367A0200CEDC0AAE2ED77DE5116533BAE1B750318362BF85D9A4FED0550257D
C82DC5D496ECFD6D06B9A5AFC8C8C46BCFF335C364E6BE6C9B3A29AF9112D8DE
2BC6C8A5C88261832DB7FD0D75EFCB527595851B12A3C1E1FB53FD9B346864E6
AF67D40253F60EE0BB86C4FEE17290D7535F0BAD8499A55E8791F161095D5433
BB06F9A25DEA07FFDB2155DAE8F2B122563B02CAB57B9DC5BF98B15B08D0B6E2
FD051D5DC90972577F941648A1EAB4225390F130D83BC8D134C843897D338295
9C18A903DF75F4A3D5762C29295E4317B6F0472686B200B23FCE6AC13FAE056E
A1B304C5FA763C6E225F2F36B7F17DA91A4EDF8D09AA0C3FF6EFBEE72C8710E9
811B2898D889A581451395C7C58186048382F07DF8759AB9690AD6C3A67FBFAF
C38FBC00863EA9C988B6D0FF6FA73D9595C826F333231AA99F9D731A3BA5299E
EDAD3680158B6369888E88F8ED19C4D792FAE79342104AB0041A3247EB7E667B
2842D65A5E184D7383D7DDAE221CBBE91BC55A81CC89FDE91EA283543BFC3DB1
76224DFBE0AE16560BFF5C897A1477441B037218C4BCADC78D03EE6A6F5DD566
CD2A6228577299FAF90989AD2E7099B4D1B770A950A36F5972F5167E392EF971
1097366B3A14590FA2407BAB1E8BB563A9C89C0F79AAA61E74ADFE729527F833
F6BC88619CEBB990D4AA98F4A3FAA5BF4F4BD90D4EC8361D3DF55B5BF4BE1765
CD19CAB303B293CCD10C045215C334AA21432F7B87CFC3379E3A663E78C328DE
953F3494CB99CB209FA97A20E05E027CADB281B781D5E506C3401F54AC96744B
153BA19E77E1B83C87AA9041C1438B7BCFF69BD5A4FE49765296D30E0A16CE2A
1A0AE53506F8B3D5EA3FC1FC92FF7B00CE0BACA542EE4CA0E11E8CC506066BDF
E472196A930F7E51B90779468E29838365121EAD77DB71CBA6FAE1532A404CE9
043883C3FE759DC1E6400EDEE1D79081462E37028A916F774C96204A513E6366
951F097DB74D745DF4F987D8E366A721AEC716AD2358AE18DD2EF7767E50C446
F5CB8DD1549B730374F5251C04E601C27E854D53B85E332DAF19C8DC5C4427B7
A47FB1C052BADA835F45B43801B3BBE8CF86194A56E683667618EE564F22C2D7
2A7AEF88D95B8A5DAC624EFFE6B1E94F1DB5B3628E247CF8410F9E6E22EB77ED
0EE9E3E10459B9AA355E912CE921860BF058614B77D0112527C92DF85C31BE5B
B7224522BF27336EE7DD39FE52747FFE5802597B7E6B04B22D90868FA1653959
BD6F18A593F7F2F727BAE27D7A66202AE7A28BBA1FFC28AA0B2660C443D24320
003930CD829F7BFC7E493ADA2B581BA1AA2AD552E3E8BC9BFC6F9E96515DFE00
F867731F2800A33133B8B9AEF03A70F4AC69D3511A46D72EC70202899C79E9AA
E60D511A68A3F2E07670C388FDC131444CCE5F7F1A98BB3A8572F20EF1C0ABFA
3E99DA8999D504B49BD30B1F537AB109F6DC000D6E6EE6478E9BE3326266B2D5
3D8C44BF4406642BE1AFBA22006815BD57DD5CC15B8E5012293173A587311A3D
32BB94F10C28976ADBB674BC51833FD726D168E25ECDFE6C62ED93230AE24A15
9DC8106EDFDA3F4AE4ACB349707506565DD690BE86152A3FF14219D363B0105C
ACD5A2E3F0795FAD09FCE908A5BAC001904C1FB4D0A37962A74AD4BCF8AB4CB1
4661759C675824F94CD151CD1928D7C8C396A07EB96D907035516625388373EE
EF0D2F43C5580177794FB3DEBEBE9E4105AAD34FF119AB2483CAC9D65F0EDB4E
D63CEEB367F9F8DDC96BF5FD99A09CE46A5C17CCAC54B0942F1374ACCE3F578A
0B9681C30044AB91A0135EE0755ABB5383A0961752694125166DA4E5A3EC2B8E
50D23323398D03C25CACE0D632D4D4F408F95307E9D9581229457DA078F81D59
5AF117F9B54A537B784C62BC8F266CD58EA2C13DBD9840201367835E86335CAA
69F4DB314DC210B2DCDE44192B8B1FDA75318D5FDFCB7879A80950BE1109AA3C
59061728EFB3E1317CF247224ECF9FFD37BCC77B49FA6204D5078361834AC6C0
217AC49887C1D628F84461239D8E8052CC15B53B907E17802B8F1B15359B59EB
6A42BA3AC5B28DE4438375EDAE3E3567D66FE5A87904C687F3D4039E456985B3
183C918696090AAE9F67973862536CD040168633408F8A2EBB7E183462F00ABF
0BF09278670404E541771CDCA5BCA8F492C4ED21BA3782D8C6DE448491EE057D
1A0892D6FC840E3AC7988F22DE26E9991557BCA4BCED8E6A5EC8F98B569EC47F
20590B38339A72DD46EF815CF944AF37CC5A43AFFAADDDB80173DB111E96164A
F8420A7A563D795D8E9E60F5222F2B3598CF87A13A3A9771054905A58B78CAD0
93CEBAE35384C0D98D851C9629B978FA10CE2AC0425C7839991CD86D67CAD0A3
DEBA0D947D0AA1F03FCAAAFB2470787ADCE80E6933244B839FA71A9FCF98F4F9
501DCF69FCD9270A7C21ADAA911578E0CBDBC8FA2043BDEB19CBF0769873D2A6
28392368D68C28ED60CDCE0CD13F54F0F6FB15614C15E18D9EE65D657E19E355
BD525A77989E7F78D497C7A8C5EA56F4D43F9B6EA17DAD5A6698A5F4EAA13220
90E9E7E6DA53823342F3C454C2EDD273C9794C365A5E31DDE304F2498F905D1D
74E554B61CC07CBE50309B6ED8BA752A7C1839B5075C8314C20165192F0C199C
92ABC708DDFD5842A0349D711EEAFA2042E6B070A6A25586FF593EBB477FB3B3
6FBECCDCAB62AF3DA89831F0054C4AA91EBD84A394F47883D04366386D929459
35D893E20DAE8BE52AF23E1144C8A209673A1E2ADA68C2E460AF003A0EEBF1D6
FF3DBA23BF5810213141AC0087818BC63C849DF5158A61AF85E1EE2D19133651
BDAA2896B0DCBFDCD7B9B45AE74D3FE6ECEB25B18BCBACFAF313AC51BA6360C4
F0BC346E55E731826A96B840649848D40574931AA278F716A93084E7F91B1730
A230B9886D898CB6B51822E9C6092E977FC1533C0356C7D6AB6BE4CCF1C2A978
C9A8DAA2BC53902973435B0B6D8EBFB873BA8A2073CBA7DE351875F46812EA14
910656948887FC431311F9A5F0D5B1E3F86B822F5FC44BB3E7F2D15EED62CC47
0C7D04CA7F4386D09DB7F4D8EE4C10D079E09DD0A803251DC175E7ACB31F8948
1BDC853394CF665F741994F2FD6C49F144628D0E233CA0CE47D639124372C2BC
18E9D22150DFE3108113D05D1BBC6051A1F0E5EFEAA8C7D2D8DEE7AF696EF5B8
B77ABDC0981C25E3C081E278A3AB9359A878A64E913F4BE332B1C20CD382EB8E
EC2982333428081F09F426B9572BCA8339782ACB8A908C5E7CE698479ABD173B
9541FE90F618EFF432ABF3634C8ABE96901D4DC836B1FFF4D4862845C373426B
E65CD959E960C59C49ADDC24B5EE23D20E519C84DC7C2404ABCAED0FAC8C87F1
3F130AE7672FE5DA8ABA2868658526B74727FCB164F21405F98E31F3D538637F
EE65804AD9F47FD5D09FE551F1429559179D1250CC5A3B60478C7CD7C2D18483
F808522BEC54DB88744712F5F7235A497AC316B10038C608B4DDD70AF6BA0C88
64D21E57F453ACBE58FCF00884C57203C04CA7F441E11B0E4BBCDF33D30383BC
D329DBE1B0C05AC8A2FD859EAADAA9F0B3363576CD1D4DAB0F4FD5F0906FF76F
C682C841008292750A376D0398DA95DF8AA168A6509023D8C197BF4B50A727E3
15F880432D749F104797F66F6DC084F68DDE5EBD3AD2BFE211D438C1A870AF16
F04FD1B20F0D8EDE5E0BEC400A624470B80644208DCBED0435A2988F74C13F38
BA26ED7D36C34AC14C42BDAC97CC3A9BA1A15D808C23C2CC46088C001E13D2E6
E0C38B6AC2C9ED0CC9861ADD632F10FA1AC51B5B4094EBE2C6FD14656F99C593
EB67BBEEC85C163C3F4D58409B6CDEC1BE7E57DAD79BDC506F66305DED851BC8
F616A8DB646526FC81BDA50FC3126234044386036954E9BE823B2E24D3ABDBC8
CD3907AD5C96F7A59C33C614D69D0A6ACBD3F858CE686804C3F119899F5BB3DC
8DE39690B59D703FB2464C87E51DC00983F964BE9851244F76C01587E6186BC8
4955402CE2D267B6F66D9465907BB3E7B2C75CED17783D44B6CC9BC9A52DE43A
2AA173260B8DB911BAD4EA807D07F16E915503CBEBD83B173D6AEF2574ACBEFB
8C8FAEF2476515A41387CA09174006C8F2125DB66CC3CE278F26B5D50F9C8BBD
C7B3D5D144869BE59F090BA59E5BCD82B4DE1097FBA4DE7BD4F60E2FE3929591
206EE4DB591F812C272C20E6767E45117F52001F9FE639149E97BC531F999990
53013611B3230B8D462CB20BEC331376112BE48FE6BBA3D9D06A0C77112AB99A
CD749586ED9656B074B08F2CD31FC681245C724A8E754BDF6EABC3E0FE565DDB
D45AE467A782725D8B3E30CF079568B4283A0129D49E7E9AFCA904B37EDB25A8
0BF2A045414B03FB878D974AD04A770977FBB2C31C4F8FF8BB1F255EC316D0F4
9A22811915C4A3E516837EFEF9B90248B6C0544715156A99395CC93B6189189F
DFD3AB62C75889988C3497C382B1FBBDD8DCC67CF1CABC23E8D3B4E5524B68FA
AC21A3F35697D77E0AFA4E230AE401CBEB5E519AC241E6295881A5A2660D5D25
3DF6AA998ED7554475E5A2F6AAC3F6FD242C25F6952AC55C24ED123A69EFB92B
96FA78D778FEC5D66460D04955DFEA71460082A4E1F3B92717094ECB693C6A28
7E40B44F6435D089AE6E93BFB96381260345756E793A68C54344BA08C9F096A8
094F524696A0FAE044D3C8ED6C393BADB09536AE22A59D795EA2F5E4BC9CAA44
ECE8FD86CA6D47F28C20CEB6AC57407076291515826E985DE89C5E0D7375B95E
C14A97855C4AF4C0E9655171298F07DF376DE565D115026FC1AF942A5D48969E
CA35BE606098953C01ADE80BA874E7A639F16CF415B773153D9615BED1251E4E
E61363C5FA7160ADB2A13755A5048E47B03087A55E15E6BB75DC22C03B2FA7E6
76945E56923350BBAC0CF7CE13F17B3AA9AF9CD373E578CE394EFFA1CE5FE99F
96DA5B6978653271106AE7DF76703FB9AD2773972A8075F7A95632ADFC6411B3
3EA2D57539AF4AA14612F04C54D59077B887669C2B2794CA348FF578A21D0BA0
BBFB4504ACEB87FBFAED82568588B9A6F0330D35F65509BDD99A537F5C974FC0
4716E7827932B3FD0F1248C3C3F534C3CA302F3597BDB0216EA14DDE19D11D1B
13D0D488BDB61EE45F2D8C12BF4FE23DFDA51D40DD9BF5DDD3CB175F3E1E612C
D736E44ED3E9908B59DB3B3506C60D3F766ECE69AE2593E3DB3D586B9579B002
548840847A2B333E5E409CFCDC9358F253A769F6124346CDF97050E356F2216D
58A515EDE8FA92FA6A07625BA11F8147B49DD7F33D5B4AB71CBEBD240FB7E694
DCFE132CC1F6E0EAE7BB26824CC8B7CE4320993CB5D9CBDC8F8522001F82A16C
E307F170B476B2D4832F9D1B482062EA4F43E2110E483CAB7EE2C16A9E6A6A1D
B9213C2142AEEA0B692ACA1E819ABF8814E2A163C5CF1C65DA4E6C2DE96F10CE
5A5BD760D3ABA4BA6CD22747FD308450AE7338B33D7969A92EB33FF3FFE406D6
7A9A82BE2AA6D7C24DC708CBAD17ABD8F88443261E2074B7116C3845EEA16B52
82A7375B3C445C6228A6D233F3ACED3874214E6075A658B3CC670D60B0DDD9F0
BC337C53E57106BCFB1FCFB2CB1DD837885F2EBF0049A35FC77F7364BB75AE20
83C7C66E6C13CF17915BEE83BF7E09FD39B4341967F54537ECCBC61816D57CA5
11B40B9749C1033BF3AF51455B475EC9692E9E99F6AC94AE3A0AB26006B5C094
0459D185813D76680ACB091950945096240AD78AD226ED88CB897914239C1FB7
1613FE401AFA10C69AD5034FC9856112429267999EA35488227E2D1FDF88FA97
35C944C04B919B7BB6A60DD4DDF939FDCB3A3B7622E5A704402F59B2EFB22410
7BCE6BEF027BCEEDCDBFE9250FC166EF726FC65FDA29EDFB3AD7FFC213DCD7A4
A26181DFED9C34F6913CB64A1329228FABB807D3F59EEF1FA42CDCECE27096B8
255AA41FC4BE809146C6C89D2FB896653CB3AF6C9466BF2240E2A719B388F070
F486122EE08A4870456161458B6C93A1602A53D2E1149715178A46263EFFFBE2
0CF045D1F128CA4063E332E7417C007C7F9F89E8A8E368DE280688A886173700
06318B09C15D29F784CF5CCF2CC1BB99201E80550A68F4EEC9B0E81E871C39B9
606FABFBFEA20AEFCF51A84A24723A954072436EDF60F30CD8AFF952E9BAC601
61AE3F53B88544455AA872810C7948B1EC866883E78A3B0C6F4621F4C2904873
1516E16076F3482F71DC669EFE83C0D98D851C9629B978FA10CE2AC0425C7839
991B2991A4D2331A8ACFD51DD8F95023A5763651EEF6D32D0CF678ED2A59D9EE
46F33362634F9758827B199FD07DBD2AEE1A78FBCD55AFD5FB30944EE4F18264
1F051980E8C27C909C106FFC54EFC06F76C5128203F99E12BDCA2FB75FF5F667
7DCA7F1C959023B655F22809D752B9BC2DE756C0747CA26E829800CE4AAD98F6
CBCDFBD90B6CCB47AE056AA2B7755C4BCE15B185CBF6F362C146A2D7AEEF0A7A
659D9A45853C24DAE4C4384D6A6C0B4E1A3B36EAE423B40140F7AB6FBC84982A
912BCBF17E8709DE03DE8F3988E4A1991FFAE782BABAE8EA35A981C0AC882C98
C192E979852EAEC1D621492AE6D4412493E0CDB2D3CA457B16FD9FA2606CC3C0
740F437DF5F1B361E2AB01163B485B551B90E4C1C49EF40DFE1973DC8F7B8C11
F5A2D1C549F85657DABE84D440FF54F0E10321CFA3B1CC1AA489CDB5C599FEB9
014C662C9C68868890B42D94689F28F67F64AA534A2AF512C1F2BC5BEE9F2180
1515794496AA2BE4425CE64BB950F41DD1564C4C19ED32F231566CD7602AA4C8
665A3C51B5D5AE82278DE0CA37976918A6768AFF1C80468551E82593219AB39B
F2040283118D23C22FB5722C120367FF9292C71C6D5901EE0838310CA9952963
9EAC0FB9701025D55BD054E058D3E91A3958356338CC0F8950392B6C66759DEA
AA6C9E414B7A21FF2202318BADBD95D136728FDC1F3B174E3596DB8016C2E75B
BAE92454507BBAB460BF0CBB95B97314FBD36FC9109341488F906450AD70892A
75ACEA874898A185FDCF39A05EFD065090894BC8200DEF93B057C7F66A87B877
8CBAABB98A5D4359E63E7B5982A26F1ABC0F78441DBAC0EFE8807EC46C97979D
D115601E72FD549E4EB7E6D3F4516895203B8B15293B65444080B62ADDDCA6F8
4D87F838AAA5C53454E279BE24D3DEAA67D8ED7A01F86EBD129973FE3E492016
FA5C52E9920B3939DD77097120D9F3C2DDC16FD131C7F302A2F9FB65ECCCAD46
16927A79B786AA6415ECAAE9802FA36E4096D06B36932CDBD928795FA517BCD1
4F2BC5B745A39B9BF94363EE96606CE9AAA21208B5CDE5E910DE7DF368CBFBAE
8B109F4DB69094FCFACFE9D03B9851FC8FEEBF287171660B9694A3E21075100D
53E3A6523811C0725A87CCC25FB92129E6FD1C2921B15AD68CAD72846FB50683
13E89BA11B9F05B89A8D93E92CCC167DB36D72585E112E6E8CBD8C83C0C5C6A2
85C96A5DD31E5D9A330111F875868A455F9C6A885452FCE11000D9D00C7B33AA
C360A11E9F5F226CA296215C7718C732AFF5B65BDC6D7C3D94FE9A898775CE1E
066F741D1858EF35C722DEA4F0B30901535E7611C637154997E95DC1364BAB09
FF0740310E86A38C6006D335FB42EEF66886F80532618647E6A6669428F89D6C
478210B8FECF198AA5C28D09422292380844FE7D375D1674C8A404A1E3544B0F
C0E0613259D3F69663FFDEA4D8129CFE9F154411D1ECA40563B020A997586C6F
60D31B9D0C1170D43551EB9F0C85FA334F1E1229C67D5BBC9DAC331AE204F3A4
50A0165F894AD136561BF06769F9E5EF71B3F412AD4EC3D83D0BF1564C00C405
693F28341AAA3D1B827919FFE46292E803045FC7D7ED27129CEDED868594FB07
D42C6626F4AEDE9AAD2C8716CE9AB3E3FF229E71DB74E88971C070FBAE2C25A7
104589EF3882C9005AE5681A99559451496988B1682D6B23ACE310ED69501715
92ECF80CDD365650AEAA5E1D52D8F88DD49AAAB67D92870B983872C58A3EF67D
A68609A240B1728F9DC428673CA4AA58DB3EC11B50E40F4370214F4D4DE7F59C
45F4B5A090E7FF256768B87F02D4085B305314C601732BF1168265BF1DE48267
5C708C7C13387E5ED2D77F361F55C36C5B6D8AF47B74AE9655C8A45CC90C197E
94F86F1F18F0484B07B018249AA06570265CC820EC8C78731C90AC5B3E91DEFD
264D372567A2C54979A35AD050467F39A1C04D8E2B1D27BD43D6ED473E1A0D07
9C7C7A6E3AD5A58F77E7138A90E22AC160A0A00450CF637A678714BD90C887E0
12F9BE0BBC7D58A92835845BC1E5EDBF76871F1F34DE492B2D2683AB757BBFAB
A93EFAB846FE9D0C0FCFC527E33F13DFA349A82EFB823372709EE89F542EDA9E
0FD4415FACBDD920CEA3FE7FFDC5A0DB16152F4987A6CA987303F1B8B96D2BDB
9BCBB45E0E51777B284D43E0A2DBBA26BA52F02281882058E0DB757C9B0F51B9
89B5318C33DB64B235E133678853CC11E82D6478FF43001206BC466002262A40
519CC9BC207445F25CA7AC8C696454354434811F58BD3A8D01BAE6B072C58CBE
4298247D2BE0340009C779B6970ECF9A539284FA5B7F11E4344ABEE6EBC18D44
944553A339A4F5D0B6AD45BFF4891BF8C019B77D7262E613C3AB22FB3F3EF63A
08F5633903D69D9CCB8FD69853F64197A6E156F456DEBCBE540D4A0BA260FF6F
9BE30A6B8F4BAB13FB05AD7DCE1260F8F1B4CB8B7A911D9DBE64E6301BF144FB
2213E0D0186BF7D026276AB5763507B9CB8D75C9AD7DB158D62626FEBE8D79C8
E6DDED0EC5F91D06BC2529D3446E1D503C68D5C33D06182BAA55553B2D1F1D72
519A54853C5E93A86C11A9C722EAD89A9CA29EF4E30AB02930B037109668176F
D079600FE2145A3BB1B24AB615D2AEC3C0DAFFBC4D2E8A7B31A65DB3DE459911
E3FC8ED849FEC7A065461871F62A56555CAE6BD34D7A53130FDFB1A0930768FE
6AFE6D2831A09BE977678918E33F14C98C6DC3B807E2600BBEEF0CD36D72F576
79AC003F18FFFDA2849032DDBAC3D07B433C35AFB692A7A9A50DEC8D1AEB3BED
D18BF5BDE5C8E7E36FCB844523A4A2C5BCF5D342D607805BE298B362001FFD20
97BC0F9A8ACB087ED7A320D8828D19463B5D8630091FB3C153A488E536EFE7EB
02E475C0F81E5BB788B2873C2584E2B155F347D677219DAFD0E416EE63A98CF6
7C90772FD5830E6AA07EF85504D0C71302451936A1BEA2C7D21CFDC1646C4A3A
420F6C8D5DB8A60CF314245CAA6CEB7B302BEB7617740D801684A968D916D845
304E8FD85FABBF580CB87ECDB829E73BA737D8ECDD22FCDAD95A3D705AE39F00
3A8EF92A189BDF60AA40DB357A0E8F104C63866D8CB550E48B369FAD29E710D4
161FADA26C96DFA7F12A43828E3C49616FABA8A748F021AEE5629D8872887470
6381E06CAB4FEF345D361E6BFEB0F784D1D183E84CE1BF8F83F59D1920458000
AA7477BE93D17A85E4984F18C5E1EA580DD2D41CE18EDF9C47107C7D1495D1C4
01C8CBF4F0B3579C27976278D946F30031609903DF9DCF8081F6E339B334DBA6
7FFD4C1155604DF8E4AB279A3D729F3C76F98422CD08073E60B76F1D975F94ED
C9C784106328E473DED3929DB5C4D3CF39F769F36237D81604D6DE199A212735
27B7E2151A5E8729076F7C20DE23AA5DB9A8B025BBB496335623AA973A83DE17
34C97154797415B87EACCEE67222DB7039A70EF666F69E41142722E7A5B95368
D6C73D2A5663D0537A4985A64FB690200B4F09EC1F8FEF695EA59F97CFF8DD0D
24261651634E55A1D1AF599C5B21D4B8930521DA8BD5794AC652DFE391DC8594
39A607562D1AAEB5663C811D70F50A33480663808339B2DAE8113029D2E2C513
D948A003FA598962548B4059AB9EF285833F08A9F3E8614FAF8D5CE8183A1B00
377476E6A9D87F9685ED49D86A5C118C3E9E009D04F956576C172765E11D5F1D
440321EFCB911798F4BCC5D13CDA17423AC299B2E52B062E144BCD459D5110AA
7CD27E528F885720102DF7BE546CCA50A166451BACDA4C9861A9EEDF400D4061
48E5094CF01D5C4188E33FEEA68C62F8C38AC639C5804A68F6B877F7A9FEBD39
8604C2DDCC6631042B7982D4658FF21237C3EEE31E726F7E9EEDCAF1AED7630A
982855605AF55CD687D3D001A513920B46E91EC93BD10C0BB09B81508948AC67
1868C97FE43FA125D6DD423540BBC78737C144D16D313F269B56FB852777756D
2522BC0F9014928BA4BD9F1C63B57E0AAE912C86CB6CD5BBDF8316E8E39A3869
3396AB329CFA81A35671929813F45905BBCC5906839931AB2BE7AB6D0FA05577
799121EA4A46CE308D8AF7A0E6CE4C768615A869D5BB3C4A28F3D9E2F142772B
BE603D0B138A131C95CA7E39DCA608D86474E38924D5FB8B65FFE93A348E00FC
B0103FF9C8D1FECA1E023F552653EC2A9E09085BCE08F8BEBA84F509932A5679
B1CC6402C7C3E99B4E74D3D217ED437B23DE309A360FF60CA82A8251BE5676AE
AC48FA62F116941558BD0F6554E152EFD268E21177550EB15CABD469779E277E
8E5B8730A2961663C6A1959B0AD8EFF137E476FE5A098E607E25ED29F4BF3409
34EC1ECC7D1D0E4A13B262BEA658AA67B8FC1B13507878E1A79A568E3F27DF88
EED64E45DD9874A61523D231921AB9E91402707B0102669CB93FAD8A7474C4AD
A02CDDABA9C92B63FE7412F0AC8766ED63A6D3F5B98A8CFEB1EF94758EF6D486
15FE05F6685E289172BC8DE14C0607076CCF3F4F5AF8601C1BC1F30F4A456A12
5AD5B251C8E1EF73B9CCAF1A457767F1DE88A22DCC485BB81B202AF1F47477E1
1A05A4198EDBE40F94DEDDDC4A1867AE27BF04EAF80C756386291444CFC1D7F1
2BB4B1304696B644C026634F3D05C8F61EE2068824B4AAE5F3D674ADA842C085
8A863A9AB484C68F7021E9A1E1CC9750DBB35C0F4CA27815C6CAEEEAC922B825
E57EB8AE40DBB9F77EDBDC2FBF2E0D31885DB8D0B72A0217A4F0139321CE43A0
1468390DB97CF2E3DE649B554A5CB064614C66B2736000EAE7411EFDDF67CA52
79B45CA3C86624A828A4414855048A762DA96045B037370911E0D47C84DCE107
6B104F655FFD6062595E9934A5A8024B5F8CA0FCE776A64F05DD54E82BE78C00
1BCB000B4F8D9BAE446C246275EB7B1FA8A0E3DE20E7EE54BF66495035920CFF
2A1AD7EEDB049D840B521DA32596763F1046062B5BB10DAE3331C3E3C1B56AB3
28435C9964D7A66F1EB45ABB32D64FFBE3475AC402B3DEC385C5933FA1925E39
B8301155A05B7A29B1D9D09D60ABF82633F2609C2E50A5C7FA6D03D9CBD78CF0
670144E0F0B60154A2B13E75F60EABD442FCC40EA91D47117C01D70565B71AC7
D7977A09FAB0C4870C8E6F613285A713A0057460F851BA69C027592E21EDA406
4F9024388FB285B72C03C55863A82ACEE79613DD66EA9EA94D956AF7ADAF6F35
F29A80F7710642A3443674A4D11140D4CFF36B108533894F1E7DD06A8E087A36
8E10669EFCAD5494EFF39FA45B7D890C150BAF5707F8CE60601F5B80AFF90404
C1F81C1DE273579ADE2C7D5D48876065077821BC216565A1F5D14CD585898600
B486E47ACC3334E64D8DBD17F7F2F574F03B3BD5CC8F9D82A412650F50E47FB2
5F865D3DEDE7CB7E62248F715F372F14E95B0822D8FDE1D15B9F63FA5C12788D
A4F63B894B80512880391F89EC495EC8F05B5E06C7B9CDF0B347CCE0D73E5DEF
603D68C3984D89641875C81CD566FA1BC7A525E3B94E09048C315A2E4DACB57E
1FC4C7DF682A230DDAF1E5E2E0F4DD29BCD210843A58029D4622222537E1EABE
5127AEF69CD607EB6EFB29EB1F77696469FC1F39A7408F64DD0C73B70C49F3CC
31DBF83036626DF8BB2541324E342FB678CCA37BD4D3F54260582A6C5097EC50
C6A17FC71D425F9409954DF168966159B2A302B801CBA297DDB1AA787428233F
8377E4E03E6CE9471674E5EB3D53BB8383DE10D2A09145627E8D039CDFCC5990
A998A3F39A739D763FC6CC7EF5541D208208DA3A89E551673D3D36802B7DA7A5
F74BBE399E63C4E1A6E8D48AE8010C462152A01BABE6C3A86D863A3DBE77A6E2
D221676212F93FB5DBD2016C31B906BD80AAF9A6EA37F953B74E0FCE6F9988C5
B7E8814293865AE97B1C4240212AF039E0122198AD7A772C3D47217837AE75EA
6692FDF7DD9827179AE1175FBA4D0703CB6A90C581640B636F1C5698B48F381A
17E46997B294A1C4E6CBB8D8C619AF06231904D16DBC6748BA14FFD61E05B8B3
2000D4F6A0D9B74E591BADA348BC61369227F0AF271E681133A397324CB23A00
E7C7B5ABC1CA51F2CDBD55A1F14B8FBB271BADD525A4938A3BB7787F4EB49B02
07DDE4E23D0BAFA3DD34169BC0FE7A727E859F3178AA149A047A1FA9B424F3C3
AEAFE61C82EEC4CD6D65A98909B815A1BCA4591C46F64410EF8D77314929C94C
A34A5CCC31E8A0278F52D19FD0488AD19EC7B32A4FD5FBC71EA76AC75EE6B685
E22E3F0ED9A6A38BB39CA02A3504FEB9ECF4787CF3CF560221D991171DCCBA54
503EAC4692D81CE4088F3E2E32FC520E9F943106625A3ED64B25818D960C6F4A
305B8209F57125516DCB203D476462BFBA16499036AB8F81EECAF7322290D8D8
FA2CE5E0A6743F93A4F75EE914DEB38C9D90B0E5E03E9B6DD1341EB4944612AC
D0E6C5D4EE5A767A8720C56C5AD7C136A38E85E1706A800A2640A76891D46CFD
471BD6F004E3277ECD0102BE9E9FF07B91BCAD08EB575E266FFCBCC98FCAB6AE
8FEC3AADBEF44EDFF90FBCAE8D058A98F789E5448E5B26813CE04F11D5FAB8C4
9C67A016C201B8578D58C1CBC47EA4DBB04E50F25C3BA2B89C1849C3FA28F3F3
6237DA2BEDFECA59B80C70A72F92D161CA60BD86F512739AA191E1671C8E1B08
AFBBD36434E852EEE6E871454FC0425B8887E0C7F8EBE24EC20B30EF183996AE
C4092C1B220F544989112CBD3BC3406168DDF5ABCF662690649A6F4D6D25AAD7
879608163AB9D9A5053A2E265AC2F21881EE4A59FF5C5FA95025C49B004429A8
44A8C1BAA6F0814A94CA3CBC21146CB0A5B4ACE05088441FEB683C95C33EE383
FDA43637AE8B243BCC9404C99E2716A82FFFC736B97EB711A3E921689B3E5482
27C4F83B24A79C73344D91B5F46B4F76C84F5D28D5E00DE2876A537096ADBCA1
D686EB8CF89B8C0919FADAD9440E1D4577F4122724C159AA1C46C2C2C3CDA4FE
CEAFBAC6248D305562EDBFA9548D54E42FB4C4A68B8F974BCC432016F24F1842
98438154B60108CF36C781000267B864708EBC5CFE0E7B1BE554568E7B267285
4A0B8A6ADE15EBBFD5CD2BA9FAB7E75099F964A253A2099524F362A188688DEF
40BB855F6102028DE6E787E8B93EABBD24983CAA7C21FD1E44B7C3DB3492ED5A
AA2F732B12BA10B7B6B0263B8B5CE6EE63CED9FE4C3D3D985696CA662DD5E4E7
3AC7A6EFCDC8D281C27DCF958D2633B3CD2253580B4FAFB73624624EE5E9EBB0
52CD6343D43E2AC91B690473C15738F8CD807543B14FE824578A3B0E01D6D495
4B3F4303BD3A1AFF7F0BC08D01256B7CED1EDB9334AFFB55887D56D5C77E3759
1CF8688C3D53F22AA0ED74504BD81147F35D8989D2CA44BEDE6B8BA09F5117CC
DFE41495425F0AA9E0F014464590D69B105AF0132A6F8C0DAF510C5EF83D1C08
2F1869429B0A2626B6321C7BBE2DA62F951C898CF665ABF045E74379D67EC0B6
5EF8DC0D7C5500A05DBAA0C671065C069B7A80127C6830E7E245D3B0D70C6EA4
83FF99290E13574EB802422BDCAB555B747963CB4B29ED6BC20BB7BC8FBD34D3
75BF33386B05E2F59324C6794BE46F3FF5A9E98518B229356273B946021BA795
1C873397B694C7C6BBB6E2C36E9CE3EC72ECEADC98D7173850957C897D51D4E7
4DDBA58D9D9EEB75703FE4C7156A9A5D87EC18A5A46CDBD8A513A8E3CEE990F2
4481280A0242E823E22A4E32669BC829EF1B78230FB5114C5E507E856A931CCB
05A58C30CF4B9105E2BAF57A8B2F7B9B62EE1105F37A99A308E7DA80A3018AE9
AE92AD30C02EE0CC7F10BB2127F7C006E1403DABB52B580BAB2844ACD08BF7E7
80F58C3F646B4A877F4C34732D39CFEAED6935F88625620CE2D7C64250A8F2D0
FC709B57981BA528840E4C5F98BC050A5C19D339591111756DEF3D36CC0FD6EC
E0EF01BCD9EEC871AFD57FD3D8BC9DF00C8B389DC2C5A575D80E56E93F96FF79
9BE360725263C55D55195909B820B4965C880D6A11F2D202FC910858CC159C23
49C7992D40996884C6AD13ACD5A897B7E14A891389ADBB5E2C2A35A0AE33581C
3E03AB9EB2198D7032E309C9D420911373602D71A58857864D6CE484C76F3D1E
EFE8ABB3D2BCA2CD5BA3CD63BF413466BB633FD4315B16E7C3081360CCA521A2
E93615D1563AE0E2357268ED1E385DECAE9CF403C4AA5CA06AA66F7674226FDF
2DE6951C4F848E9A08B6A5110F845B0EEC40CB318D42D942482787558A199583
08A104400AAC376348567C5545B034F1FE61E66056ACCE9A068F7BF8682C988B
BB43DCF241423ABBB9FB8F626705951627A6010A110BB390AA5312E192C2AFB9
2B9A1B53F0ED03A3EEA97D43741F3876FDD0754B260588AE06F4EB80C1E7AFDC
929D1E4650F497B6D434A8EF2025B5ABCD5F9F1EA4C1B6B12B840E533A01CF14
3FA56E9C1799B28D9C53E1E00CBE25354DFE7448BED507189AB59B814D50658B
87B845B64B4B34F46433CAC90EC839D2790B36C0D56C2EBAB666B3F47996F338
60DFA7D6B4F675BCBDF1B57ABA4E7C056C272238BA7C41ACB1D173D85E83A6FD
052AC2A5396C21AEC8700330EA129BC2B6B0B8E513572D6F888B13E52C9309AA
FA56D6534045E522B942AA6FAA8EE868A14967F9DA295FEC0AF3DD3C690ACA2D
C2B622FA5056750445A72783A186DA89F02F2C8CF8BC714B59589A52D66CD401
D3BE7B698CB264399D901F1DF764B61DFF39D1558AFA51A6FDABF03BB3E3B0FE
32175BFA8C2DC7D4518AA69116755B434C734B170675CB21F6FB8411C0CA001B
E9D46BB30653430174D252E3FA2070B0DD7E1AFAEF792660158797BACFBD7CD6
FBB41FF7BFBA601E17C5DD710E6DE3B94D853362CCB1538C5D066113867C0F15
DA6C85DF863D186A011CE3665CB550EC9F134C0EAC9889FBF269C4301C5AD39C
601FB86D4090A281ABD6F672B517A89E498488371938C573B40D709C807F0F77
0E97CE991AFD7C74C059790FBF0497F8CCCE345E29AA9CDEB436DDAD0590DCDC
535482E11336C362AB4480E9BEDB12DFECC33451DD7E052CF00FDC0A854E074C
3DF2A4EDC2F0821009F568E615CE94158D9E0A16269C9197599AAD4EE5539301
9EEE61EF4B3796F6F20F5472E607C8962542E2E3021A0CD14BEF6115D2AEE6A1
DC680BEC9B4A0988E4AAE449964323B79BADE117A3CE6F757F15D695F3947BC7
76B062381C25057FEA90D02F12542025C5E2BBD41E82C1E2B1EA057A0446E0A6
7EBAAEE75CB03A8835CCCE51B50E52817004E4D3B74E0CA32C08E0AADFE0E2B2
B915DCA5D50AF5529A55BB9A9A86302495E4E929048766948E40B2808502818D
A140EFDF58338936A11A27DF67BFA1B24CC1ADC5DA1F957574EE8DB48701A056
3F8D0493023B3C4A77551CEED3B6385EBFA8AB0DB6CC37838A6472C601C21503
7E94AC894594D8BEDA65FE59ED0418F6CF07B28837D638BC0C2539678A7D314B
BF92D3F1CABDC48E9156123182A8C9355AC98BEF4DBB83B3C77432EE201F41C8
3B213EBBBC0E697B2E21D687B8FD41367123CFEE10E02CC61C6E632B040D8DF7
97848F6175B9205607469FD3B0F0C32108EF8909B56B152BDDAC3B6286D645D0
EFB8F2B182C37521EC207A991BA1488AFCC110AEE7D7440F1D63A362DD4E21FD
AE11DAE5DB81E86A55E07B024D8B822CEC255B464CAB8C8DFE4356AB5F2F38D7
0FA75397E8127FD3D47DCCFBE332B73E12469A20CE3D0401A7B165F5271B585D
F160CBBA0A4BF8557C4FDCA4A0A4EEA74A36B3873BC998314EC254FBBBDC9599
8DEF2EA825E3BB2AEEACC0F30F21146CFC9D963D769A957C8A11CE2A8DC48181
C93F2D01506F1123474D93C05C07B8689FC4885699E4BB766794FD702445F618
CFECDC45A8D96D7B83073CE78791C700D169895E465C1ABABD4CDC8831074822
1F5BDFDC2696A273C5F8987CDF2672DF6276A805DFFB0936772A5D59C7107F0C
02C44EA6960180786F9261D70E7EE6B327DA4D3EA3C674E6008278FCC6E3ACC5
611FBF05970845FA980ABA46C8E1E8D30561EE8D84857517A5F51E22F31844DC
95E38A7D824F2B9C42C30170EA192D3C4C18665BF35DD70901241B80B4CA42B3
6B70A1D3F60684980AE799370DDE01A34791D887C5CC73CEE09721976F0D0347
1084FA6A03FF6E0FFF6BD2983A840BC39D88AF7C7EF8CD2402F7F0FC2F70E989
88FD228DD0812A6090987128104AAA6F6B086BFEB3B833806329A755781FA4BD
0E85DD55560F0A819BB27BB61B4A077FADD338C2A01580D84E0135EED7FFC011
514EE22BFB83C77161145FC0E4FC155733F103D2CA13721CA6A0E8B94AF8DA3D
20DA51C785F4BB46C32660560F86D6CD767504828129425705446BE050FF9D66
9C64E80549BA62868C219AD2FA5B50E29F6D6E1FE8C348E5E0B60E7066DE7A30
7BF33C3021A3C3D207F5AE931B81EA1A5ED6DCB6250BADA65F839B36563AE4C2
7FC422612748BDAE2A19F33651743646CF69EEFB585A623AC85484A49F8993DE
BF18FCBE1DB5BADB301715453B06B3761753DAF1C35479817D1E2258EB8E4A15
9FD17D5326862338562D9039641247C5F33B540E92D4C16ED33DEA3BE90FD366
CCA9F67943DF89183F2CBCD0077A4CF5899CF2523466F8951D350625ED6DB177
4CFF099EE369D01A39848D7DE4931CA0114EDECEC6AF143DEBA3CF52A999B8AD
0EF009424A1FEF5A31F456E9F79E932BAB10BF96041B27C17175F2D6D1DAEE7C
768BF29815322A392131FB96C14CCBE65E59BB4D23F82F2DEC2BC1102395BF49
18D09A32C2F2ED1D80E2B3180AE72A7F287AAF68FFDB416935BF25534EF26246
94FA389B03B3DF65614142CE79AD029AF5DEF7B359A6DD573EFA7772A978C4DA
25A1CCECAD509C077C58F78173615C944E3FF8E7D0C2F12AB40F3AACF57476FE
504CB17DF506B65BC4BD01671CA0A088959B2A9272E8C04860DF8C2982532C46
5F2D3472A4E2A70CCAC4D21FB9B2FE17BE2337C2362D1C969F72293664A99973
A8BA167EB9FA0632DFF7782C5C0DD1FB8177DF569589B6D8D0A3F2316A9E5D93
ED5B658E65CA3291C6E7195E507EBCE94F16964E6C441331B58C90BEDA80A20A
FD4336C07C6312BCBDB6C2DD778AC3CB96985BDA63F1667EFAC13672546AF3ED
E43B35792D80CE15A6BEF1CE5816DAB2DD223E235930A60846247C0C8E528723
4F09C3F8B52540493803D47C96A2745580EDC957AC4291730A86E25F6840440E
36581874A117F879FF9662B29E516AA2E99DB2348F345EA56D9F24F947B9FB2A
4967D4EBBB0EDAB9D4D1AE02E5474D3559A88CC1D71DD4372EE9DBDCB2AFC616
CE73F6320E7FBCE9F21123F70792CF315BAEE62C70ED7DEEBE820C02ED2F967D
A29AEA44A0C27A817F223F0BE2ADF32E017E9EB5E294B9559556A974B8838F99
829DA93DBFD4A001BD6BF9E20ACEF6C80D3CFAF45A7890A8F857C2F54BA01FAA
C221D701C67236E08C7EA7E2573A80A22D36D08F90A965C7707608D027B4FB3F
93FE929EC7CBDFADDD1496335FEC30F5E9E16AC846C8498D963FA7FFE6E3269C
262DDCDAD794E7AC72D894F0E28D904B7262A37243B7A57AE2B281B3C201BB2D
2638A689528F61000A8201CE998A609AC2587ACEB17E71ECAF48A292015E2839
46F772B5E5698FC7DBAF51DC2CBFCE0781919E00850DF41F60C1D342C94322EE
4191CAB860ECCFB206BF6CDB402CCB878CD3955BDB109EEBB8F504436BB8A83F
DECB47E5CE09E60F0839874318C8389E298F554671CD01179CFD29C70C899E14
087CCC98F595F2C64AC365C6C5B22F2FFCB83D29DD6A50358C8FDBA420A02296
25A770AC8686137C75E49C91A533B409E0D086629220B427D4600BD629CEE07E
06DF83614E2E11CBA56062181F7F029C252A64F071A7ABB75A726F1EC0AA65DD
C25283DFD9123EE5F52612CB8123A4FF2E590AD47310066954EEA837956DBFDB
57FE6275D1873E08F3DE5886EACBFF2E5816EBB91EB3CB214F4F214DFD130D69
7972BB11E9F43189D92DBA17469780CDCD4B38BFE83A730A4642CE4BBC1DFA38
A9DCB0FB0BDF53F2801FEAACF75D29536CFC6E12C9CD13CA0FDAA9BFEDB9CEF1
998EB975A32C3FC1C09630DC632BBF73D29C7628D65628FF82CE9E7C4BD05E8B
13E980B20CE24ED96E7EE72A3AD5AC654B29BE5AFEEF1E6F8A564E5588C1B3C2
6A19F6D5C847C84253F36DF80AC78C389CE68CBF1557B048F8C9E46F213B7899
AF552E7ED6AE24C15111AEE8B0120DD8E29CC460BCF905E74351EBA5A9BC77AB
4E4D29D400D9F6C5A17C350408738BF3311A006376660DC7C67B3A4FFA259F23
CDCA8F8F2FE00B10E10FEF9AECEF9E8B32080043FF6B8F84156E528FD792E944
EA8E2314DCF08578A30A650D17B9BC458258383E94966CDA9AAB97986B5C9091
DFC0830E630028317C6FFE3A2DB30EC928544114DB706D2AD491703D3A1C1883
54695617AF56DDA1FBC56DBE872FBE1DFAF0487F54EB23A1CE0A2D66BA478B84
8B73BAEA802D12E5E7E7D472C9260EC974CC460E3E543469AD568C91A27E7846
243B4F4078A0E7DBAEF6933A753EA5F61F13D1B1337F27A33901F8D0B33C60B9
F702DADB51AB308FBF4E59F66546B39782A8AED71723859AF26AFBB736DA7406
884320902D61658CDD33BE34ED09BB1BEF9525DBECFE5A994F1EFA17C4718C05
47FD9B19E74D0E18F6908E4528065B15C0AE6894E3E1F1B36A7A8D2F5A2E4990
020448BC480AD45B123B7FBD24DFE37E306818D06A0B4EF2F9A8AC224C3F98E5
4CE3F758E2C884D6830B00E1FB1F743CA4FF671AF0A1AEA1022441B4E0338D6C
BE3144E3F023BF632B299A869222D13CFDF599DD43370E6F28DB5DE10B849FC8
500084FD75CB36F23C0BEA5C55AD278CA8D553A8E84D3B3BBD6A5E52B07A1D5F
141B84FC3F01C933CD8ACEAF7D1FEBC44E7B1B6780C7CD58077C13956D8A4B33
1CB11EE4EB1E2A2AC44E4F60F1E032C339601DBB5E17D968CF0EE334272DDE9D
E30A3D383D255266D5A7D4BC7E553F1E255FEB81B7D57F5B6FA2C1D92538945B
7E8A7E1B652F6FD79B16862D939F3A33AF718B23F9CBB656BB32CB7B55EC602E
20FC9A8BFFB2093BDFE6F45BD57DB169FD3568C8E044865DE7308E8FC39DBE00
4C358FE71DD4239B8B1730244930052FCEE9E29946657FE87EFB947F6EF31DCC
61CDDFC39A277186B519027BEBBC9E01AA7172A8F67A678714BD90C887E28D1B
6589A066E3C09DEF8C946669EF2C286DAB56E325CF3ACFB211C49FE7A53D7D80
7E6272CD38C921577A0510D3D13280106156AA2D5B790AFDEFFD04B04AB3469E
06DF10AD176295DA5025B24850D06062B5B2DBC288C28725510FC2BBFFEBF0F7
0C0EDDDB35DDB2AC251FEDBFC76A40DAE8BD559079FC12B6BC3BD7BE90D311BD
5D5EC7EB99E930405EB9B3575782F4619BB6363AAE7FD7F9C9EDED0D84071ACE
B30C5D2015BE6B71854B27E61664C83BEEA0958198AE0AE0E053DFB1D17FABE9
2C29B5F50028523C734F57DBDF65731F1D41734830B54665ED029C213CF3BB4A
518522A5EE6D6AD637C0316CA33793A8753A7F552F145B4B3B8842FFB2F20DC4
817CAA55A143AB80AE7EBC636C3D4E05994F81C15392B5354BD38DDC1116C17B
BF8FBE60B6F7491BCC79E2531E1715A18BF84001D72CAF9B2935E66E18A7830B
7502FF8B5171D26A8DFC9FBEB1466E532F8E208D5E7F5F2158B3DE9E17E222F3
100C95C4C9DF1F49D41B4604264A80570E47C61ABF6B698147691220B40CDED1
AADCA60A7E22E14EC36743B7BF681E1A56C83637A1913D5E8A80518B985D783F
D3BA9C46657FE87EFB947F6EF31DCC61CDDFC39A277186B3A6BF72DB85657F4A
3558D4585AD1918E86DAACB86609DD0483F7A3D5741EB51E3EBC641AE20B3249
96DD0F1EA4FD4B57CAF14B34FCA46ABD97B5AEA02A3BE1064F9B77D42C495F3A
0157E54C5133C1136DE2492BC07C0A211B293C733E90B60F0DB14D360264AA44
69FD8D653E9904264512FA4CEA7913344913FF363B88C91C861249959B024398
75EF9252089FEAD3867827760F70914699C98F0461DE465986E17D0469658182
6F809493FCB93DF79DDC1B75E71F6EBCE2A8D7510A0965620FFA521E47A9BEAB
78A3B0B7A474BEE32D2C078DE8F5A99B47A84017FBA09F536E888C0E9E815A6B
3AE059838DB2EEF382D5AD4E79398075DC164DE6BD66C25A2E7900F987E12ED8
2150F766CD2DCF8C5B352FD4124E80F5B0B25E7CB7D088AD7E4FDC7AC4D4B4C5
6E14EFF907A412323CC89CF70587928FB1758052ABEE0CA1C4BB8E9B89B65A3E
416FDA60C73A0FD4D8FA03668530FAD2A7CA7A21E66EDF5D4CC4F9F9531C1AB4
700497EC72BA6E6F6D1F07A88A4CAE8BF0C5989BA03AE8672BA8F2526D0272FD
1B8220A2F5882788FEBDF78B312BBC0500F321DAF926714CDAA4F2AEF769F926
2897F16BADD5B8F6A561126048EED5FFA96CCA232D2DEA4004342A125982936B
54E14D4E2F5CE0B4B81BD89C82D81A55BFC1F14C520008BF48B8147AF93F77C0
C84F485C98D6A1604D39CA5686B8E4654F66EC195ED6EF893FC514308BEB097A
3C1FF486AC03EDEFE2B02B85705BFFBC47E7BF4384C54C4CC3D0954E2ED0CB54
DE4F12067CA525859B73E6FD4FDC8F58655954049FC0E9C0ECC6F912AFBFBAF1
389BAE45B2989DA00456D21E3AF4A23A6E5306072985B6B7FFD152AF9EB2A58D
BA8530AC20BD16ECAAB6DAE2D8907671248569054F43AFBBEB6E8C68859734B2
32A7C0ECFF1216CF4C9108407EE6067470D83E94791D463971F63823702ED2F3
DE0418B78BD48BA694011E44673A17D6C5E3203CE27B1D97EB8C3B68A5BAFCB4
F1BBB90BC96AA1876AC4F908AE0299DDF787582709775477B23AB62F13004BC7
009F6F9F9B5BE34897555E41856D173CED91E77A8626A29B22DAFB81D6FB660D
65C6BBE76370F0389AB1DC905D2BEB7CD95014B1C9D71DAD38C0EF448DA59307
3DB4D178698678AF2DAA651DF7FCCCD9842E76E430D78DB0F4DE76EF2C8B92C9
06A725021FFDF77EC8C0418D82F545A05180502B25155B73D6D51B7CE4A11A81
6466C949FCB88A21E889779169F0062A25450A050A960230095553782491A414
555572D81B70BD3FDCE6F520A16FEC6BC543657B58D17313B32AAD5637850A7D
D9CCD7E506C19B6F8D5D91FA20CF96E4D87A74DD6F9CAEC0D5C3C68A43319801
0C94B88ABB8D8D0651BBF28C1A6B27CFE73425A804B4056AE560F15158768B29
0D39F12785547266190E57ED06C2CC580967BCFDD5859410822C4DA3FB1A29EC
C9DFC6179A8F984CA14106049465081151A6F9A0553D1297C9AE252D018C3E5D
1324930353F6408A0F6951FDEC61D130A021B28B6A78C2CF7A01F062340806E9
16CE0CC6C8F7EFB49EB944346F2C6CB57E619F3B70111F936A36E33A15AAAE3D
4A2A56DCC2A73404EBD9F3FD74C95042B4E88B99BF90C760D537A5F601A5C3B9
51721319B911DB91692758F1907EC08F5E8ADB0E9E4E2471C6B0B117AA039E23
F4CFC91B0A48553A7A28D23AD6FA96F38E5F3B91656FCEEA5466934B7B24AAD0
092A4DA80A303950EF8E8D07AD70A62B8B43DD7108277E5987131861FE5B721D
4F7B49FF9BB5AB5DE2C3E4B7F90033F201991ADFB94FEAEC654A1293CE90CF4F
7D8D583411627D84EE3B4E1C654AE407A5C9BD35B8B288FACA02A23D1A4EBD95
ADCBF77272CB7548B36190D2CE0DADEDC694A0F4B4DE109C3E06915E58F2A3E2
27B3081C35EDB6577A7D81C1428F5265831D0DC198085B6B1416E7BD277C6574
AC15052591C3977C781BFB907E3356E8548B2348DCC762A34F1E7E9AA3525AB7
3838DB99FF69A7EC7AFC5391BCFF282828E931786138C36FB384B48EE1FB7AA9
3A38637EB19653C3BCCAFA1A19C89983D8209983620CAD375DD3F1976DDF0475
176B47364CF8BC46839A43734E7E22AF498CE1FA1AD1B4F4F7D95F9FEF9EB82E
6BD01687F688043DEA3B1B4A9F6F0FC981CB301C57C32FDDE00037B85C285B4D
37F077566FDC8DE664D850B41F4089410EAD92B9C46DB5891C5B8BB66275C204
3543F9E1E8B8DFE5B4C0A748B94E697167AAE5F60392EB32FBA94733AC0AAA60
5CAE47F0D6B5775068D62F91A70FBDBD95B5EF7061FF1F7ABF87FDF9044E388F
10A9B069939FC9AF53DC32FBA9580714B72F208159DE21AE43967E66E0671AA1
2FAE96D94B0359B02023F4607EAC24450B305A462C51118CCF9BC2AAFD70204F
36C356A8933908F63B720B3CBEB5B2EA1B345F8227AE30EDCB46ED7952665275
140F20A275EBDB873188AC337A61A1919D5E744AC1790AEC88897D5604DED821
AE4C32E873EC959E1715AE8FFC1BC399211D8024FDBD44E04841AEFFA9D23FE2
0EBFDFBFDD36088DC5C55C3068EF3AFBCA2FEEBD65CA2385BFCD161A7EEAA7F2
ABDDC8D0BC79E9F790A75791274878E327215024ACC013EE3F64267DD7AA13CC
FABF6FE3FDA41A38A3266F3EDCC8A7A6FF927046FFAA6EE2703BAF9D83A6DB8B
D9A3780039DAE6BE702CC876775F5CF08E24847D59853AEECF95BC1394F66F04
B4A37072ACCF8B504A5DD844424BA5F6B57EC71314503CFFFCE5CC3366E823DB
770F4959A6740C725AEACF875C839B8869C9526F99362C7693B0B1E8419FDE1A
E5DC670F6CF1005244DF9429C9FC0FC76BDCB6FA4991984302F1D52CD2D3EA73
BAB53FFDD81688CCC95D1C473070C096BC57B1785BD21601CF4C1C00BBC2E6AB
D4D966424FADB66FDA557B8B9D491644B17CEB634259FB8C5335BEAD067A893D
FFFD64DBE72027DC4CB26FCBCB779549F19D8EFC2882DD97E759ABABC96302B0
4163FC0E28C524C3877704936C23E805DB570025C9F6767C3D252348E3069139
B41438B8BA053F0B5A96E565758819FA5C16281E533318BC67ED2DC26C28A403
BB06AD487FA56B7EE5CE37F57C15FC6F06D703F2E6425ACC9A4CE280C5579904
54B5B17939F09069D27CDBC6052DB8D75FD0F7446DDD46A92BB12D4EF1FD2865
A2A7544613FD60650E8F809F19730765B0C740DED4794DF0145D40AA6EF0DFE9
C41CA2E176B8B3DF39B08E0FC34A51C882383FB6F831976667E11E54EFFEAF8F
40CBECE85CF4A5CCD4934C82B19212A14E34AFBB0B1FC8735926761F4D258EAA
C3A334FAE911B3AF4602529F9A999637A65D485759655E9C0F40D59D152BB1F5
24659FF1077594A715A2733B568EB6DB3037EAFD9D0EDC7F652ACCED6C340525
7A0875271699A155F9A7400B0966F23A91A075F1490EAE28DFC2F6E7177CE802
E9FA873DA579326A50CB2EEA515817128C0015C3DFBBBCC84C4B3F1456680BFF
4BF6D083B7F7E93A948C1B55611055AD2F81EF6A123632CD79F9EC583BC08ACB
45423DE0D9731D0FD68FC92919EBDE4C164A17B160E61F2846AA48FD20E22EE7
98FDC4C004163A2B985705E94C9126C983EE07535A7DEF90AEE34C46E2817AE0
24E79C6163F864FA825551460148F64E16EC3A7BC04C2961E764794004692DF4
DFBFA3EDA0366BCEE8DF9F8FAA334683DD89B3B9B26C2A69372B727F2398093C
BD222B553D574EDD751D4FB419A255967103265C85592283CFEA8EBC088472F9
AF3FF97D315AA07BD2552B034FEB1FD502CFF9CD143FF4DDFD94770FD5B4F509
A3EAA3441E824D2A61A0CD38C38318FF54E58EA434E4EA74B771EED8BD7ECF78
2901495D097834A753AFAB00DBAB36A2B9EBEC1E8C1D56968B443D3829E3044F
E0498B74792EBA68FBAEC4A639106933C7CB06F402725C300BA2FB19A6030156
DBCEFBED86B367336A7DEE82681440DBCD8034673CB2506CF333E95F5713A4FA
E45EAF599F31ADA4EAE031E931A484807716F42573F56D1016338D78FBDCFE76
E6FEB4898CC4D1EA140841CC8A02B8D59F44045660E5265C6FDCF04D648D3824
90533B89BC47BF1C8EA6CE6478D2CA1D42D98C0DF608F4F1B3F74342DE683833
C26964D9748579BAA6FCD97165569A1D749BF7A00F1AE16592198B101C6780A2
415B6A0FCBB66C611BAAE6362032EC6DEE7703B9F13DD07065574A4AA174668D
FA762A90DBF8A8B418220DF5359A4CBFD3CBD3909254DAC920C0489926848586
5CAFBA539121AF396147F549E371DA5E638359890BC2A6350036221685592117
F8752C29E9D1D1F91C53FA255AA35799676D8E3286DCC2E7A8E8A3AB7CE0257D
8B7965CB2831C32EBFBAC029FA60F76818FD1C2CFAE733CE01AE83CED920E413
7F6D6FDBD4AE68BD6F52188732D9654207A6FBD3EE1F50CD10C1F8834EC13A35
503C10F52C2D50ED6B71F0BFE2560DD2171DB12C6B4D4AF9D0FB010F09E86182
F2EE237B5EEF8450C9A352A1DAA29CBB1C80791052E957FC5A022D75642DC826
883D4243BA2D95B42B602E60DF44744ACC76159402A6ED93D553E99C70664B6E
D943ED6D55583037AFCE335E4E45EEB352CEFE63FF1B63899BB364EE2BA0E16B
EF4486F9BAF14CDE74983DCB78FB6133581595F46287A7588FABC7BCC979C3E9
2B563C2138677922C4C778545F3561FC58B2580B4979ECFE325E410F001DA7E3
5B4584AEBCDDEB881314D031F6EA40AA0539C9FEBC3600D9202496B998F1746D
03BBF2F0B323D3122626917D67412CD23323AA5C6541BD2506759A54D4857B77
E2D31DAE213A719BAE6411190DCDA2FA4C7054C7AFCF5E9F2B553FECF4D7E837
21388BFE527E30B11212
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A924EB918AA
5E62E5A3504028501C9323EDACAF4589403E6E145EEF8AC9C176225B3737CCBE
FE80D431A9A40FB98C1F251CB49EAE29A3AE0601DB63F00AEC1ABA9543F0A89C
4DF01C43A24BFE5463C9619F0CE9C58B7A3D9546AE17060A9DA3A3FC071E413D
DEC85015E5AE3E1A3D5B471CAD468007C4A6BFEF07D313E6D5E5EB772AAEB666
A158A5D83B7E0FBE24C3092C156632C9FFD6B1B81B9E553B4A7E3C50F98DFC65
2FAAB8F6FDE3F2558FD1C5ADA269CDC8F237A292E60D03912E83ED10C155D102
2B59D9410A2BE863B27DF4F127465A89A138C36E12ED74B2187B99D5F33DADC3
D846418FE27AE87A1879F88AA4117D8064EDF35EE6241FC3834B71619EB0636E
F92E5D4E51D532F29BCDCF285AFFF597D94539A163323FE2C8DD7D2E82FFDAE3
678F183C1648D2C3826031A7254434ACFD46E4E0C7A5252F5D38820C6950A8B3
23B1B8648E3AFEB827684CCA1CB15E82286A1A7FAC8FB6B47C80B4555FE344A4
650FFF12D06A00AA0A625ECC8FE09DB849CB9EB56FB12AE869A75ED6FE1768B8
E8BE31F533D311387C81A7A79AE3E5A9D013F904770B1F2E9B707453F8ECCCAA
A9D46DF7133E8CDB0682EC53FD322AF0C9804F170575F2CD0EACFBBA826D6572
7B80673D6BA889F512EC9C9749EF2864DAAFC2B4886C6E9E9D214EF74FD5A794
6D6433253D3165DC748B7D9C168DE67AAB19F43C178EFEEB5152EB5127D81E31
94BDA9CF6C6CAD374FBD8DB58EF1E81CA388976D6F2508D429C62585777EB9E6
E9DFCA889F03CBE16F956B857291BCDA9B6705F0B062A78EFC65E278BD481090
44EEEC6439D7AD089A232D378B0A280C38C7036AA00513C126985DED4A41BADF
2F9A51116B9155F4015D26518F635104F5431877698288E9FE2D41D6A12267AA
7787735FC84B268815E010F2124966C4632B7CB93151639378164D0A25C6E333
A83F4F5F9F83954698392267793AF43663D21EE42DA19A0B9C7DA6AB71328B5E
AB79DC4CD406A5EDC12BB88A69051E420E3781813A9E7F06D9AB28A2037BED3B
272FBD24A46D9F5365A783EBD5BC945C595C921FE5CA52B5D5B1B6C459CD7437
A622EC7EFE7151EE3F85AECF274D45B2D60EAF2C3E12674A53B3AC3CAB2303FC
215B5B353C8B1D386CED0321AA1103FE3B1677441EDA83014D7534582A02C675
ECB0DE30D1520175F4760E43CE6C8F041B79B420BB9E031AC7158AC0A2D64607
8C22F4E1DE97D35E3A9F12C5C922E59A9E4E65630EE03681A62471A1C035932B
6545FA53724DEF6CE2FDD0986C7633CF5D3EE91CF5FDA380B96671CBF0AF8D53
B79FF544A0C6F98C72AB9F84F3C85B0D17AB4CAD27D6776A05245E5663DB7846
6EFF03204F6763C471FCE09BE830EFAA1848D82076C95BFDFDF30B8AAC02EFBF
023FB3ACB3EB8D30CE573EBB18BFAC636430D496E772B134E967A87C75DDB0CF
6D2B6CB03749E5D0562925E48F6A24FEB64C15425B7DF69C95A33686869493FF
0CDB137CB5DA5880C54905A321C2A408FD3A8F9FC9756B60369CB4CE601A9C20
8FE91ECB58DF2E318B41923E8A047553D96C8FA33E80CB4875CF107E8F35C40C
193914BBC36385AF5C270038009A7699D3E78FE524DB3779672B3EC31810C745
019DEA6BA5CFAE5937EC7F21EFAF410B6EC1CF9E1AE331202B034852C673ECC0
7800E02449ECE66F8102383FF0B0A597C0F8FA9CAC0D97DB08873E75C5CCA0A0
BA8A818FBE3E62D4E7543D9A98EA5B70E06CE968DF05262053F16906620F8591
77ABEFA27007E56876F152C55FD3EEDFA8730CB27760537CCD03D310B1553F5F
7580979BE5B243819BC39772ECD203CCF6700DA9FCA78E32B44BD12DFC322AA7
F265EED9F02676F167CD6701C04869DA9D77CAEB4DC19B2086ECD686FADD7D7A
BF910EE4798D537E8542C599D4E6BDF98597463FE0E0483A87307152943457F6
AE29273EEF352E59CB14E22749372883A262140C4E6714F5D76BB4976F690109
0B2786E5848D7D8CCF4DB4DF6BE1D14390076DDA26F8D27A46C3059A2B09811B
A35FEA5AF6530D0CCE69274F0071E0DE691DF9ECBDA9EF89EA374D42290051F3
4502EBAE22FE9FEEF344C5218AD07EBB2F3269E9B78EE3A99DBEDB1CE18A7943
9738ECB824713DE70362F89321824127073B22A80BE23E2601A5F104C1E1B11C
80C8D343E65CB1677E61DE296B7ECD11AA4FF54DEF7E8CD3993D42B0E8DC8305
11BACB83B16F3F72543A77D981A1FF4AAD2CD5687E035C52F0D97037FD695F92
168EBC6A182C049463AE81F75312A1E96F83E08572B78F01AA8970197F69F5AF
7FCBDBF90937F82304F74E03E4231DD1E14AE1E34F34BCFF6055BC430DCF80BF
CC29C0A660A0E705AB881B94F0352676DD613C2705764E2215D28DAFF0B369FB
7E14A12FB3D4E764B326742E848BA68094FA7E0D033E338E149518B5493D7E35
00564484FF171362B3551FF7356C84CF0F2434A53A38705F5721C8716EFBD51F
BDAFE1177E614AAF343CFFE0739D28DBF7167837A37DF2BB6984FE0C09C46ABF
1BE83798BC9FE903A205E1854AD4364CB8A30547FBF908AE04796560C3DF99FD
8A37EFDA8A3CCF56AD9EE9F5DC0247967926FEF8370A38E142AAD5349BC4773E
95182C70A3468117D35E25BE199A9AB7892E680A23603F2267173A8339012A6A
B0585242A0053D207E6B6F6BBD25829C3D0CE299366BAA2EB284777A24DD1290
26E160A6453D3C1DD5A6ED3C2D0B1B96D7F061EACDE498346A3CA6A77B5AB4D9
3EF9124E3C90EC49059A72973DCA58029AB7A1BC5A6511D52BBB7D9572B348CE
8743825823F4C89F3C2BEF198E85BA6F0370AA38A32C33C2818E0FBAD26CC57A
FBDCFE76E6FEB489213AB54F670B84052E96560805A240072203661C62E8CB19
072CA76705E81701A9AEF580296EE177A97F5C50FF92FB804C7EE832FEE09F31
3A6E550D7779D1096790EB7D8991E2D2BB4E21A9AC9B4CD31F2397BD6B4EA476
4C0C9CBF8588E301FED58D0841AA674EC6C36A4EA424C5C43435870DAF71D9B5
274A15C4E19A9D1C769735FB86D8EF7DE0E844020F059DA0079366B9E331D0A0
1FC902B2E1B8F18CC386797D2A9A40DD7EFA8609D2E30A7F1757E3E96F17DE32
4F9355152CD28C7BC3BB93B0B9CB186A74967D677909BB797D55382CA53CBA27
577BAA2257D0260C1157555524CED262025524283F4864FC0BE116B4825CFD9E
E2D4FB9C9A5BF55CA4CF57918644582BA01D71D9CCF62A64663D7E2CDBFFF13C
7DAC43B545DC20FC0C7682845F3E4266B7D327312EFB770916FBA90D8CD31D9F
E8EEE9CC9FB78DBF164F52F31EC79ECF1FFDEB3B53C8196451247A9DCF0172E7
E92B86F8DF4CA1771D7310A056B151C15F895BCF076E4B6F85A94D6212EFB1CE
70F9F9E81159520DC45679D35E06C8A1C712F2BCF6276BC51965FA70CBD68267
07BFBE2072126C498FC7EC19B66F88C2E08549559AE4BEE134388BB171D092C4
2CA8F8E14A7959731A74DC4B215D7EC095EBE86A3FCF2A6BCA81E275BC94ECEB
7B517E88F6126B8A392F9F685FA2C70191B24E20E699454570FB31850DAC38AE
12C7C861AC308C910E1CD1EDE6797C65836B6FA5901C139841BFB889F83B3CAD
005996A6309A63BEBA0FE32D73F25DC5CC2218FB71DEE78BFE969B575A7048B6
086DC92FEBB615F6F492F8D3AA12B7E2928E87443D6FE069758C6118D1D92C3B
9B65D6D70A7FB61BC4ADA1EF4B72225408D336290176B3E0B546698B6A12F524
DC97030DFE3A1F14F762AAF8178718AF1AB3F871B6C390BE93C0CCB13F3B10E1
DCF7DBB4EB6DC13F61C0A90C6BD0FE37708D5B1C9026DC8B53B3DB4FF6C21B34
8CB7710B99297AF6A354348ADD815687DDB99DDA88F1E2C5887707CD4C944161
F00F9E298B3BB482BBA0365633ED40BE32D149214DBE1728BCD3F6C1BFD503D5
5A6A7A6376AF4D646B2902DE2FA190BAB9326EEF9FE6A563644E59B5BF520B30
E998DD6EC3B2310F954E38346A81A9B5737450A51D42CB7017D28C94EABA89ED
A72DB06294512B2045D6C2D51F4C5E7D6E2EDCE42912D03328369F37BFA6A270
8FDDA52E6E372DDBEE44AA952CA42668A93FC84298A55C55FA575732043B7745
07B75DA4D49C7FCD52FCAFA6EAD15946074A63B80E60E46E129F6B57DC84CB8B
D753C3BA8ABE0BC90226FD7DCC2267359A6CC965F3BF81EA6E18D9D83BD9B361
7334857EA92C2DB592CF08B3DE2FFCE76A9C1D20778C9B9E07A0A9B9AFDFA66E
765FE6B7FDEFED8EDC00A8415D70BD5463DC64D0B5DA5324939590CBC7F201DC
B485D18FBD2E0FE571BD1EB145FE7CDB56A40835A1210E155E83ECB2BF4F04E9
0C4A82F810D4E1008088767F42131319C2B08BEB451836FFA20A22DCAFDA4030
18AD53F67C2BA8AB5D4CFE4E217103A3A34AF1AAA45DA6AD7263D8DD78BB3445
D954F74DB698442A4EA969A025D82411EEFF938985D5BF69A69EBBABB3D619BC
2D3FB92453683899ECE7EC3DDFF5B0B8CCBF3D9CFC3133AF131666845A6C0B61
B62EFDE8D7E614DC54EF4E7DDC381FE7731EADF710BF0CBB95B97314FBD6FB86
71150F31DA86BBFAFA1329EFB4F9978CA340FE94D57AA5DC285EA30F18FA3AC4
88FC252FF5B2D5F53DF4BE1A7606D112DC3AD6097F7DBCD638B5685BC4904F45
DCF443C4C17FF6E0A4CC88475211B28D9A614446CEE225D117901D017E0A3E29
56D5AF919E01757021B319D0FE32E4E03247DA0247C8770EED7A3B6BF6112C35
C2953F4A76FC5F90AA018BF6FCDD1A4A661491A4B0B3969F01706210F5F3AB39
EC69F179C1EF67CE435AD93677B705BC81144F2E45854B0EDF8DEDA104BAECE4
3AB290DCA2C64EDFA951B6DF885884B2C998AF85DB5EBCE675FD54311CB14681
571757E2473F37CCB5C6F49F964FB9EDAB8FDE5AF3B0271B0277D45275BCB2DC
287840236DF4AC604119029F54CA5433269ADC5FC343C5989760995188D878A4
09AD0AFD1A7A46A63E203F6E03A90ED01EDD1A46782159CD556307DBF381745A
7D2C3B8999507C609A2ED663E1D24F985581BB802F7D2702DB352D0874442B20
74859EB49313BFB03B9179E939E8E50F7BE4118ECC2CC40F691AE9748ED40F2A
18FE28F830562887FDAFAB6244BE43DCB6A70E535C0BD9E6F5A06182C3B98448
43B36660FB31D933BF4D3687C5709112938ACF9BB2E01187FC035CEA0FD5C2CB
4E395B415F9565E574B571CC7AC0511ECACD8027F00CBC034E376490F561BE71
948F64280100C3C5BA1F59C4AC57945BE9186686583FA8B733579DE8AAE808C8
94F948C566CF1D783EC7B15B4330A37FC9C1BF23CE45EC84DEF673A91F6451F6
CA0AF3C9D75F66C83E885A167B367DDBE4BFE6AA6E50E0A7FBE2D58164D82FF0
78B0095F310BF86FA14CC2242F7B66894269D719848F1FB5D12CA5944782C732
5EE9F9CCD6A1C47D5672565EBC80E00E56F26108A1E001BC8E25147CA7CDF47C
E12489E9C333A819237D25D5FC737A8F67AC79678830CA6BED68B4C4DEF8290D
5915969AF272C2205E542ED8737891E67BB9DD9A4D644584C7B4433471A5338D
30C5415E1EAA2850581C7D72EFF375CC4D0754FBD4107B9A801E9D4CCDF0BEA1
098CD1D44BAE1D0D3F47FC383F86C8D8E7AA4FACAC9788E84B4399D4C62D85B4
3354FFB487FDEBB3F2F10E0046CF004AF4D76C8434E66ADB72B6710A1830B3AB
9CE48110DC766F03DBCC2EF01DEF4ED73A8A2F03FA5DB7FEC57D40E71090768F
6529B0605F51D066280048C4BE7CBCD7D4B885AB7F5DD10679FCA5F7EFF91D63
ACA30BD1FC68B5B0BD21380C6425FD04BBF54EFDC5C30EE5C1B22D5C02D1E02E
3603E885A6F4C9949F4D5AD4F002D5F6ACE0A37F242A86EABF7244DB6896427B
7B2627F63A21712B5D3231F5665A9EB50B6303F2B0B22528728615CC410AB3F3
A1CFBE1FC9C1E351F9925FB963498597EA65855EAAA88489B61C391ED47E4BD2
FB542A358E0B8F82D791E33FEFC2796E53006801C01DB6292B50F0EA50991306
0D30CEFBB802A03229FABBDCCC6B33653061CCCE14E388A7FBE9450BDC4365D2
E660A69845C605B6193B932D3B9A492B777AA228E29D1EFBF5767C33E0C88303
017FB1F41C13A2C3F021C732432571706179CE7500444BE945E826B26DE65E30
75FB61518F44464696AA5C123A4313C58D9F29B5C004304B83F04462DAC8136D
29F9D0B38AE272F20B3F660BFFD5A88CC9F9747909C1C532931629BC216CBD42
A8E9EEE8104195810DA0A805C3D7666DDCD38A27A7B339CF1892E24C846B24C5
11AA2924EBAE5BF7AA0E5619FAF20F60E5D15B9FCAE19B4BF9B4E24E1AD0992E
9BE3F2E9101199A7B5BC58625F9BE81E9A3D1062D474804808C980CFC1D05D7B
F014FFC6510928C45F08501FDBB8AC98AA0F9624D8678DDEC7BA031083CA8D73
A2D86768569B68F58E26D07AEA271F903D7A046DA0F3E7C6B0EA56507C3D9DCC
595C5B983307BB97474BA7A9CC3EDBF9CDE519AF7844CAB9206CBBABDE8C4EA2
A0D1A1165FE3E10C9C4536D71DE4847E19BD80840DEBB6211CE96439F8BC222F
59724B115086B8161BBF1370D637D76C3E3EF6962EB9294FA639F8424C28DD76
325215AD4ADA1BD57073D3599C70DBE028D8ED37FB29A7B34189E5C5ABCFECD1
4E0E8D62BB0BAB4CC04765B0877D05F71CD140B7E558F1E9C5DC4C9888AD0D4D
5EA5A15F4BAA4D77BCA32DE67243C4871F75B38BDD6E22E1B77757E92EA2F51B
F07A285E26A452F417D2751EB90DEC07FFC5DB8427CF5683A5EE4D7FAB4C37B6
A93114D146AFBC2F6F95E7917BCE1DFABD5837A3B800C5B5D30DA9A2E715D31B
2A9F95A6306F7D5261C85D4A06012A296CC34514D95C71475C1F8EB959566A75
8566F65DFA6296D1C86E153D774B9B69D5B3E64D4A9E9491D7A1D937840C7329
4FD6273F61247E9B350B5BAFEED9507030E807ACC6151DACB35708D019A7B9AF
5B124290A1A1111C0963DEC9250C60343947C0D900BBF6F62FDAF665BAB2A974
E898F62BFE90F132A37E2DCA4F43E13DB2EC0A28C29F0EA24196A54A0EDF39BB
8999E09B53EC951CF083F329C433B95DC6920785A326592D07637DC90DDD39EA
52BFB61600DB1851162D33A19AD5F25941F729D6F541E2B0FD80D64C9CD389C0
B637DFC47235D88AADB63324EABFCE7C122151EEB11A2E6A3468C0F9453189A1
D0B13B656701A930476B878CC54F294DBD5F0DBF2A9EC148E77188271A42DE0C
D89406E432FD56FEF121AFDED847328715E65AC465A693A5260568334E34AF89
7011805AF68920F678B5C4584A1EAB39443FB4126192FE536AC8D0A03AC28F0A
B4D8CB29CD233EDE83A6C320A3341482F910750E53E61A74BE0C034CE4F3B5C5
6D031B08B996D0483802318C52B7C24CC9AF78713A5D180673DE4833020F0BDE
C1ADD34338CCEE1159D7B21C65E834A9E8E495C2D8EE9DD57456CA8D38C41F45
3CF1F228BB283FFFD300118249B27F5F7BAE49AD6BCE4E68B5CE1523A79295D3
78DDF5E3879446BFA1B4F06E2C329AE0BA42CF90BC35B012882ABEE02433DF7C
F95A00E8E775BB35704AFEA58CAEBE7C450BBA192F680BDF496A8D3BC5C0A968
D74427C914F067479B3A4A7FC0E0823871776F835D65C3F262FA279BABA8F1BB
4F07B431A1EFB315AA5FFDE2AF87C365A56A38449AB7A9B4C256620E50AF70AA
B831F5C07BB0D0FB2363886DA7006EB5C07707C346D28AF03C6490CF2F2D420C
6A12D63EE1C36D1750F2589FE68B29179A3E97A3F0B35A3FE8DF5B258AAF5B3F
F61C5C663B53887859EE1A6743BADE9309A3FA2C55C5608635A76845967CFBBE
E7810EC93784B7C39EB18FC5DE5224FE992AE7CB66C69DBE7886D7ED3F27CD55
96AC1F08D85B1BA361CF2B70F0710944FFFE30012583AF39D2814139E38C4BCA
E9E1CD3174CFDDA0974D724EC1A35701BB16F608B914F87BA6D397A6B7ACD246
11BE6FBAA5BDED8920A21E23DB820F11AF4341F0CB1F9AC36F3EFE676522E8AF
E9E1E0F282ACF4715E5D27702D5CF44461168554C239FEF5FC4EE010D6ED3ECB
CBE562600D0189CB72C8870B38B8809C7770B2FEF9BE20B738111AE04795C226
2EAE7BF294246C8FB9806C19B7E9E550F0962A137CE362192A347B6196B637A0
5F4A962CF1C22D83316A517000F1073FEBDFFFFC70382359AA3162320D340D73
5A86A08EADD2C916D51FC382CAC59FE7782CE421AFEF19004F3B4CB98AB09096
30088EE814A6B79361184933C73E766FA2AEA1361F2BC03D518F52A23D605155
7830982E6D29BDD2AEA5A268D99920CE95E6DCA24FE75E8451AF9C7F9B51EEC6
03AE7B388FE9F86615C98E97618B0C337A906FF31C4B78EACB6615080D4D41E3
6BA0612FF316DB41855733B0CEBAFBF72CBD3CE033D7D6E9C3BC741BDEF11A8D
2A1DAF060116E3379AA92E24AA903C3D3F360ABEFB007D46720081C498018149
DAF0A4AB5C77B5FFC96866641D00B0AB0281C7CD4FBD90CD16D2DD6A791071EB
C06CC24C5BAAFCBDF5B3F168B480D4A0EABFBDB7FD8AF98AA7C94960293D7126
1F0EA66017F31BADA72F9F257D89E3D6A599CC98316C94769496FEC3FD0397C7
EDA10C345F5F68747E05DDC8CCFD073DEF0A5947731C8963554083117746434D
F37B1062047AF103143DC04D5B5E53D8568E7911839EB05C8F48224EA8770A4C
835ED0BE381CA8423F9E792CB7C220CB91AB6E4FDBB4862DB295672CBEF8C078
0AD1CED13525771E2BDEEB2DCCD7C4B742DC3CF9CAC9D7E3D281E9C4DF476732
36CD23775C4D33214EE977154927F97628D4B946875FBB75E16CFFEB450CB8BC
91FFBE6C83D561EB26914FB0F37723C0C4BFA4DFE3FD4AE99F5A8595EA860504
7532E0E981F879B79440CDBF6CC14F198DBA7A8C49317955F6408A0F6951FDEC
E16DC97E99984009138D760F63BA4E40BA8E5C0A6D51ED6EBCD11B5068CACB82
1F36DF145253BD827ADB43D157A1BDFCB3233B9397EA3E716514FB2E38493FB1
1CB731C8F5863F21359D297B9408E2366557171F2F72AAE38C57A5F21AE59F5A
0A26E08B26ADF5E7524C729305DA2D0F38669F0C19275958D1893157D3E11994
74C14257E8E029B387278769BB6CB276C38BC3BBD7FE5B14FE97B25FB1D768B1
555C02AE1E785256B4388BE0BFDE518C3F79BA7B78FB84A35033ECD7E032AF80
8D30E08C4AF6C4536D1C9FDBEE7B1B2801FF00C2E8D8E14D1017DC8428791C90
0E377B78459949D3203D088ED7A1FC7CC863AF414AC14AC2D75E5EEC3869534E
0C331CAAD340B7375427190D9ED5D06C044BF64163C9D0A6A9BFAA49F87C4FC0
A7241808AB8A493A140B1B4E007C9C2A1C0586B1F439A32B140311904E15EFFA
A917DDA7F6DE559E13D64772A5BF9D2ED8069FB7C0FB59D248C6D982B908FDFF
6E6135A30D1F0CCA7F08EF104BC4409B9A97CCAB9DA5C76148888F30AE04C7E9
AC68E1AE4EEF343543AA94AB29F29A950AF028658E65A577A72D3E714BAFDE7A
BDB99658198ADBC34A135EDE1D1B90A346C4D818EC74D494FA998849663CC0B9
F372DE45E31FC56F48648689B5A0FA8DAEE8CCC5B3CC8C6F221E8C19CDE0D7F0
3EAF49BE166BA3DB1BF765EF0307A9AF9CAC1BCCBB6E8BD3500489A6132C0F36
D15D428EEF9E5FE6DB087505FCEF1F9B81B0F74665A45FA0AF2007C3006F857E
F419616A0D2E3D646143431C318824FC38A28104021E7720C1A97D522C07B0F9
72DB969DB7701AB52A70B27C106BD04ECF97530EE4658257D71504A1F73452AD
8347A2660B90A70A8821E9A558D7CAEED311C24C5F268F21D8A30E825AB46FA4
73213D474C7D71AB3787AC8E83986EB56A641FCE4DB386E16B322AAF048E148D
4C08F359CB4473250995CB6F5DA6838536F3FE0D91ECA3E8C6131B4F0D752C4C
6A9FC68AEBF25F1D023A8BAC97F739879F1507A6001113B11FCC641D676CD120
61D2C517035EBE97F26B0B58973EA9B5E0D111D9EACBEAD41CE7E43AA7FF6CC7
07893A4CD34B4A1D8A15B5B7E8D78915100EF59438A73C41D92F04183451EFCA
E6D76742FED1A401EDAFBE8A3F9F871320D840B1BFDD84BA413086B141364296
34E4766722F56E044B37BC6D86BF9AFFB647CA29C674A2D9E60413BDCBA95220
F975CCD603BBD8AA5752C845DEDC25045FFDC7FD0F06829558B662235A2E577B
B9BC650DC773CF31C2CDF058FE624EDA2DCA9EA563567DF910C9F3046B200C5E
93BC86B961B8A84BA5C6BF3B08B16454651ACB0649BD132223FD13FA2E3A8DBA
1D25C9DB2FDCA3BD231DC134763B8CE18FA98948A689194994A690FF0E40EC09
EF43CFE4C05C80C67673A9A853C1E216348AB87B18A4184C84556C0476BE50CA
1E57276D48633DCDEB7F9D21B332CE4982A6E06EADB4BFD9AF997F71E7447D6C
9B54BF55FBFEC09764D0BEF8E12DFB9D84EDB11E86C86C3FFB00BC4BA7BB3092
3B00A5B17E3209DF9F81567747542BD1857B6F5060D5FEDBAFFE8CEA10F0641A
AE9B0F35673D34FFEE27F8DAD0C4550E9C21BC719C0DCE89FBB23B25B8BD6276
ADAF4DF8FE9E68B059FB6E40586E157D5BCEE30EC3FE52FD3A4B82771128C675
DEB746189B1E316EB3ACCF5F8375212C74A60AB7B789DAAEE741EB538E3AC7E3
8B333C7D8E320A869DE9837D710A56F1A2149B53BEA91A5C184DE1E9B26AC9EB
6F7548E63D6E83F77B0929D99246B2B66944F8C40DFB3072C19559C5264F0DA6
91A912C5C0D924D56B761A5E47340C37814FE1FB817C7C68A5AFCE8584C7C54B
05516837307DB8AC1C0D02ADAE4B0CD3C1CA5023F5EB9256410A727E47F14F7B
9E530ED94405E88172810546BFC2E5F4E9B5E7F3E994D769E32FFAC7E82E1063
867D0207BD48FE8067168C4412FC80CDBA62F8B307C8D0C31707470E0F5DFC1F
CD7A928DF0CD388ED13DD07BABB769BA0DAB927E1D420A61A18D59779EAC7571
7C839E11EF154A08C869BA1CD17D9F4DD939425066EAAADF9A132955A674C60D
5774E77E0ED24E62F5A85DCC763ACF07D050F04D4CA153663EFF8A63016F79C7
D0E465572BCF4D973B036EA5FF44FC25DBE8A7DBD18A8B9C26CF0C0E83A3C7BD
7646FCB6C28886EC210A1F84DB23BD1C7921AE3383BB89F311F38E8043FA363D
CA07A107869A279E8C50DC9D1134454DDC883F670B4913D7636839C1AF4296A2
37E570D6EB12BBBAE986D79303CA403A43D4F09DC85681D27B2BAEE02BD1E38F
66FDB635B6D9C38C00AC7B458D5A131A130D6F49A7ABF47833791F1544926038
7BC6B7C2CCCAED347A6C741B8976945E19AB71F84D86071B06BF6FE1B4C2BDC6
11BA31140569566EBB457AACEB544E53701C7819926D034CEB66639B4FDEEB01
DCD3E057392B1202E416B635D3F474AD6CD39E49D6937A6F436B823B1A2FD914
DDADEFB5C5CA3A43E343E515F9C28C48A736FA024F8C84054DA278F747692872
97C143239F322B3428E32E833FD988D566417E5C380F5F729E307933FDFB4E9E
1B6DEFF59372DCC9947F32A53891644EEDD4DD9074727F4FBD3C035BAEBD1823
9DACAF6DE926E72751B7B73886C1C0394F1A561EA185C51A24D7965B1F179889
636786080986379827EEF74296B215A4DD17590E8EDFA7C7C277BBF9E386D35F
95636EC79D581F72F813469904235C1C8B306357EF02FC4EB7630C8008206A64
A0577ABD20656EE99E9FF5470C355EDCF2142322EED3BF20028C0019ECC8CAA5
E0745858310463DDE97DF65B0612857F360BA1F06AF09DE5CAFD23D059DE3F49
8CA25084B8F3F8F2614882C88512C172900049E9155EBDF9AB2A053F432A3149
B7BA168CA488A7CB1DAFAED3D3D8FE7A74E85A68531FFB57B3DF725DA366B12B
4D4E5EFA64C349484222A9FCE7DCC8B58F6404FF9D5FA02BCFDFA7B2AEEB52D2
42448B756464160CC70EDD9AA34EA77677BC935500722066F025C1104FFC325F
86CC741889DAE02563F58C453F45C231219FC9727D5846BC903CFE41A030BAED
3FD73752C693BB69DD309853251311402EF5BBDBAC1FC39DB9BAE78383486A34
CEE3A1F336D3E82E3489E226DCE8A666DD779E94B4F401C24BC60C0D800126FC
145DF78DF99D9FDD85AEFAAE39BA8F6172F915E90592641FE99B4D86F2CAB2B6
1F652CCB30A078FEBF5783565884B33832E598350A470C355EDCF0B4F23CB3DF
353F11454B8B48314DCADEEA7CB4E15FDDDC7BE923FF89D32454D66F1BB52E83
28A8A6599869002B9C8A8FA9E7F90D27E38DA7BAE33901AF57C7DB960E29BB68
7EA9986211DE163DD638770B5D939BD09C71A5B41C84C0BE7180B2E3DFE45A76
D10B7C0888F4FEDBFFB2B4E7A62C4655FA5FF17B14F01B02C1A4E8BE81D843ED
8C543A9C24A1CDD07958EE20842CD80161A57CC45B1691CA52CB6583FA4C6F64
BD28EC6F839F95D74E2FA8862E8AE45DAB0A4848457A42152F9BCF7C4A5E7EA8
F7CADC1D4D8A059876405158D9422E934429B55AE8AEB12D83D89EC65012257D
A5064E0F3EA0B1CB2A23400CD32136C9FC633D04FB8AFB4228E744F80DD47373
B2F780267894E405957E67C432D34DABD05059ACEEC8AEDAAE2882E40AF2A7BE
E252F72C3DB36D003C3677E61342C59C39F8D5EBCDF09262E8550151CC2EE509
E4E648F9EA5030FAEDAF5D6C7BB6E40E631D6C201F2CEB2B654FA80764C89BCE
C941D4BBFED885B46B1D6801E39931F68C708E5041FF7AE67D07BFD4AD7D7C45
74F0F051571131FD83422F93DB1A210C6917BB6A04E89C45507BE1B3D9B63F39
07EC73E5B4F9B71156B357F62608909B7E4AFB59607BA2BE87050F8AE8EA7280
56655F9D9DA1ADB92A4F3E76FA9AA84F8F9415F991DFDB5930DB5CBBA6E4E3B8
A10A436108F0D6B87BFF46E7E197D8541D72B9E6532FCCDA7CF82CB2855CF7DF
D25D8B7DEF7C80370B0213F8BF36B10851B0883A211E7D47163232E7A7E0C1AB
0FDB7809692DF4DFBFA3EDA081AA379231DB5D3C332F13F0E2B0C699F5132023
42AE99A192DF2F8A3ED4CA0AD17A27BD93FB0D3D09F8B11EFBE0F0CF846CE587
DFFEE839A3C4490E2B44BD08F8EF43C85F8ABFB6CCA5C907BA23BE64BCD5B520
7541D34D08480F1A1CA16F2E2F8DF06A56FD8086D05B4D5C88D88BEC3ED13053
54BD30951ECF2BEE8993C4CBE39FBE83BD728E3724990B905664D94A16247EB6
DC26F3B9B5CE810F4D01E330DA29486B601F94660CFD380BE8DA45A7FD3452FC
17F10A319F416A049797CEA95428844AD4E450427A92DBFB6061F8B46F2358A3
87726A74FD74B84CEABDA95CAA798540DFBD677D643142F5804346C1264135E1
5756B43D90E252F828391DC1EA42375BB856547B82DC006747FE5D9685502E19
C6CC217C65F52CE2AA64F93425A12D3F99FA56EE1CE166251AAFDD0A84155B62
410DA5D9D10A21CA8B76263A6C3A1DCCF42389A260FB4BDF2F5BBADBD7460808
2A2F4EA38E7D327F0F4C117F34AB17610F5D7F76C202F6B857C0260490AC60C0
AC71C775FF45AFC56539492B058718662259AB0CCC303901A207C83125D327B2
76972E9073CBF0FD4C582927E6F48151E720E33CA846C5D332880DD270444677
3CDD8B4BF0A88CEF16B7D3FA7B5AC8290D3E1F8AA5065011DCD3A5CFB5ED5DAF
4CE72F439A0502C2E601831FAA6C3B62B1FECE5096ABE807EC587518366C6192
D003985BAB6E49DA96211DF7CA971E33B12E296CC34514D95C71475C1F8EB959
566A758566F0A63C89E4F8417201F0D2CDFCAFAC06766BB5ADEA1F6EB96E1EB6
DF1DD36642B5A8BA107BAEA2B7086DC2E48667F47FD3C2604EF52210F343C793
DEDEFB0A2B19553DC73BC6AFE068EECF460CF82F0336B59A0BCBC4BD0D267CA7
8E20CC5C72175E4D2BD5E973891EA202F3FEE487DDDA84B37333586F44F51C37
B4D4B4E2CAA4A0BBABB212E89337AC41BB33884756C3F6A61C954D31EAF944BB
7D1E060F2455E68BA41450067346816F54381A6A22D2290645CAC8A2249EB5AA
580EE4CC2D1F5904A012B13CF7A45EC6401123932A26CFB9C8FA52DE414F2111
A56A568E27737A8BEA90068FBB16F06817902685FD6D7004C8F85229E43A33E3
60C2771DB146D3D081B839BB0EC484A1892E79A94AF0B3C21C166DEAFC24FFCE
0AC59629CF7E9846911C6779A481C5847A1BEECE724B955D5BAC74A2FAAA971C
36B17684EA1026EF97A00F7D90E1CA6967C8355680BF3E8E00F2C6BD5ACC27ED
D40A38DF012C21D5D1364D9C5BD96BAFF6DC48E618D6DDA0D6A531728713A1AE
F3AEB8F6ABF0BD90D0C97C8E41E5AEEC9C3956C592DA728D8D848F28271176A1
3258C9D6B701B12C53F69A1682CC6489A8601D48C720E86C35DE1406274A94FF
3B8DAB54191070743D5EE83C3E9BCAEE22FBA326659048FB7D93FEA0542D5904
34404834B071E37F1D9E2FAC70E9251AA826E4A1D3745CB57288125CFE99B5A0
257F0D0E3595C2F2F772B9BA1B2FC0376B60F312DEC324B31B9925463626648D
D1F19216A346739D685FADB6B36AAEA183E79E3BB86BC0CFF4EB11855BC4D8EF
F39ABAA0D3138F5E51E6484AF6EECB7EFA2BFF7603BA3CF4C6B4C95926DF2099
D19B442957ABBCA5CBF3AADF0B441D5283638A60CBA8E0A737173CAF6B4C54C2
26A5D3E9DD5117142AF7E06F1076F65D8C84CFEAFD9568BC38E03BE625DF2203
D4C3F6805F6ED8D9A99DEF2282F6E4A1681F00B576FCE481685CA7975D4BB0FE
ED9FD05362B116B06E599C61419E9E0D1FCC21FB24FA632F67D612B16E04BAD8
31DAD181E17671D19B6D6ED0A33DC9DDEE8683E9CB42B1085FF5B9BCAE9331C3
6B2F54936C359001EA094D7E5292CA6CB301D9A63A47556C96A57C9DAD2E1759
6FD5CF257F87A1D39A135628BC81321925E500CF04101C84F32CAF15C4D2B236
90AA37D549CBF9C21A481EDCB083111F3E1B499563E06CA3ABA8F2238502884A
712216A56438D36D2813FE28044A3152F69D6B3C50DF2686C4401B988B654DA6
D7AEFF00B7C1D55163FF49981424877B554E7EE469D3AF072F1C7BDEF3375323
19FAD0FD94F86D6D7485BC1CD3352915D68285C7414FF97E755598BE7EC8F2D4
F36259BF8B6078766DB8CB14FD440331C07A4B7AF80C17A4ABB33557795C0E76
C5B39F7386A7A8C7465999F6B5A52175E0B06496102A6DB939E66D4A3E935125
C506978C9C8B03DC9E93112F63B75E4C64CF0D86C62BEAAD5EBCE78F50C8D566
5E48A5BE7E76ED21020404FA6D307996D283E750DAAA3BB7DB64305F9531FEC9
937F2FC498A47798A4C6128164F916E3BF46CE85562F2D44F801C0E79FC285EC
1BB6E19BE9B1E902D8F01E5ABE8CB47FA1E6CDA9E8450DCBF620E71793F03005
C43AD6E302591CA337D8197EA627089D71EAA4E103C8BF03E66F3D8262976A5C
51ADB5595B333A06C8EC4A42C6CD98A11CF250DD9A132955A674C60D5774E77E
0ED24E62F5A85DCB468D8C6E882D97673A70BC845767366CDE0D37A82F0498A9
3580E315F57C2C8D2492246BDD86DB936D479ECEBEBD07ADABCA84E043EF7C2E
E7F2A4AA9EF432736C278248784457BFC547B7CAFFD798D32887D078E7F78FDA
6AE3367556933433DE557922C20D8C1D4BC1F344CBE850C0640A870F02D282D9
1027980B70C1F429DE136CB026DCF0999DD7C756822E7E515F4897B802BA6674
9F93B8F10613A308C3C899E5210E581E0FE3B0C76C5F428DAF17A849E0F0E38D
CF2A3FC1254ED66883E96CE2ED484251463AD8881BEF162B0F86C4F67311D099
DC7D78D6610B0C4B7A950E3217F590D944B293875CFB29C86E0FB107E456FB1C
8269A74880E6EE27922F9EEE75BBC9EAFDE8A70BD90761AB9359A878A64E9138
E0FD1F89F1FFF83FDB4A95D61ABACA8EE7F72E226767EF519F1E94F3C05D2ADB
50B7705DA7043E617C4E9E9DBE4B0D48F5FCD8601FA561B0D9B1117596E6FFDF
4E205509795EB51AF5B88FBEF9974213F4D7E78717377C3C0F18405C3AFBC140
068F8C7817D80306E6CA0D3497E975A3072BA830F18995F89811C5C9BB8CA2F7
61A71F6D4FF2E6DEA11099F89485D2FF2376D3706B5E060A316327489EB14B00
6B662434BE69386D29B6D65F555C2991953E8925533C7D86241C4B3ECA2B90B9
18F3ECA9ABB8AE7CAD0E7D4F2681134FDF077B0A7551011244A3E174B7F53497
819667C967AED16D3EE061DC74D6673DA37D8D9291E25AF279829F8D47B6525E
5C2D52F322CC455711C0147CB76F4723BB02264B196F985A9D0245D994C854FE
52CA748C5AC92CA48A1B16C9DF2E6C382CF8541FF7E243AA7F16F534CB8E4EEB
A459A0F72CD410E0959D3CADDF1CC54C45BA2FEE00D7EEF848EC56A3BA3EAB6F
B86ACAD45190DD5A284BBB145D1E90B4351F358F3A915E56BD481074EA95D939
DAAA220E26415A953C6BCCC655BD7B5F6C2EC878776958B821282C286B6B5853
3E84AD5667F64C27712F53487314E2DC65E94F61728BA972E9B20B5D22E8ECCF
E41D291427DB50B280AC09575B8AD8AD42359D0C43A092458491A14805FE3296
BBAE9F1E1EC5BACD891352AF830A6568795AE0AD95039A3FB9DEC88842D9B594
FB7E1E15B3E9D38D3C005DBAFCBED25833E9F481AFAE1B4241683198C6733422
0636ED2AF2288BE15B5014CEE4C4E008E5D76A073658967268DD4A4D7AF7A4F9
09C38AB765831C475ABFC918E099F3112EF9B3204346620077913803C26B5BF4
20E754A3E3F00366C9852AA1CFFAB24939D4C917115CFDFFD684122CA9E5CB8B
73643F465F279331AFEB781509CD401946257A9994B419FF7F4A83A3934A46DA
6C2E1B3374C06900DA4B4CD1743531C7106D215C9F67A7E671817A5448FC6D1C
2322F1292408B6558B816E4444A8E19BA83A4DACE8C66C6ED048AC0B18B17F51
BC93D704A677CECC5A77EC8E500191FF7A64DA4CAB1CA348A35B198A55CAD67A
11D28A41208CBA0F4EF17763694941FB4E2282F97FEA50082B956F1453922B84
32A9B27AF64C856DDAC1BF9CE816B349CE7E28B0EECE3C6C420F53DD1BA44D23
9C4AE71B9046CAD64E356B6DC989A1A0F45C2285C8FD0AC3863911C317E883A4
F01FD89E7B0F2DD65CD8F84DBCAA7D2A0690FEE80BE321D3C16A174E5C2E0930
095E62EB08DFDC39E453BEB619F69BDBA11BD24EE00C95467EC3B1F65520B0F7
E85803F6208B75CE05A80E62174762F97B1EA412F6DEB0B0F625F831BF96045B
A65956D3F6C169C9A3E3456D91566F85A386DC278C8F7253779EB9D278001C91
B5E198AF63E248E07AD608D1092A5B8824A3D35CD75401D5A30D35C693B9AD26
1C3CF603FCB87651205D6CF13C34888B9653D09288C383CC499FC9F42292239C
8C617461DF853D1A231308952C079A9F56F6B37800FDB4EE6E9E12EEC4A995EB
C12418B2EF50775D3AE73820B63D750435C3E18BEF0317195D0EA9A932149A9C
B92D38666828781923C73B95C519750088EC80DA8133B32328990362C22DF448
4FE1687B6B0C5569011A24067F905307F4AE1DA23BC1693B209C374E832ABFBD
A7913523892CF3C8706F2B45C0D0E17A30A5F0452719211A5405629408224D07
0207499DF2F43E7D52E442EE5E43A3598B2B5C7AC6112CF380D176DD6BC6658B
B55D8F6E3B04EB6A9995FA5B117AE9947A99993FDB87B335F9852EF5A29E9351
BFB54BA9803D25B2DF979A10AB0CEEB93622F2BDE4952A11D1CA173A0D5E40DE
65249B58894704A907688D2DEF7EE41BFC476EDA11F4D0E5C8EB441BA3E1C859
C928C7C51607BE468DE120CF322AC35AA2CB73748EC98C8EEB8975DEDEE759A2
BBCA40C811B9D857CF8E510423ABE85F241E3F8F815FCE7C8E07C2A4258E17D6
58227B69B3C02C1A29F4281D565836EAE57F680490FEA4A50B136AA2743D7D4F
B15959B8126D1BA17FCDD9ECF22A81BA8C10E259D3AEEF057F94A252F2CB9B93
E2BD4E2F2E3D990CD61DA8C60D4CCAE95CC9365F80AEB810917397E380ABD639
F3A3D554F1F2D319213540B2B24EB14613C1511C1401430926AC9761810277C6
A1B9D7695EFFFCC82E8D1F34DD6238AFF3C64D29B8D53C748561015B69882D5E
E1176D9FC173C6DCBF776CB6B30E8330D6E06AA773A51FD274161AA2CB2DF54D
C2E6BA98601F8B7981ADA3785651D437874E289DB680DA5412A46E80281268BB
00794E8895C0BCD04CBCF9001CBA203D8CD893E49499C81EBE1F42568998EF60
DB82709356E09F8FB62F66B2D49B4F05FB276979B06367F43A6E1CF569B79B6E
D761358EFDF43CA0BBA506603279BFA9154A7615D35FB2D63518E33F23600227
00959A62CACF58CB5AAFC92F9EA698C1A77EDC8C3057EEF73D35022C0B067118
5C907BD20C42286CFB9DD9A35E8C7CF5D5ECD17BF3F40E6EE54748C29B3FB4B1
5DC96ED5FAF944C3D3FE030BDF8774707E9EFEFAE12B8FA551097CFAEC387090
97D2C19BF0F2F6CD3E4A4EAF199E4098111A971A519C13D55B12F687597341C4
9577B879B8F83C812CD5897F861FD3B2691B20EC38E6DEB97D001F01AC43A62D
E7FC6144F1BED639D4F8EA013FFE62A4AABEF383FCC14D7BEB946D5F6516AEE5
A6356A6E21E380E3263610DD41D02659FBEA780439372DBC5913D38A388722D5
2B95B5C41E408E3C437E0FC3569892DFC159913BD860B1E406F4F4168DFFB6E9
F420CAA8448523E4FB61522B51536AD69F860DA400812AD8406F63B2CED073C5
F6916F9AF0C5F519C9B8A964613BBA2AA0C064D2781D90569A2444285CD25977
A490014896A5BBDE47CD12B90D1F087C1006A85A90CBD9531E26E0F16FA3C504
6B1C33926C6E18C9A8F93FD642C20BC0611B8998CD7A760772A4ED203E44FAEC
3E6E16AF392A6D8CB4273468BD6CF86AEF004C6542C01C2F45AEAD3664A92E47
600E90E6AC7243F12C8C52188E0DB5CA45552F8867037B2180897707BFB89DF8
AF56B913D069E412674347F5269F25522F64B5455398B32F209ADBC81A3F255D
199A354F4D28DC5CD51FC13E5F73E64910D1C29D15ACEDC458049F7B63805979
3E9E55431072462370676C2560F4D7BFDAF2A515163309E7090D828A45ED4B9B
C742CB47DFC2D5B30A8AD85891DEFCEF382799F62A9A8FF8262E8DE16E9245C6
1CF55FC93B2A6ECD6224F253AE76ED68FCCB2D803879CDCB8595AAECB93C7FFF
2F16174606AB2770299A4EAE74104A6FB81CEB69D06DA03FAE476A30AC752C65
104F6D0CE1E5054F824567F8867AAB019656BAAEBAED95249885D4BA04EA216F
2B7BC1AF909B70025C9E4A0D68DE0EC5666A477D5A6FCC31CA8CC8F9A762BDF6
6758A2E43E448B94F21FC3FB560CAE992CC60FE86210F1D7FF4A5199B53BEDC2
B0D14E85D92DFE733657BA7C2104003CE178CCD6AE178431A5217D77295DE5EA
762F84881C2C25CFF2F35DF82BFC717F43E4672572B9AF6850E95A9D9EA5D917
4E539DC91D0A41EBD0CC6D71A2B1A525E9D95BCFF42D296C718CCF263FC9E4D4
B92D01F435EB55DE55C2996DBC50E8BB3EF2524E7B153B3969AAF8212DF3F642
407CA1821D43F50B26E5E0D2A76809DC3775CECFF0AE5E5C3FBA42D6FC8E6A63
DE565844A73387D0E914A8193C18E7F401C44816311719E11D1FCC42BD6A8125
9C4C1043A3869292E5FDC173B68826B158E69988DD862CFDC0F7B123089A4524
CC7CB3DA0D3959EA1C4A0093C06C7B364E6040B5DD0C1D129F8BC0062B410518
3F815190282E541042C46B3943AB8C448CF5E91F28B750E209AFD82F343735FF
474B0852C7FD97BBB39F1FDA0BC109AB896DE5D13E85F2A7BCFAE2C8BC6D9A96
0E7416A6BD1DFB29EC4537C5E3B553E8D513719B4467FF2EBB5C7489358365F8
7C4E90371976C5FAE1625D62879E4B5A7F10378A9E0F859058AB6414905BF4E9
5500D0B80890B003769178A39F908BF3B1FA3743AB1774489E6AC37064B5113F
9330AB27C913C7BC985CDE0F17C218947A9729FC99474D480D6E6DA17D2763E1
E130164942DA5F704DE35D983BBBAC2C133DE3866CB703A5B760715238B61A4A
3DA50A56A4F6F8F7A8AFA937F21377AD5F114991E6FE5E557E23FFA554DBE5DA
6D26A37041D7DCCC361C5EC809103DD58987EE0175F15D71D9961F56E0AA23D9
62D4C2365A76D5681FC39BACB8A239C3EB2AD884D98A99D9750A5BDEF2902169
9BF74830F78F78A5E454F069A0EEEDDA3ED3CDB225973AD5350DB3B7BF2C481D
0232093C42697AA435B9CC3CB07BFAA14A72CBFD23D10FE57F7666DC78AB35AB
252E997A735E96485E6D35B8E1B10587AE6DA5D759909821BB1FAA64201B5D90
9236DD32A8FDDAB24D8508BF31062B17EF20E492C02A138F54267C6A09E9D28B
9FC63F2975CD9BB71FA698571B17D060DE15D31A539A987993600AAC662E767D
37B337657EF1657D20899EE8C2CD56668F756DC5B9CF1C87BB9F6862E8C9E650
DB86749EE832B7C325B0E0DC02BBBC878DD57BE8A273A04C8F9210E9C4ECE00B
D8D482DEF3BD93D69BC5A89D57886D7F7BAD9B412C8EA5DFD7879D9250C9A906
E6D5E1479BE21DB2B4B7C8CB17294D9594C76210F8DFAF60364F771F2A3B57E7
DB3DE56B1645F85DABBEAE622CEB8D0E50BA78E14E93ADE95191F872EBC9E0D7
C76E8BA15289E9F430B83086D6AED4460D71BFB257752C5AEE42439A74BAAD13
10EA730FED64195A91C18CC866379DE46AB436DD00BF11EBD9FB9C5A32E9E100
9D6DE2FADC06F3CF985EC99DE05A3217938C17FCC2A7EF4A404D94DFCE0A72B8
2005D2837918E4FE0D10528AE392FD75F5D015010A78C2EB1FB311A759FE260C
1E6EACFA52E8B820C806E97A6CCFCA7707297BF2B08A8087CC9E5EF35656D01E
CFE263CB7C46157C98DDECA32458C31BC5AAD99DE13BF6AC749CA4B0749DCD4A
C075C3F1DA0CEA89D13B6009EB0506F5BD50810E23D6351C7E6288B2095B11F4
72CB4F3E1D8B85A44341F3ABFCCE8509A068CAF3234F0817CF849F4CF9CA96BB
112CF190DDE84656A4FEED7F4D958B1288B6AE754933488452F2D253B87A87C0
7B567DA70D25CD23CFDC4B0343D48E428C5E1888B32E0B820A95DE4DC418139B
83F7E13FF8928C4AA20F6198921EBBF6A5C4C133401EA1F83312E0CBB7F34D36
1C8F2FA6586429159B580F3FCE224C210AD2AA6E54311C38BB32BB1E8E478D28
13FD23B0E1EC12DF5D127405B07DC81522EC84F261D90FFD5D56296DD9A4215A
07FDDCA0528FD6D2338146CFA3EA0FB609971C26FFB4F1F8F1850FFDFE8EECB7
6E41706C2E8B5680E67E0CB7B9F6406285D7C05FDEBE556F5C19C89AB4835FAB
0C9F2051C82B75D8E0E2385270883E8CF1FE9F5CD13B97A8784E03A0816ADE7B
F495FA39FD4598A59AEEE2D5BB9B10B58BE90DE3CC9E7ADB6A6C5F1E8D4750D9
F6C92EBFC774E82C81D58DD157C1E718782557056F82DEF5E5DE6C520DFB49F8
C9AAC43057DEF5C46467841E1A749084C0602F13B2F4140A0A7DE0827B676E38
AC8D43CDB3A383FE182EE89A49C28C2D635A2ABA0B2E0195B04FF3E6F6542C4F
B22AB24591C7FD57313DC2964EBF17A57BC34C5DE9EE3F4E9171D1B3BDE7F939
827903E7A91D50C7AF45EDC9944CF60D1A9ACBF5AB44A3D06B8BDA788DFA28D2
A327DFF5132A121A9497CF36780916C17E86D2B97BBBFE571A3C0D5DE461ACAD
7D02D559CB82CE0E04016C3AE50698C63E37AF1854042ED8855F3D5E9ACFBF5A
658832D462D39FD58A716C4A30853D90BE54207C2842045E4CB16FC9F2FC1C39
26680D97565FE4D1E216A9C768A454647DB379C0ACD74EECB32949EEC57EC3D3
F5B690C7C4181757961EE289EAC627EDADB51EC95DF8E053F2DBB854C4BF36A4
B5A95184CDDA4958F9C9892C91CD6C0B452822CBE54C38A742EC154A2956C5F3
ED914CE6A93F03186A29C6812845E00EEC219A156C3AC00500F213C60FB5D7F0
3C8870B4CBB1F5DE82900C310DE9E0ABDCABDD5F29687B802A1095CC206A28DD
1362195C4C8F1870B2967562453D8253CAFE8E0BDCF4FD67398ECF1C1DF9A1CA
D2BC6E812806D30B4821F1AE91968903958FC500698138FFBB16C5A1E0F8F83B
3B0D42584B042832581BBEFDF631901F58C9A2EE276074B9F8F4E98F0751DEB0
1F4B227D8DA2324F0F22818D285C001BB62C927BCE52E8030721E8CC5D32447A
FFC3EFD3404FB795EC4D0857AA5D6620C95021DF41F17FA4D653D3FE43DEBEC8
EFE496DB800C41A1665CA201D2CDFD30BF3CABEDCFE070A7CB444D00EFCB2D0C
BFEBBAA71A04CD79159ADCE691C024C1907BC2C6109849AC82DB7E273ACC1102
35BF13206A3DA1E7D16EA2ADDE6F26A46CBAD656899D01B503CDDCEEC86E1E52
F71F1E219545FA3A158EB85472FDE51BCDE1D62E5A66DEB5AE7DFBB73FD1A003
9F86E8489003F84951D8793BA8203FDDB7138B0C1611C7E62375F2A114F7BFAC
E275FC7D25739B770949DEAD0D931EE3307CEE53B45A41F2229556DDE28A7EE4
494BBF68D0D3D8CD2745BC613EA097E31DC53897BDC714BF916680468C280DA0
1D93E639C4E7A48BFD87A911D1923206DD00DE586D9669CDD67A96290214A4DF
5EE2E6070AC33C99AB52F6555FBE24D4CA85060DDB7CC1A375EE3A32D56F5CC5
3A521221DEA77D099F6BF14D0DC60F2A50BB7F5D01B9D57754D643A8EED8A4D2
6CAC14916C11B1FCA1C171B7B183EDF89D009CF87260A9AEBAF74FF120E81AF1
3B3BAB884BB606362855E40091FADE184AF8C02A0F599F8E772987948640A99C
50D3B5331588A94DC48CEF2CD5A25452AB8906A2180FACD7F4D0F53DB8232C1F
8CF6627BC3064CE5E15F8F03FCC71DCA934874690074F827B27388AD2FCE9B0A
A5DD43D946F1B01204A82348B1785CE0D21AFF4C442B3DC528D1CA4CA5C40FC9
2AC4BB22751EDFBB3E8B729099023966DE70AB169B30BF30074B701B39665F4B
F4113C10DEF5DDD4EFF63ABB930D45973AEF0CFA7DD1FF2737FCF2438217BA51
21CC668458620DB3D381D567701E32CF1FF91880A5CF302500D3F3BED8FAE69F
E16FA1A50786DCA6CCF6E6E85AB81D0C0A5F74D5CCCC1FF2E6B9C92C0EB88D89
EC803A2BB7B543D2D3C5BD832406A8BC38C5777CAD9EF923002CEFA1CB9EDE40
AB003C822420A9A4C328FB0AC78C389CE68CBF1557B048F8C9E46F213B7898E2
D924474ACC5591E9EAAE5263EAD22035D15C1C27DD7F6E001C80A5CF302500D3
F3428D883D166829B22390A6EC8AEB703BC7366ABEDC1825750DBF07753E280C
9A412B653A993EF7181B20F5346703D963A36E626C51D9979237BC48F21BA099
9B0AF213E8EDE5B5186993DB3C6FE5E2FD3A6FA8BB167391E150EA2374678130
3D979AB8F992C5711405110541BD49C0C4371A949FB7671F3DCB141F5395AD9C
B286C8B6C0724C85467A94555961414D80FDA088CEA3BCD88B742089786FF29C
46F0D9DE2A36056C5EB91055B4C390D8A62ADBBCD93870E1C76993260A62D492
29D35AD190813DDCE3507B319A9439E9A3DF8545E9D27984E4DF70E580BA772D
DFF1ADB7A896D7A292937BD5351620D619856345A9C48680A59B6F6E4940DFA3
D1002523E04BE24E0A032DBBA14B09F4FEF9ED2417593C51061309D2F9A4742D
CB095793745C2DC8604285777D95E7AB45D52EF9E8E90527EDF42B2BB7617049
28BCC368D6EBB4AF6AE2A5B688CAC6492FBA2577343D09510A672F8299D5273E
ECC2ACFB96356E444EA9DA277A0ABCDD49D9D22B59AC014D4FB55480AE49AB06
0F5A7A487278D7755C2F7184AFE7B87A58BA0BB2858812FDE473512F04D1A86E
875E4B2225EED4F81FE8E4600E566AD54E754C8DD8EA2571C9B5EFD240805D78
448DF7E49A11B2F211A64EB78A90B0EEB0CF6A3F72529D338E22402AC0F94C9B
0F02EE7C3E581CFFB3EC1045EF37D57EDDD679E342A7D47FAFE086F679024A94
C243562A1D24AD69B432CDBEF7EAC2D6E2FAF9287268BF1C0FB911F7C9417891
4161BE5B16E0E9DBE671311648C07460ECCF0CBBBC526C84F1988ED744BEE85F
2CE3636722B3367C1932A110D4B181B63F09F7197EEF370E00450173B754650E
85A516EBB4A087723F6ED414CBB3052B95631EDAD28E373B84B11E02B3DE668A
C382B5376532FBA52AD99607B4330E3709FCD6755B326206EE1CFBE1A49FFF41
8A0DF2A6DADCFC7BA1D09A8BAC30B75CFFBDA42516101A0A492961BCB7BB2F36
2802447C9C8FB7CB4BB00553153979CE39DA5ECDD3106B9DC33A278BF545697B
12A4B6338B46B61CA06AF05E2540E9AA83F5C4979442F077A3443B9336946C59
7BE7B6A46340010DBFCC4D015A5BF4A0E9FEA9B2242B1641C2D76B6D329ABCAD
AF9C1BAFB6DDDE7441158F812C575C2A11D2140C48A08A24AF3216C6D366EEB2
1F105DB5457EFCD998770A0D22B1CA72EB04FE1FCCCA6BC89C2B640350DA6418
82E8CF028D9B532D70ED7DEEBE820C02ED2F967DA29AEA44A0C27A817D4A0BC2
5355F5CFD0C1D7A2503DC74A13C24B94E5E8ABC87C9CCC20ABDE11FB9C157BA3
5862BC4E1B5025AAD9A9AF93A4B40C506C136E5A5F56AEA9C6C4D28960B4F0D8
823A21D4ECA36B55B270E20437A18E90172263A01BFCA7DF54973E9F237FD4F5
09708D4C043017B3ED9677D48B9126DDAF9B52DB3F3E766420B22AB9AA334582
EC7BB372BC89FD256DF863D636D256FEAE0268BBFB8E003AC6AA3C93B843D8CD
8A652A665EB31D6B75D752E098CCD4CAFDAC1250C88230C1ABA34B4408C32592
BAB2B24D4B520EDF15AFFCA053668051E605E96825738C4E80063634A6C3F19D
A92D2CBB229D225F1D15AD5AF11B0BEA0E6EED9D20E96364B1D0C5DB3674314A
F80AE4C5BC4AD8AD0BAFCF511263B3A79824A37390769F2EDD524D588E29EA90
53C5F3EFB0EA307483F841C23B766D187FA2B2C2646D3F2500142328D8D3B401
36F3CF6DB797ABA8B7FFAD8D5DB44108662E33BD80F37982E9728797CF853229
BEE3DFB670B5C4CFA70C155B0BAF00D0B10EB993F28A8B4058BC14A458F48410
D02E00C6BDE80B6C65A5F1B29B006714BB0E3CDFCF33BE4ED6E67F88072BE6D5
532586B328B60163D42E603DF5ABC1E14CC2FF875911D7F9DCF56786FCEEACDB
83FB1ED44FA48632A7FA88FA8B82A318E262231F0B515EB96D8871D4539B635B
544499D40AA6D343664B19774783F392B1C54EEA322DE7913C69605359F63001
186121ED29059E1F7C8D6163DD185B9F341733DD7D909095F94F916FB3AEB576
250373D8383DF96225FEFDC9FAD48952E043C3ED3A9FA6483A5FD23A4327D125
07EAC72A7668ADC0926437B73BCD2097A2385344CE80EE7389CAF1DABBA5FC3B
EE108988BE87E309577263E7B3061BB6599DDE34F21A2D45C0D27D21F892B9AE
92E8480F5B8A2AB1B87CA97BB6A37EEBE2BAD7DDD63A967148637DB317EA3223
660C5C30CE4E498AFDFEE909382EF0E686A3BEBF3DDB9987F0D2FE43DEBEC8EF
E49627213BA42C597D0FE53AB94ADEECE7E5FC166ECC5C25B81723F35B6E2C37
6C48E136F5D7E61A400BDCD15EADBEDE3875523CDFFF0F3A68672EDBECF582DD
36C1D291664D4D6F0EEF2D6CB3B68887424DB74C3D937C7717AA7C57F5EDC30C
905936C3C383C684B8EDAE9EBFE83A730A4642CE4BBC1B1E4694C8E5FFF579E8
59659D4BB03EBD4363432255E37E853F676F484234975C80FB579057E0A1CF23
2A5523BEE0337462EA954E70561106AD5D3C8E8C42BDC2E33ABEAC42E836CE5E
D6664856D62E28396E779EEB163C27E5DF58A7E4CA8E1A2AAD7950B33B48D410
8B1C37A6B5B03B80B88F9CEA464CCFE3B05FE61A64BF5A46BE5CFE72C6D73966
499C3FC25C4A1A506DE8457D18C8EABDEF7E850602B6815EBCF3E19A3AD3094F
5C09CE851ADFBF1CF95ECE64E3EAF3F47EA8666A75B1C69B05E65F9F132635E8
35D2D74CBBB259F1F07DC7F74A0D2638F3B344C69264CCFC2E9F45921E62AEB1
3D93E84426F9A95B551ED33D19A1FBA979FF7BAB06B1AB21AC0511EF970AD8C1
A4FECEAFBAC6248D11E274514707FC58358563B707A4DC91D1C8053337E4AAC9
63E80F33C7280E827113C694C67F6A07F238E7B4D72CD45316EA9E34A9EA03A6
C950682BD7E72A81DC4C26D7220B9D12A4FB00F763274628831334E1E727FEEA
C67BBA63800A37B6EDB5E58E81BCA267212F3D633FB85B6BCA13481DF1722D50
ED1F69EC3BB564F7F7E2715A340532CB7F186ABF14A12B8ABAE7616DEB691797
4632A5D70CF02BD89585D1EBFBC9AA8E0F9DB0894A695E16E533E7142ED43AF5
EE50405693B45BC96AF80597F94E6854A4B5D40247DC7BFDA8939AA82604F3C1
2F8997F1A405B55AE5873D64C726C983B33756ACF3FE3AD85C6A571D4F2E77B0
EAC04469D32C787EEC5494B7CE670CFE23D3B7E2051DF0328DB42C4E19F7190D
D2C1658D75329244B43A5A5A2297F5A454645FAF868438E075EBD8AE3E524CFC
BD4AAA271DDEC0F7D5FD905C59F0E7BC1EE0E3D6AFE825065A81C9009775DA55
FC896D091C0A6701288082676764F90484747EB6E236A366D8046477D04EBE52
9258B39BD9EF06ECBCD35F10C42EA9DAF365763EC4B00760E8C9E650DB86749E
E832B7C325B0E0DC02BBBC852CB70F8596FCDCD85BDAB9EDEE5A57CEEDF7D8FF
C0B38D10CA562D63CFA12F8768CB3ADDCA5046DBF783C78433DBDB3196501F21
2C04DDCF1402A3632DE343A241A155BA9B632472423E208FA4BBFB03D9BF9534
9E3B7784FCB38F92C520B2826B880D6A47AAACCA3BBA4F5B3149770E2F44814D
A90F05AF8195CD5239ECC86AA143DA36873C2B94AC24F5B336209C2254840773
8EE40C97E7A79C32C54B909B92A16E8AE2275E83777297529C5ED2573FDF8E50
F6254E6A4D3B38558C6287C81A6FCAD90C568435172497D9B7C2B7126F601786
EC4B09DE2F5F3077293577BCCDE2E2B35C58847F36B887EED1D629B477018D57
0A75335AA715FF9A90DEC4F7AE2C989FD7FD22256647FE1D08A55443C8B84C6F
69E7C1C3054AA05599F131A1B74B64EAD063B3CD1F01A0271DA668DC1F7F6252
276D48633DCDEB7FFB91781AE7FAE5E212F90ECE76BFF07F8AF7195A12A17DB9
356B17120877C33D81AD55727F7D603DD37541E34751E251FF083F9F446B590A
71E50901E483119FF0E94E3A0CC8BAA623B18B181C72BACF47C3828817A2B167
5DC3C273C7777DF875D59847C8873DF8D15F751098B898B82DBDA0271C331247
360B7F2CEE58AD9CEF1B325F64B387A310B15DA4EA154E2A1ADE60DA0AA5FD94
C653AC881AB5FA0B0F1BB457048ED47350394231FADC680C175BF6F63CD23E7B
0D632DDA51676BD9803383807FEB4B3150F5488A78B20B5AE5DADC353EF52CCC
CE5A99EDC232F01C9EA88BB43FEEE0F45A6CEC462468AD09E6EBBCD1EB55B342
D95E297EBA5400A1B90902EFE6792F207136E1E16B417F65410924932C527FEC
90A0764E9027D61CE5938B121AEC74EFC86063DE74AB46A38EF4A83D2E4D14BB
A67CD80EB9F0E126F26BB682FE26B34CE15E0AD3762D59AFBFE406CD8AE0F36B
68AA8C5FD2E0E871DBD2628AEC086C01E0F79EBA25BBCAA1C4F19C3E5DEB8381
1355CB98A6572B4891C970A04C42CF7216E5DB8CBE124D00B4AF82098EFB696C
84881BBECF840080C51CA6FD9C78AC2A3EC49766C84CF5342B479A465137BD82
0832EE94D79A8BAC94C47884342BE33C90C19B449645E7B5C8C949F05AEAF3E6
77B8717DB0EE7B2FE3B5533061616F0975B16FBC9AB8C759187CF9112E3619F9
ACCAD376725BFF2765BD2ECBE0AC3DBD4F5A7BDBDA43B38A384C2DBF592B0BFB
C5A7C97A82344F676958CBE764ECABE84ABED150C7199DF9FBAEAAC3B3A5CC1C
9744253567A7830362372E5B51D4FA336D2EDB9B6D48AFD2AFC82E953903FCA1
0972E9569693E3E2CDCD508876E200F3B1C6FC0878C367E2D1A91ED4903EE143
F0FF84E3670B8D1D046FFC2E87ABA2025AAD3ED6BA7F318D51CE670573B51F64
669226117C5C54299607C439FAA1E16B9860765031E331E8941F1AEB02233D61
F76028294FCFA010ADBA06F53A700F96730C60B4F25EA15E67C07A4AA96B7685
20CDBAA56C92DE69F21BE3D32AAAC0D538048C9909BC78A51D458AA25863D89A
01934A2C4A85467A94555961414D80FDA088CEA3BCD88B7420884830F5018DA0
5556BFF71ECC844B2B718598F0825CDC9E9C5F4640F348449C01E851C4736321
D6DFCE2013392C8F091EA43D081F81DDE88B2D64C4FE2A7E42C5EE683E566768
BA33610DA9AFCC96BB51D59C946E05361A8A0B618A3A70C039463C85D6D80D83
8480E38A410D03B780FD7DE6961B36939216F3DE59538AE2C6E1BD11ED49FBB3
C01B2F8F2315A9E94E8D31BE399C3C4BE8113B8D36C5D825BEEAC8A0F540325A
30FAC9E6207AF1044E917186B1CA1D9AA78481B40AD0AB672FEE3F3B304069E7
ED21AC8929DED7BAC44282A53E19A20FC4E1D0349033D576A9493D6F560D2688
EC215913996F16584BB29CEA625936720343E119762F2F744EBDAEE29C212731
C37A3C2AE2D66A455B580A4BBE440839A54B385C9E4571C466AF19F93B8A7588
25ED631CC7897D81D8DB5E1BDC5FA54728FF2D271D39F5EFABE1C78064A1915A
AA4E1B5A5B8FFE4DB72B984DFC3BEC0A5752A5DCF73E7D2B75228E7017609466
C9CE3D5F6EB1C5D7524C125C86A63F7AF293CCBBDF796D0CFE51760C4C5E1684
D5EAB3437D479FC454F60B141522AEFA4CFC0784FB2B61772130B9931E01A809
CAD734A287BC52FA90B551817128AC48A4BC9A1CF9259D7422C2C2489D209D78
E0A2FD3FA71C28EDFC1579B03397BB4AF64F4D308793FC1B34FBF5A82D9A43BF
14DE0E70E803BDFD7E3147029349AACBCFDAAAE5494EAC3BD5021A3E7FB37914
E7F6865A5857BD7887CB412AF935BE17E41995EEF85AB528E8CDC6CCE0FF09EE
353CB37FBE13EA472FC5FA45C00263D5D734481D36B00B8B2EA89D0C478B7D82
C25D33938D4CA07A22105BE8387BA508F0387A7CD0F3B557EC9431293569C970
D7A4CC09846C0E1D0390A42E48963285D7F8D7A2DF7F2079D376DB235C3253BA
2E962A43BBBCD8502CF2826B8F7108C9878BB0C7911FB5AD4B3B6F0BB1667E27
1BC19FDB879E1A995309D0D3A8374614EA9DF794371055BF8665C37422DE08E1
09D92F01DA387FF6E9BE216CB5DEFBBBE0933FFBDDFAF2F5A2A8DB3A4AC324B3
3A782B25CE35EF7519CD0C7423451AC6123F79FA230D3FC7B36542237EE2121C
14F1AB2A046320F41EF62C6316C5ED2BD67FA5F1E06B66BCABC106BC7E581F38
2C225D461C3A715FA0F8259DE2A8670543DC0F4FE50719E10D2EC8337A906AF7
EFD79FAB89F6C86C40D9112412EB27B9A767A39C235FDF3510AE79845D3E857B
C2D4429DE8F1813E134E7E5550401936BE37AA187EF25EE286969A869937752B
45371A3602CB6432962AEEB9AC73B48540BC78CD3FEC802D61128023A7373BE4
9220314BC3251EB76E35C139FA047D48013DA0F318829D461CC7AC0015FB7D31
B9ADA43BECC48568E36D99ECBD3C477B2AD4C73BDB7FB1FB7D332DB4097FEFE4
EBA688DDB217504C86CEDB55EF5F1ABF225F6DAB88C703AFCB739667EE5ABEC2
811E9526E2615BF069F180450E92C62C7DF1424F442A32394219566FE2A6DFE5
9F19D1AE56F16AEA325ED012442B5B268CDFAE2269A15792744BC84E03D6F2E5
072B4575D49280A7092EABB83015B30CEE71EEF0ABF520B7C6DAFB52454F2C82
07C8D933CDDB280F0562E874CACE95BB8A130E7DF426937150C516464844F9A6
C3A8ECE11C4A4D42A98228875A8ACE66CF9865C06F84A291CBEA070F8C35752E
37B8B23F1A266F8A5AB1DF9DDB8B928465DA40F229464534BB22DDC9436B4E1E
2A353527CAAD2F2D669FAC9D33D42FB9E601CFC5A79F19F20949E2B6D6B3C52C
E8C3EF09E7512E183B7DC01BC0D7AEF5483954EED873B148ECD320ED49F1F25F
DED5170B4139A0E4868DF4275357BA25B17F5E340B0C13525A3FBF9C46C5759A
3BD3D38E21709DA7E42800257B277561AE76FBC723CA9BB702A28C30255E71E7
B103EF3949641916E38C0DEDD370FBB2D73DF77102766F21D2550F05E4DA3F30
2D701E33E56D41836BA77BB869D22C0928DBF3FBFE8ED0A9128143685306D4F1
33FB3F5BD7E998315546D97DA1C018DDB5E6BC7CF306AF5E4A7809DE678F1DF8
95DAE1FC77895746E4222EA331DB3BFA1AF853AA3A537C006ED4AACD2DB2A7D1
9B884AE9A28C87C98220AAFC9BC5B4E8E336AC7CE1DA3C50B3401B9A6137CD4E
87731A0F8B24F6987EB905650DADA2FF3DC265A5B7F41D9155ABA2B56F195A43
B7A6E6143697A7A88E317DA0C9DF7CAF1FFBC5DE2429EC09367999A4805FC204
6A56016B91F757AEEF9261224882079ABFDA1218DD625B4814006D53FCF8887B
ABF675CE04A2D9A657451E1ED81ECC6CEAA06FED505EC6B32F1DE73CB6E80088
8F2AF1687559A1ADAD12CCC5827E48E19DDB47766A04985C4C16CE4F808A97F6
CC8F47EC589A2D83B0EE3D42A9AB550D4751B7DD053C1CCD439387C3724105AD
18505EC20BBEA11B7521FA72FB1DCD7C2284782710EB6F51169661CB12975A26
F21FDE926D5F5B85307019D7E2283F1FC9E086F0F5AC417D6A991CBCF26ABAC7
7A6ACDE88AF09C8E66A6F293F1CE1A2947180112AC0BD07CD80CE94E08D465AC
EB82F24F3418F9B6CC9A19CF98AB0EFD29CD34E1075D05702AECF0558F73A8E2
BB0FAE5CDEBD2515AF056E67B6B54266AE61E7A4F8AE9994B6EBA83E81AE6E5B
595E1E427C9D528E4EC289123064F78E0BEA9DF1BD97F751862A9C4DCB418DF3
783F0BE805155F7CFFE2100163B8376FD1932E0A1F58053172E57CF5EDD65487
938B15A9B4D9ABDEE7BAF9BEC9A50F0E343B01FA4905A8E9A53153E122E9EC7C
9CA5637266F9C79C11E3AC3E9AECE787983834951F5E9A563C923DEE75F1CE44
73166CCEA01703F6B73022A69EC0E5D1937A5056FEB87F78CF3303DFB559654D
6768D9BC7368B9E9D8E5E29CA449DF3FC5862A9E13E0A60A4A2DF80E1F048C27
F7000A7EBD2E426CC55491BF34B31B63A96859B69E5D8664F09D45C7876D378D
B18B9B53B53D03CAFE3575629DA249484A58E222AF05B90F9342021E9FB67217
BAC1BD822C22494EFCEAB8E131295E75F88F94A52D8D50ABAFAA52EC5F28D5E2
D5255B43DEE5E76D8416F8A384830B6FFD7F21F95A5CF6C7B6D0AA249E76163A
40420B3DBFBB0FF1F8BDD6E312B9BD13B95F4F1548632A3BDEC0AB61E4D2F0C7
B9F790C667C6269611B56B60F06AD8850D009A8B3868F41F89B25BA3A9128007
918FDE62FF5C8A920F444BB1470165D21819D806AC146D2907F0A3DC00615C8E
79E7BE504A3732374052C8C3B0FF5CC207CF142384460859C0F9151CB526242E
63DAED798F43D7F3D314DBF940D40A77CB76CF28F0E71F653FF6E6E9B92AC43F
CD3F11FD6384C525229DC67AC9A87BAD2EFAE688FDECB11EF982B06698425077
DF5F7CCED8B7D301FF8617BD66AADF9DCCC47810F353DC9563D59060CDBD4919
26F188D6E14B7C1A63C0B0EAA9FF70CE25165CA3D9E3264435F94689834CF54A
73043224654F4F0B391CA938B41BC29224630FAF803E198C85CBC7C102A66E82
A3F82DB4D300890AF6506DCF9E4BFA8874A480052B30329F6DF4A82720BEFDE3
E44FBB3F36694DA32E330AC8C7D19650EDA909D3A8673B3AAA2B3C7C8F38D84A
9816B86E9EE272DF9530A35F615ECA553890E8F1FEB559E9C917C05D349123EA
4DA1C938FD235410359E28104439027B93ABF76205B29D3D967927180F447B09
CC18B2525AB65EC2C63074FF725168D115137ECDAB1EEB083711F647F757C980
6056811466D59087B93D6B71594046B3B60A7D5789D6B99FC14764428A251F0A
54ED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (main.dvi)
@start /Fa 175[88 12[73 73 73 73 14[73 73 14[66 66 5[62
26[{enclmmathex ReEncodeFont}10 83.022 /LMMathExtension10-Regular
rf /Fb 142[32 5[37 29 24 20[41 24[20 59[{enclmmathit ReEncodeFont}6
66.4176 /LMMathItalic8-Regular rf /Fc 3[51 5[45 17[45
105[40 48 48 66 48 51 35 36 36 1[51 45 51 76 25 48 1[25
51 45 1[40 51 40 51 45 6[56 9[62 4[71 3[71 59 62 69 1[64
68 6[25 45 45 45 45 45 45 45 45 45 45 1[25 30 25 2[35
35 40[{enclmec ReEncodeFont}51 90.9091 /LMRoman10-Regular
rf /Fd 155[58 1[58 31[74 66[{enclmrm ReEncodeFont}3 90.9091
/LMRoman10-Bold rf /Fe 205[61 46[45 2[71{enclmmathsy ReEncodeFont}3
90.9091 /LMMathSymbols10-Regular rf /Ff 162[25 1[25 29[71
1[25 1[45 45 45 45 45 45 45 45 45 45 4[71 1[35 35 6[25
33[{enclmrm ReEncodeFont}18 90.9091 /LMRoman10-Regular
rf /Fg 162[20 1[20 29[55 3[35 1[35 2[35 35 35 35 35 4[55
1[27 27 40[{enclmrm ReEncodeFont}13 66.4176 /LMRoman8-Regular
rf /Fh 207[19 44[35 2[55{enclmmathsy ReEncodeFont}3 66.4176
/LMMathSymbols8-Regular rf /Fi 139[33 17[39 48 16[58
7[76 5[69 4[45 1[25 25 36[53 21[{enclmmathit ReEncodeFont}10
90.9091 /LMMathItalic10-Regular rf /Fj 156[49 56 52 55[43
41[{enclmec ReEncodeFont}4 99.6264 /LMSans10-Bold rf
/Fk 133[57 60 60 1[60 67 48 50 45 1[67 66 67 104 31 2[31
1[66 40 61 67 1[67 63 13[73 2[84 4[91 1[40 95 5[88 88
13[66 66 66 3[44 45[{enclmec ReEncodeFont}31 119.552
/LMSans10-Bold rf /Fl 134[62 3[65 46 46 2[65 59 65 98
33 2[33 65 59 1[52 1[52 65 59 10[88 2[65 5[107 73 91
4[76 2[85 83 9[59 59 59 59 59 59 59 59 59 1[33 39 33
44[{enclmec ReEncodeFont}36 119.552 /LMRoman12-Regular
rf /Fm 138[97 6[97 6[95 1[88 2[97 11[126 132 11[57 1[126
2[137 17[95 4[63 45[{enclmec ReEncodeFont}12 172.188
/LMSans10-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1122 582
a Fm(GD)-5 b(V)63 b(I)5 b(I)63 b(-)g(Uebung)e(2)p 0 TeXcolorgray
1180 868 a Fl(F)-10 b(abian)38 b(Langguth)f(-)i(1415571)1222
1018 y(Sebastian)e(K)m(o)s(c)m(h)h(-)h(1388035)1085 1167
y(FB20)f(M.Sc.)52 b(Visual)37 b(Computing)1537 1393 y(Ma)m(y)i(26,)e
(2011)p 0 TeXcolorgray 144 1824 a Fk(A)l(ufgab)t(e)44
b(1)f(Bezier-Kurven)g(und)h(Hermite-Interp)t(olation)p
0 TeXcolorgray 0 TeXcolorgray 144 2030 a Fj(a\))p 0 TeXcolorgray
1470 2338 a Fi(P)1541 2300 y Fh(0)1528 2360 y Fg(0)1651
2338 y Ff(=)1928 2276 y(3!)p 1815 2317 298 4 v 1815 2400
a(\(3)21 b Fe(\000)e Ff(1\)!)2138 2338 y(\()p Fe(\000)p
Fd(b)2302 2352 y Fg(30)2397 2338 y Ff(+)h Fd(b)2546 2352
y Fg(21)2620 2338 y Ff(\))p 0 TeXcolorgray 845 w Fc(\(1\))p
0 TeXcolorgray 1470 2531 a Fi(P)1541 2493 y Fh(0)1528
2553 y Fg(0)1651 2531 y Ff(=)83 b(3)15 b(\()q Fe(\000)p
Fd(b)2030 2545 y Fg(30)2124 2531 y Ff(+)20 b Fd(b)2273
2545 y Fg(21)2348 2531 y Ff(\))p 0 TeXcolorgray 1117
w Fc(\(2\))p 0 TeXcolorgray 1181 2668 a Fi(P)1252 2631
y Fh(0)1239 2691 y Fg(0)1299 2668 y Ff(+)g(3)p Fd(b)1493
2682 y Fg(30)1651 2668 y Ff(=)83 b(3)p Fd(b)1908 2682
y Fg(21)p 0 TeXcolorgray 3500 2668 a Fc(\(3\))p 0 TeXcolorgray
1090 2806 a Ff(1)p Fi(=)p Ff(3)p Fi(P)1296 2769 y Fh(0)1283
2829 y Fg(0)1344 2806 y Ff(+)20 b Fd(b)1493 2820 y Fg(30)1651
2806 y Ff(=)83 b Fd(b)1863 2820 y Fg(21)p 0 TeXcolorgray
3500 2806 a Fc(\(4\))p 0 TeXcolorgray 1470 3234 a Fi(P)1541
3197 y Fh(0)1528 3257 y Fg(1)1651 3234 y Ff(=)1928 3173
y(3!)p 1815 3213 V 1815 3297 a(\(3)21 b Fe(\000)e Ff(1\)!)2138
3234 y(\()p Fe(\000)p Fd(b)2302 3248 y Fg(03)2397 3234
y Ff(+)h Fd(b)2546 3248 y Fg(12)2620 3234 y Ff(\))p 0
TeXcolorgray 845 w Fc(\(5\))p 0 TeXcolorgray 1470 3427
a Fi(P)1541 3389 y Fh(0)1528 3449 y Fg(1)1651 3427 y
Ff(=)83 b(3)15 b(\()q Fe(\000)p Fd(b)2030 3441 y Fg(03)2124
3427 y Ff(+)20 b Fd(b)2273 3441 y Fg(12)2348 3427 y Ff(\))p
0 TeXcolorgray 1117 w Fc(\(6\))p 0 TeXcolorgray 1181
3565 a Fi(P)1252 3527 y Fh(0)1239 3587 y Fg(1)1299 3565
y Ff(+)g(3)p Fd(b)1493 3579 y Fg(03)1651 3565 y Ff(=)83
b(3)p Fd(b)1908 3579 y Fg(12)p 0 TeXcolorgray 3500 3565
a Fc(\(7\))p 0 TeXcolorgray 1090 3703 a Ff(1)p Fi(=)p
Ff(3)p Fi(P)1296 3665 y Fh(0)1283 3725 y Fg(1)1344 3703
y Ff(+)20 b Fd(b)1493 3717 y Fg(03)1651 3703 y Ff(=)83
b Fd(b)1863 3717 y Fg(12)p 0 TeXcolorgray 3500 3703 a
Fc(\(8\))p 0 TeXcolorgray 234 3907 a(Einsetzen)31 b(v)m(on)g
Fd(b)875 3921 y Fg(30)980 3907 y Fc(in)f(\(4\))i(und)d
Fd(b)1473 3921 y Fg(03)1578 3907 y Fc(in)h(\(8\))h(ergibt)g(dann:)1474
4224 y Fd(b)1532 4238 y Fg(30)1690 4224 y Ff(=)83 b Fi(P)1902
4238 y Fg(0)p 0 TeXcolorgray 3500 4224 a Fc(\(9\))p 0
TeXcolorgray 1474 4362 a Fd(b)1532 4376 y Fg(21)1690
4362 y Ff(=)g(1)p Fi(=)p Ff(3)p Fi(P)2050 4324 y Fh(0)2037
4384 y Fg(0)2098 4362 y Ff(+)20 b Fi(P)2247 4376 y Fg(0)p
0 TeXcolorgray 3455 4362 a Fc(\(10\))p 0 TeXcolorgray
1474 4500 a Fd(b)1532 4514 y Fg(12)1690 4500 y Ff(=)83
b(1)p Fi(=)p Ff(3)p Fi(P)2050 4462 y Fh(0)2037 4522 y
Fg(1)2098 4500 y Ff(+)20 b Fi(P)2247 4514 y Fg(1)p 0
TeXcolorgray 3455 4500 a Fc(\(11\))p 0 TeXcolorgray 1474
4637 a Fd(b)1532 4651 y Fg(03)1690 4637 y Ff(=)83 b Fi(P)1902
4651 y Fg(1)p 0 TeXcolorgray 3455 4637 a Fc(\(12\))p
0 TeXcolorgray 234 4842 a Fi(P)13 b Ff(\()p Fi(t)p Ff(\))26
b(=)f Fi(B)599 4856 y Fg(30)674 4842 y Ff(\()p Fi(t)p
Ff(\))p Fi(P)835 4856 y Fg(0)895 4842 y Ff(+)20 b Fi(B)1055
4856 y Fg(21)1130 4842 y Ff(\()p Fi(t)p Ff(\)\(1)p Fi(=)p
Ff(3)p Fi(P)1474 4809 y Fh(0)1461 4865 y Fg(0)1523 4842
y Ff(+)g Fi(P)1672 4856 y Fg(0)1712 4842 y Ff(\))h(+)e
Fi(B)1927 4856 y Fg(12)2002 4842 y Ff(\()p Fi(t)p Ff(\)\(1)p
Fi(=)p Ff(3)p Fi(P)2346 4809 y Fh(0)2333 4865 y Fg(1)2395
4842 y Ff(+)h Fi(P)2544 4856 y Fg(1)2584 4842 y Ff(\))h(+)f
Fi(B)2800 4856 y Fg(03)2874 4842 y Ff(\()p Fi(t)p Ff(\))p
Fi(P)3035 4856 y Fg(1)p 0 TeXcolorgray 0 TeXcolorgray
1858 5443 a Fc(1)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 144 193 a Fj(b\))p 0 TeXcolorgray
1398 415 a Fi(H)1481 377 y Fg(3)1474 437 y(0)1603 415
y Ff(=)83 b Fi(B)1826 429 y Fg(30)1901 415 y Ff(\()p
Fi(t)p Ff(\))21 b(+)e Fi(B)2184 429 y Fg(21)2259 415
y Ff(\()p Fi(t)p Ff(\))p 0 TeXcolorgray 1093 w Fc(\(13\))p
0 TeXcolorgray 1398 552 a Fi(H)1481 515 y Fg(3)1474 575
y(1)1603 552 y Ff(=)83 b(1)p Fi(=)p Ff(3)p Fi(B)1961
566 y Fg(21)2037 552 y Ff(\()p Fi(t)p Ff(\))p 0 TeXcolorgray
1315 w Fc(\(14\))p 0 TeXcolorgray 1398 690 a Fi(H)1481
653 y Fg(3)1474 713 y(2)1603 690 y Ff(=)g(1)p Fi(=)p
Ff(3)p Fi(B)1961 704 y Fg(12)2037 690 y Ff(\()p Fi(t)p
Ff(\))p 0 TeXcolorgray 1315 w Fc(\(15\))p 0 TeXcolorgray
1398 828 a Fi(H)1481 791 y Fg(3)1474 851 y(3)1603 828
y Ff(=)g Fi(B)1826 842 y Fg(03)1901 828 y Ff(\()p Fi(t)p
Ff(\))21 b(+)e Fi(B)2184 842 y Fg(12)2259 828 y Ff(\()p
Fi(t)p Ff(\))p 0 TeXcolorgray 1093 w Fc(\(16\))p 0 TeXcolorgray
0 TeXcolorgray 144 1065 a Fj(c\))p 0 TeXcolorgray 469
1287 a Fi(P)13 b Ff(\()p Fi(a)p Ff(\))26 b(=)e Fi(a)827
1301 y Fg(0)887 1287 y Ff(+)c Fi(a)1026 1301 y Fg(1)1066
1287 y Fi(a)g Ff(+)g Fi(a)1273 1301 y Fg(2)1312 1287
y Fi(a)1360 1249 y Fg(2)1420 1287 y Ff(+)g Fi(a)1559
1301 y Fg(3)1598 1287 y Fi(a)1646 1249 y Fg(3)1769 1287
y Ff(=)83 b Fd(b)1981 1301 y Fg(03)p 0 TeXcolorgray 3455
1287 a Fc(\(17\))p 0 TeXcolorgray 569 1461 a Fi(P)640
1424 y Fg(\(1\))735 1461 y Ff(\()p Fi(a)p Ff(\))26 b(=)f
Fi(a)1023 1475 y Fg(1)1082 1461 y Ff(+)20 b(2)p Fi(a)1266
1475 y Fg(2)1306 1461 y Fi(a)g Ff(+)g(3)p Fi(a)1558 1475
y Fg(3)1598 1461 y Fi(a)1646 1424 y Fg(2)1769 1461 y
Ff(=)2009 1400 y(3)p 1933 1440 199 4 v 1933 1524 a Fi(b)g
Fe(\000)g Fi(a)2156 1461 y Ff(\()p Fd(b)2249 1475 y Fg(21)2344
1461 y Fe(\000)g Fd(b)2493 1475 y Fg(30)2568 1461 y Ff(\))p
0 TeXcolorgray 852 w Fc(\(18\))p 0 TeXcolorgray 855 1683
a Fi(P)926 1646 y Fg(\(2\))1021 1683 y Ff(\()p Fi(a)p
Ff(\))26 b(=)f(2)p Fi(a)1354 1697 y Fg(2)1414 1683 y
Ff(+)20 b(6)p Fi(a)1598 1697 y Fg(3)1638 1683 y Fi(a)83
b Ff(=)2064 1622 y(6)p 1933 1662 309 4 v 1933 1746 a(\()p
Fi(b)20 b Fe(\000)g Fi(a)p Ff(\))2201 1719 y Fg(2)2266
1683 y Ff(\()p Fd(b)2359 1697 y Fg(12)2454 1683 y Fe(\000)g
Ff(2)p Fd(b)2648 1697 y Fg(21)2744 1683 y Ff(+)g Fd(b)2893
1697 y Fg(30)2967 1683 y Ff(\))p 0 TeXcolorgray 453 w
Fc(\(19\))p 0 TeXcolorgray 1148 1920 a Fi(P)1219 1883
y Fg(\(3\))1313 1920 y Ff(\()p Fi(a)p Ff(\))26 b(=)f(6)p
Fi(a)1646 1934 y Fg(3)1769 1920 y Ff(=)2064 1859 y(6)p
1933 1899 V 1933 1983 a(\()p Fi(b)20 b Fe(\000)g Fi(a)p
Ff(\))2201 1957 y Fg(2)2266 1920 y Ff(\()p Fd(b)2359
1934 y Fg(03)2454 1920 y Fe(\000)g Ff(3)p Fd(b)2648 1934
y Fg(12)2744 1920 y Ff(+)g(3)p Fd(b)2938 1934 y Fg(21)3033
1920 y Fe(\000)g Fd(b)3182 1934 y Fg(30)3257 1920 y Ff(\))p
0 TeXcolorgray 163 w Fc(\(20\))p 0 TeXcolorgray 1017
2246 a Fd(b)1075 2260 y Fg(30)1233 2246 y Ff(=)82 b Fi(a)1434
2260 y Fg(0)1494 2246 y Ff(+)20 b Fi(a)1633 2260 y Fg(1)1673
2246 y Fi(a)g Ff(+)g Fi(a)1880 2260 y Fg(2)1919 2246
y Fi(a)1967 2209 y Fg(2)2027 2246 y Ff(+)g Fi(a)2166
2260 y Fg(3)2205 2246 y Fi(a)2253 2209 y Fg(3)p 0 TeXcolorgray
3455 2246 a Fc(\(21\))p 0 TeXcolorgray 1017 2427 a Fd(b)1075
2441 y Fg(21)1233 2427 y Ff(=)1396 2366 y Fi(b)h Fe(\000)f
Fi(a)p 1396 2406 199 4 v 1473 2489 a Ff(3)1605 2427 y(\()p
Fi(a)1688 2441 y Fg(1)1748 2427 y Ff(+)g(2)p Fi(a)1932
2441 y Fg(2)1971 2427 y Fi(a)h Ff(+)f(3)p Fi(a)2224 2441
y Fg(3)2264 2427 y Fi(a)2312 2390 y Fg(2)2351 2427 y
Ff(\))h(+)f Fd(b)2556 2441 y Fg(30)p 0 TeXcolorgray 3455
2427 a Fc(\(22\))p 0 TeXcolorgray 1017 2660 a Fd(b)1075
2674 y Fg(12)1233 2660 y Ff(=)1396 2598 y(\()p Fi(b)h
Fe(\000)f Fi(a)p Ff(\))1665 2565 y Fg(2)p 1396 2639 309
4 v 1528 2722 a Ff(6)1715 2660 y(\(2)p Fi(a)1843 2674
y Fg(2)1903 2660 y Ff(+)g(6)p Fi(a)2087 2674 y Fg(3)2127
2660 y Fi(a)p Ff(\))h(+)f(2)p Fd(b)2425 2674 y Fg(21)2520
2660 y Fe(\000)g Fd(b)2669 2674 y Fg(30)1017 2836 y Fd(b)1075
2850 y Fg(03)1233 2836 y Ff(=)82 b(\()p Fi(b)21 b Fe(\000)f
Fi(a)p Ff(\))1655 2798 y Fg(3)1695 2836 y Fi(a)1743 2850
y Fg(3)1802 2836 y Ff(+)g(3)p Fd(b)1996 2850 y Fg(12)2092
2836 y Fe(\000)g Ff(3)p Fd(b)2286 2850 y Fg(21)2381 2836
y Ff(+)g Fd(b)2530 2850 y Fg(30)p 0 TeXcolorgray 3455
2836 a Fc(\(23\))p 0 TeXcolorgray 234 2999 a(F)n(\374r)30
b Fi(P)13 b Ff(\()p Fi(t)p Ff(\))26 b(=)f(3)p Fi(t)c
Fe(\000)903 2963 y Fg(9)p 903 2978 36 4 v 903 3030 a(2)949
2999 y Fi(t)982 2966 y Fg(2)1041 2999 y Ff(+)1142 2963
y Fg(7)p 1142 2978 V 1142 3030 a(4)1187 2999 y Fi(t)1220
2966 y Fg(3)1260 2999 y Fc(:)1615 3275 y Fd(b)1673 3289
y Fg(30)1831 3275 y Ff(=)82 b(0)p 0 TeXcolorgray 1426
w Fc(\(24\))p 0 TeXcolorgray 1615 3413 a Fd(b)1673 3427
y Fg(21)1831 3413 y Ff(=)g(1)p 0 TeXcolorgray 1426 w
Fc(\(25\))p 0 TeXcolorgray 1615 3550 a Fd(b)1673 3564
y Fg(12)1831 3550 y Ff(=)g(3)p Fi(:)p Ff(5)p 0 TeXcolorgray
1356 w Fc(\(26\))p 0 TeXcolorgray 1615 3688 a Fd(b)1673
3702 y Fg(03)1831 3688 y Ff(=)g(9)p Fi(:)p Ff(25)p 0
TeXcolorgray 1311 w Fc(\(27\))p 0 TeXcolorgray 0 TeXcolorgray
144 3968 a Fk(A)l(ufgab)t(e)44 b(2)f(App)l(ro)l(ximation)f(mit)h
(Bernstein-P)l(olynomen)p 0 TeXcolorgray 0 TeXcolorgray
144 4174 a Fj(a\))p 0 TeXcolorgray 144 4346 a Fc(Eine)30
b(Bezierkurv)m(e)i(v)m(on)f(Grad)f(2)h(hat)f(3)h(K)m(on)m(trollpunk)m
(e)g(und)e(3)i(Bernstein-P)m(olynome:)1203 4546 y Fi(B)1272
4560 y Fg(20)1430 4546 y Ff(=)1593 4485 y(2!)p 1593 4525
71 4 v 1593 4609 a(2!)1689 4546 y(\(1)21 b Fe(\000)f
Fi(t)p Ff(\))1949 4504 y Fg(2)2014 4546 y Ff(=)25 b(\(1)c
Fe(\000)f Fi(t)p Ff(\))2370 4504 y Fg(2)p 0 TeXcolorgray
3455 4546 a Fc(\(28\))p 0 TeXcolorgray 1203 4766 a Fi(B)1272
4780 y Fg(11)1430 4766 y Ff(=)1629 4704 y(2!)p 1593 4745
142 4 v 1593 4828 a(1!1!)1760 4766 y(\(1)h Fe(\000)f
Fi(t)p Ff(\))15 b Fi(t)25 b Ff(=)g(2)15 b(\()q(1)21 b
Fe(\000)f Fi(t)p Ff(\))15 b Fi(t)p 0 TeXcolorgray 897
w Fc(\(29\))p 0 TeXcolorgray 1203 4986 a Fi(B)1272 5000
y Fg(02)1430 4986 y Ff(=)1593 4924 y(2!)p 1593 4965 71
4 v 1593 5048 a(2!)1674 4986 y Fi(t)1707 4948 y Fg(2)1771
4986 y Ff(=)25 b Fi(t)1900 4948 y Fg(2)p 0 TeXcolorgray
3455 4986 a Fc(\(30\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1858 5443 a(2)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 144 193 a Fj(b\))p 0 TeXcolorgray
144 365 a Fd(d)202 380 y Fb(k)270 365 y Ff(=)366 300
y Fa(P)454 387 y Fb(i)p Fg(+)p Fb(j)t Fg(=)p Fb(q)673
365 y Fi(B)742 379 y Fb(ij)803 365 y Ff(\()p Fi(t)871
380 y Fb(k)913 365 y Ff(\))p Fd(b)1006 379 y Fb(ij)234
412 y Fa(0)234 558 y(B)234 608 y(B)234 658 y(B)234 708
y(B)234 757 y(B)234 807 y(B)234 857 y(B)234 907 y(B)234
957 y(B)234 1006 y(B)234 1056 y(B)234 1106 y(B)234 1156
y(B)234 1206 y(B)234 1259 y(@)330 412 y( )396 499 y Ff(0)396
612 y(0)441 412 y Fa(!)330 661 y( )396 748 y Ff(4)396
861 y(4)441 661 y Fa(!)330 910 y( )396 997 y Ff(8)396
1110 y(2)441 910 y Fa(!)307 1159 y( )373 1247 y Ff(12)396
1359 y(0)464 1159 y Fa(!)529 412 y(1)529 558 y(C)529
608 y(C)529 658 y(C)529 708 y(C)529 757 y(C)529 807 y(C)529
857 y(C)529 907 y(C)529 957 y(C)529 1006 y(C)529 1056
y(C)529 1106 y(C)529 1156 y(C)529 1206 y(C)529 1259 y(A)627
930 y Ff(=)723 686 y Fa(0)723 832 y(B)723 882 y(B)723
932 y(B)723 985 y(@)841 760 y Fi(B)910 774 y Fg(20)985
760 y Ff(\(0\))175 b Fi(B)1344 774 y Fg(11)1419 760 y
Ff(\(0\))g Fi(B)1778 774 y Fg(02)1853 760 y Ff(\(0\))796
873 y Fi(B)865 887 y Fg(20)940 873 y Ff(\(1)p Fi(=)p
Ff(3\))85 b Fi(B)1299 887 y Fg(11)1373 873 y Ff(\(1)p
Fi(=)p Ff(3\))h Fi(B)1733 887 y Fg(02)1807 873 y Ff(\(1)p
Fi(=)p Ff(3\))796 986 y Fi(B)865 1000 y Fg(20)940 986
y Ff(\(2)p Fi(=)p Ff(3\))f Fi(B)1299 1000 y Fg(11)1373
986 y Ff(\(2)p Fi(=)p Ff(3\))h Fi(B)1733 1000 y Fg(02)1807
986 y Ff(\(2)p Fi(=)p Ff(3\))841 1099 y Fi(B)910 1113
y Fg(20)985 1099 y Ff(\(1\))175 b Fi(B)1344 1113 y Fg(11)1419
1099 y Ff(\(1\))g Fi(B)1778 1113 y Fg(02)1853 1099 y
Ff(\(1\))2014 686 y Fa(1)2014 832 y(C)2014 882 y(C)2014
932 y(C)2014 985 y(A)2102 736 y(0)2102 882 y(B)2102 935
y(@)2175 816 y Fd(b)2233 830 y Fg(20)2175 929 y Fd(b)2233
943 y Fg(11)2175 1042 y Fd(b)2233 1056 y Fg(02)2308 736
y Fa(1)2308 882 y(C)2308 935 y(A)234 1417 y(0)234 1563
y(B)234 1613 y(B)234 1662 y(B)234 1712 y(B)234 1762 y(B)234
1812 y(B)234 1862 y(B)234 1911 y(B)234 1961 y(B)234 2011
y(B)234 2061 y(B)234 2111 y(B)234 2160 y(B)234 2210 y(B)234
2263 y(@)330 1417 y( )396 1504 y Ff(0)396 1617 y(0)441
1417 y Fa(!)330 1666 y( )396 1753 y Ff(4)396 1866 y(4)441
1666 y Fa(!)330 1915 y( )396 2002 y Ff(8)396 2115 y(2)441
1915 y Fa(!)307 2164 y( )373 2251 y Ff(12)396 2364 y(0)464
2164 y Fa(!)529 1417 y(1)529 1563 y(C)529 1613 y(C)529
1662 y(C)529 1712 y(C)529 1762 y(C)529 1812 y(C)529 1862
y(C)529 1911 y(C)529 1961 y(C)529 2011 y(C)529 2061 y(C)529
2111 y(C)529 2160 y(C)529 2210 y(C)529 2263 y(A)627 1934
y Ff(=)723 1691 y Fa(0)723 1837 y(B)723 1886 y(B)723
1936 y(B)723 1989 y(@)841 1765 y Ff(1)g(2)f(0)796 1878
y(4)p Fi(=)p Ff(9)84 b(4)p Fi(=)p Ff(9)h(1)p Fi(=)p Ff(9)796
1990 y(1)p Fi(=)p Ff(9)f(4)p Fi(=)p Ff(9)h(4)p Fi(=)p
Ff(9)841 2103 y(0)175 b(2)f(1)1371 1691 y Fa(1)1371 1837
y(C)1371 1886 y(C)1371 1936 y(C)1371 1989 y(A)1459 1740
y(0)1459 1886 y(B)1459 1940 y(@)1532 1821 y Fd(b)1590
1835 y Fg(20)1532 1934 y Fd(b)1590 1948 y Fg(11)1532
2047 y Fd(b)1590 2061 y Fg(02)1664 1740 y Fa(1)1664 1886
y(C)1664 1940 y(A)234 2480 y Fc(Dies)41 b(ist)g(ein)e(\374b)s(erb)s
(estimm)m(tes)g(Gleic)m(h)m(ungssystem)j(und)c(es)i(l\344sst)h(sic)m(h)
f(nic)m(h)m(t)h(l\366sen,)i(da)c(die)144 2593 y(Zeilen)m(v)m(ektoren)32
b(alle)g(linear)f(unabh\344ngig)f(v)m(oneinander)g(sind.)p
0 TeXcolorgray 144 2837 a Fj(c\))p 0 TeXcolorgray 144
3196 a Fd(B)218 3163 y Fh(\003)283 3196 y Ff(=)25 b Fd(B)453
3163 y Fb(T)509 3196 y Fd(B)g Ff(=)704 2953 y Fa(0)704
3099 y(B)704 3149 y(B)704 3199 y(B)704 3252 y(@)822 3027
y Ff(1)175 b(0)f(0)777 3140 y(4)p Fi(=)p Ff(9)84 b(4)p
Fi(=)p Ff(9)h(1)p Fi(=)p Ff(9)777 3253 y(1)p Fi(=)p Ff(9)f(4)p
Fi(=)p Ff(9)h(4)p Fi(=)p Ff(9)822 3366 y(0)175 b(0)f(1)1352
2953 y Fa(1)1352 3099 y(C)1352 3149 y(C)1352 3199 y(C)1352
3252 y(A)1425 2974 y Fb(T)1495 2953 y Fa(0)1495 3099
y(B)1495 3149 y(B)1495 3199 y(B)1495 3252 y(@)1613 3027
y Ff(1)g(0)h(0)1567 3140 y(4)p Fi(=)p Ff(9)85 b(4)p Fi(=)p
Ff(9)f(1)p Fi(=)p Ff(9)1567 3253 y(1)p Fi(=)p Ff(9)h(4)p
Fi(=)p Ff(9)f(4)p Fi(=)p Ff(9)1613 3366 y(0)174 b(0)h(1)2142
2953 y Fa(1)2142 3099 y(C)2142 3149 y(C)2142 3199 y(C)2142
3252 y(A)2240 3196 y Ff(=)25 b(1)p Fi(=)p Ff(81)2531
3003 y Fa(0)2533 3149 y(B)2533 3202 y(@)2606 3083 y Ff(98)84
b(20)107 b(8)2606 3196 y(20)84 b(32)g(20)2629 3309 y(8)106
b(20)84 b(98)3045 3003 y Fa(1)3045 3149 y(C)3045 3202
y(A)234 3804 y Fd(d)292 3771 y Fh(\003)357 3804 y Ff(=)25
b Fi(B)527 3771 y Fb(T)582 3804 y Fd(d)g Ff(=)761 3411
y Fa(0)761 3557 y(B)761 3607 y(B)761 3657 y(B)761 3707
y(B)761 3756 y(B)761 3806 y(B)761 3856 y(B)761 3906 y(B)761
3956 y(B)761 4009 y(@)856 3411 y( )922 3498 y Ff(8)p
Fi(=)p Ff(3)968 3611 y(2)1059 3411 y Fa(!)834 3660 y( )899
3747 y Ff(16)p Fi(=)p Ff(3)922 3860 y(8)p Fi(=)p Ff(3)1081
3660 y Fa(!)856 3909 y( )945 3997 y Ff(16)922 4109 y(4)p
Fi(=)p Ff(3)1059 3909 y Fa(!)1147 3411 y(1)1147 3557
y(C)1147 3607 y(C)1147 3657 y(C)1147 3707 y(C)1147 3756
y(C)1147 3806 y(C)1147 3856 y(C)1147 3906 y(C)1147 3956
y(C)1147 4009 y(A)234 4560 y Fi(b)h Ff(=)f(\()p Fd(B)p
Fe(\003)q Ff(\))585 4518 y Fh(\000)p Fg(1)695 4560 y
Fd(d)753 4527 y Fh(\003)817 4560 y Ff(=)913 4167 y Fa(0)913
4313 y(B)913 4363 y(B)913 4412 y(B)913 4462 y(B)913 4512
y(B)913 4562 y(B)913 4612 y(B)913 4661 y(B)913 4711 y(B)913
4764 y(@)1021 4167 y( )1123 4254 y Ff(0)1087 4367 y(0)p
Fi(:)p Ff(3)1203 4167 y Fa(!)999 4416 y( )1123 4503 y
Ff(6)1064 4616 y(6)p Fi(:)p Ff(75)1226 4416 y Fa(!)986
4665 y( )1100 4752 y Ff(12)1052 4865 y Fe(\000)p Ff(0)p
Fi(:)p Ff(3)1239 4665 y Fa(!)1304 4167 y(1)1304 4313
y(C)1304 4363 y(C)1304 4412 y(C)1304 4462 y(C)1304 4512
y(C)1304 4562 y(C)1304 4612 y(C)1304 4661 y(C)1304 4711
y(C)1304 4764 y(A)p 0 TeXcolorgray 0 TeXcolorgray 1858
5443 a Fc(3)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 838 2325 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 267.79053  0 -16.73691  0 ArrowA CP 4
2 roll ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch
def /xStart exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq false
and exch 2 lt true and or { /viceversa -16.73691  267.79053  gt { true
}{ false } ifelse def /epsilon 0.01 def /minTickline -16.73691  def
/maxTickline 267.79053  def /dT 1096870 abs 65536 div viceversa { neg
} if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT
0 def } ifelse -28.45274 256.07469 /tickend exch def /tickstart exch
def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor {
0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke { 0 setlinecap [  5.0  3.0 ] -2 0 add   dup 0 gt { /a .5
def PathLength exch div } { pop /a 1 def PathLength } ifelse /b ED
dup /X ED 0 get /y ED /z 0 X {add} forall def b a .5 sub 2 mul y mul
sub z Div round z mul a .5 sub 2 mul y mul add b exch Div /z ED false
X { z mul } forall X astore {0 gt or} forall { X 1 a sub y mul } {
[ 1 0 ] 0 } ifelse setdash stroke  stroke} def /subLSstroke { 0 setlinecap
stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def logLines
{ gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT dx log mul
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT
dx log mul add def x abs MinValue abs le { false { x minTickline  moveto
x maxTickline  lineto } { x tickstart STsize mul  moveto x tickend
STsize mul  lineto } ifelse } if } for /dsubT 0 def subTwidth SLW subTColor
subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick
tickstart STsize mul  moveto cntsubTick tickend STsize mul  lineto
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart  moveto cntTick tickend  lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 0 267.79053  0 -16.73691  ArrowA CP 4
2 roll ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch
def /xStart exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq true
and exch 2 lt false and or { /viceversa -16.73691  267.79053  gt {
true }{ false } ifelse def /epsilon 0.01 def /minTickline -16.73691
 def /maxTickline 267.79053  def /dT 1096870 abs 65536 div viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -28.45274 256.07469 /tickend exch def /tickstart
exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor
{ 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke { 0 setlinecap [  5.0  3.0 ] -2 0 add   dup 0 gt { /a .5
def PathLength exch div } { pop /a 1 def PathLength } ifelse /b ED
dup /X ED 0 get /y ED /z 0 X {add} forall def b a .5 sub 2 mul y mul
sub z Div round z mul a .5 sub 2 mul y mul add b exch Div /z ED false
X { z mul } forall X astore {0 gt or} forall { X 1 a sub y mul } {
[ 1 0 ] 0 } ifelse setdash stroke   stroke} def /subLSstroke { 0 setlinecap
stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch def logLines
{ gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT dx log mul
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT
dx log mul add def x abs MinValue abs le { false { x minTickline exch
moveto x maxTickline exch lineto } { x tickstart STsize mul exch moveto
x tickend STsize mul exch lineto } ifelse } if } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if end
 
@endspecial 515 2214 a Ff(1)515
2076 y(2)515 1937 y(3)515 1798 y(4)515 1659 y(5)515 1520
y(6)515 1381 y(7)515 1242 y(8)515 1103 y(9)470 964 y(10)470
825 y(11)470 686 y(12)470 547 y(13)470 408 y(14)470 269
y(15)444 2489 y Fe(\000)p Ff(1)954 2660 y(1)94 b(2)g(3)g(4)g(5)g(6)g(7)
g(8)g(9)71 b(10)49 b(11)g(12)g(13)g(14)g(15)-2326 b Fe(\000)p
Ff(1)838 2325 y
 tx@Dict begin { 267.79053 0.0 } PutCoor PutBegin  end
 838 2325 a 838 2325 a
 tx@Dict begin { 5.0 5.7794 4.71451 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 838 2325 a 814
2344 a Fc(x)838 2325 y
 tx@Dict begin  PutEnd  end
 838 2325 a 838 2325 a
 tx@Dict begin  PutEnd  end
 838 2325
a 838 2325 a
 tx@Dict begin { 0.0 267.79053 } PutCoor PutBegin  end
 838 2325 a 838 2325 a
 tx@Dict begin { 5.0 5.7794 4.71451 2.12914 90.  Uput UUput } PutCoor
PutBegin  end
 838 2325 a 814 2336
a Fc(y)838 2325 y
 tx@Dict begin  PutEnd  end
 838 2325 a 838 2325 a
 tx@Dict begin  PutEnd  end
 838 2325 a 0
TeXcolorgray 144 2958 a Fk(A)l(ufgab)t(e)44 b(3)f(B-Splines)p
0 TeXcolorgray 0 TeXcolorgray 144 3164 a Fj(a\))p 0 TeXcolorgray
144 3336 a Fc(Anhand)25 b(des)h(Dreiec)m(kssc)m(hemas)j(sieh)m(t)f(man)
e(sc)m(hnell,)i(dass)e(n)m(ur)g Fi(B)2477 3303 y Fg(3)2472
3359 y Fh(\000)p Fg(2)2566 3336 y Ff(\()p Fi(t)p Ff(\))p
Fi(;)15 b(B)2783 3303 y Fg(2)2778 3359 y Fh(\000)p Fg(2)2873
3336 y Ff(\()p Fi(t)p Ff(\))p Fi(;)g(B)3090 3303 y Fg(2)3085
3359 y Fh(\000)p Fg(1)3181 3336 y Ff(\()p Fi(t)p Ff(\))p
Fi(;)g(B)3398 3303 y Fg(1)3393 3359 y Fh(\000)p Fg(1)3488
3336 y Ff(\()p Fi(t)p Ff(\))p Fi(;)144 3449 y(B)218 3416
y Fg(1)213 3472 y(0)257 3449 y Ff(\()p Fi(t)p Ff(\))p
Fi(;)g(B)474 3416 y Fg(0)469 3472 y(0)514 3449 y Ff(\()p
Fi(t)p Ff(\))p Fi(;)g(B)731 3416 y Fg(0)726 3472 y(1)771
3449 y Ff(\()p Fi(t)p Ff(\))31 b Fc(b)s(eno)s(etig)f(w)m(erden.)1052
3766 y Fi(B)1126 3728 y Fg(0)1121 3788 y(0)1165 3766
y Ff(\()p Fi(t)p Ff(\))c(=)f(1)31 b(;)45 b Fi(t)25 b
Fe(2)g Ff([0)p Fi(;)15 b Ff(1])1595 b Fc(\(31\))1052
3913 y Fi(B)1126 3876 y Fg(0)1121 3936 y(1)1165 3913
y Ff(\()p Fi(t)p Ff(\))26 b(=)f(1)31 b(;)45 b Fi(t)25
b Fe(2)g Ff([1)p Fi(;)15 b Ff(2])1595 b Fc(\(32\))1002
4061 y Fi(B)1076 4023 y Fg(1)1071 4083 y Fh(\000)p Fg(1)1165
4061 y Ff(\()p Fi(t)p Ff(\))26 b(=)f(1)c Fe(\000)e Fi(t)31
b Ff(;)45 b Fi(t)25 b Fe(2)g Ff([0)p Fi(;)15 b Ff(1])1451
b Fc(\(33\))1052 4263 y Fi(B)1126 4226 y Fg(1)1121 4286
y(0)1165 4263 y Ff(\()p Fi(t)p Ff(\))26 b(=)1390 4144
y Fa(\032)1530 4207 y Fi(t)31 b Ff(;)45 b Fi(t)25 b Fe(2)g
Ff([0)p Fi(;)15 b Ff(1])1452 4320 y(2)21 b Fe(\000)f
Fi(t)30 b Ff(;)46 b Fi(t)25 b Fe(2)g Ff([1)p Fi(;)15
b Ff(2])3455 4263 y Fc(\(34\))1002 4467 y Fi(B)1076 4429
y Fg(2)1071 4489 y Fh(\000)p Fg(2)1165 4467 y Ff(\()p
Fi(t)p Ff(\))26 b(=)f(\(1)c Fe(\000)f Fi(t)p Ff(\))1650
4429 y Fg(2)1720 4467 y Ff(;)45 b Fi(t)26 b Fe(2)e Ff([1)p
Fi(;)15 b Ff(0])1341 b Fc(\(35\))1002 4670 y Fi(B)1076
4632 y Fg(2)1071 4692 y Fh(\000)p Fg(1)1165 4670 y Ff(\()p
Fi(t)p Ff(\))26 b(=)1390 4551 y Fa(\032)1530 4613 y Ff(2)p
Fi(t)21 b Fe(\000)f Ff(1)p Fi(:)p Ff(5)p Fi(t)1868 4580
y Fg(2)1939 4613 y Ff(;)45 b Fi(t)25 b Fe(2)g Ff([0)p
Fi(;)15 b Ff(1])1452 4726 y(2)21 b Fe(\000)f Ff(2)p Fi(t)g
Ff(+)g(0)p Fi(:)p Ff(5)p Fi(t)1946 4693 y Fg(2)2017 4726
y Ff(;)46 b Fi(t)25 b Fe(2)f Ff([1)p Fi(;)15 b Ff(2])3455
4670 y Fc(\(36\))1002 4929 y Fi(B)1076 4891 y Fg(3)1071
4951 y Fh(\000)p Fg(2)1165 4929 y Ff(\()p Fi(t)p Ff(\))26
b(=)1390 4810 y Fa(\032)1530 4872 y Ff(3)p Fi(t)21 b
Fe(\000)f Ff(3)p Fi(:)p Ff(5)p Fi(t)1868 4839 y Fg(2)1928
4872 y Fe(\000)g Ff(0)p Fi(:)p Ff(25)p Fi(t)2212 4839
y Fg(3)2284 4872 y Ff(;)45 b Fi(t)25 b Fe(2)g Ff([0)p
Fi(;)15 b Ff(1])1452 4985 y(2)21 b Fe(\000)f Ff(3)p Fi(t)g
Ff(+)g(1)p Fi(:)p Ff(5)p Fi(t)1946 4952 y Fg(2)2007 4985
y Fe(\000)g Ff(0)p Fi(:)p Ff(25)p Fi(t)2291 4952 y Fg(3)2362
4985 y Ff(;)46 b Fi(t)25 b Fe(2)f Ff([1)p Fi(;)15 b Ff(2])3455
4929 y Fc(\(37\))p 0 TeXcolorgray 0 TeXcolorgray 1858
5443 a(4)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 1172 1046 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 170.7165  0 0.0  0 ArrowA CP 4 2 roll
ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch def /xStart
exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq false and exch
2 lt true and or { /viceversa 0.0  170.7165  gt { true }{ false } ifelse
def /epsilon 0.01 def /minTickline 0.0  def /maxTickline 113.81104
 def /dT 3729359 abs 65536 div viceversa { neg } if def /subTNo 1 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0
113.81097 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke { 0 setlinecap [ 
5.0  3.0 ] -2 0 add   dup 0 gt { /a .5 def PathLength exch div } {
pop /a 1 def PathLength } ifelse /b ED dup /X ED 0 get /y ED /z 0 X
{add} forall def b a .5 sub 2 mul y mul sub z Div round z mul a .5
sub 2 mul y mul add b exch Div /z ED false X { z mul } forall X astore
{0 gt or} forall { X 1 a sub y mul } { [ 1 0 ] 0 } ifelse setdash stroke
 stroke} def /subLSstroke { 0 setlinecap stroke stroke} def 0 dT MaxValue
1 add { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99 { /dx
exch def /x cntTick dT dx log mul add def x abs MaxValue abs le { false
{ x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 10 subTNo div 9.99 { /dx exch def /x cntTick dT dx log mul add def
x abs MinValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
 moveto cntTick tickend  lineto Twidth SLW TColor LSstroke grestore
}{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 0 113.81104  0 0.0  ArrowA CP 4 2 roll
ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch def /xStart
exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq true and exch
2 lt false and or { /viceversa 0.0  113.81104  gt { true }{ false }
ifelse def /epsilon 0.01 def /minTickline 0.0  def /maxTickline 170.7165
 def /dT 3729360 abs 65536 div viceversa { neg } if def /subTNo 1 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0
170.71646 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke { 0 setlinecap [ 
5.0  3.0 ] -2 0 add   dup 0 gt { /a .5 def PathLength exch div } {
pop /a 1 def PathLength } ifelse /b ED dup /X ED 0 get /y ED /z 0 X
{add} forall def b a .5 sub 2 mul y mul sub z Div round z mul a .5
sub 2 mul y mul add b exch Div /z ED false X { z mul } forall X astore
{0 gt or} forall { X 1 a sub y mul } { [ 1 0 ] 0 } ifelse setdash stroke
  stroke} def /subLSstroke { 0 setlinecap stroke  stroke} def 0 dT
MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo div
9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99
{ /dx exch def /x cntTick dT dx log mul add def x abs MinValue abs
le { false { x minTickline exch moveto x maxTickline exch lineto }
{ x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial 1085 1075 a Ff(0)1085
603 y(1)1149 1145 y(0)427 b(1)h(2)1172 1046 y
 tx@Dict begin { 170.7165 0.0 } PutCoor PutBegin  end
 1172 1046
a 1172 1046 a
 tx@Dict begin { 5.0 5.7794 4.71451 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1172 1046 a 1148 1066 a Fc(x)1172 1046
y
 tx@Dict begin  PutEnd  end
 1172 1046 a 1172 1046 a
 tx@Dict begin  PutEnd  end
 1172 1046 a 1172 1046 a
 tx@Dict begin { 0.0 113.81104 } PutCoor PutBegin  end
 1172
1046 a 1172 1046 a
 tx@Dict begin { 5.0 5.7794 4.71451 2.12914 90.  Uput UUput } PutCoor
PutBegin  end
 1172 1046 a 1148 1057 a Fc(y)1172
1046 y
 tx@Dict begin  PutEnd  end
 1172 1046 a 1172 1046 a
 tx@Dict begin  PutEnd  end
 1172 1046 a 1274 x @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 170.7165  0 0.0  0 ArrowA CP 4 2 roll
ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch def /xStart
exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq false and exch
2 lt true and or { /viceversa 0.0  170.7165  gt { true }{ false } ifelse
def /epsilon 0.01 def /minTickline 0.0  def /maxTickline 113.81104
 def /dT 3729359 abs 65536 div viceversa { neg } if def /subTNo 1 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0
113.81097 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke { 0 setlinecap [ 
5.0  3.0 ] -2 0 add   dup 0 gt { /a .5 def PathLength exch div } {
pop /a 1 def PathLength } ifelse /b ED dup /X ED 0 get /y ED /z 0 X
{add} forall def b a .5 sub 2 mul y mul sub z Div round z mul a .5
sub 2 mul y mul add b exch Div /z ED false X { z mul } forall X astore
{0 gt or} forall { X 1 a sub y mul } { [ 1 0 ] 0 } ifelse setdash stroke
 stroke} def /subLSstroke { 0 setlinecap stroke stroke} def 0 dT MaxValue
1 add { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99 { /dx
exch def /x cntTick dT dx log mul add def x abs MaxValue abs le { false
{ x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 10 subTNo div 9.99 { /dx exch def /x cntTick dT dx log mul add def
x abs MinValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
 moveto cntTick tickend  lineto Twidth SLW TColor LSstroke grestore
}{ /showOrigin true def } ifelse } for } if end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 0 113.81104  0 0.0  ArrowA CP 4 2 roll
ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch def /xStart
exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq true and exch
2 lt false and or { /viceversa 0.0  113.81104  gt { true }{ false }
ifelse def /epsilon 0.01 def /minTickline 0.0  def /maxTickline 170.7165
 def /dT 3729360 abs 65536 div viceversa { neg } if def /subTNo 1 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0
170.71646 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke { 0 setlinecap [ 
5.0  3.0 ] -2 0 add   dup 0 gt { /a .5 def PathLength exch div } {
pop /a 1 def PathLength } ifelse /b ED dup /X ED 0 get /y ED /z 0 X
{add} forall def b a .5 sub 2 mul y mul sub z Div round z mul a .5
sub 2 mul y mul add b exch Div /z ED false X { z mul } forall X astore
{0 gt or} forall { X 1 a sub y mul } { [ 1 0 ] 0 } ifelse setdash stroke
  stroke} def /subLSstroke { 0 setlinecap stroke  stroke} def 0 dT
MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo div
9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99
{ /dx exch def /x cntTick dT dx log mul add def x abs MinValue abs
le { false { x minTickline exch moveto x maxTickline exch lineto }
{ x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
1085 2349 a Ff(0)1085 1876 y(1)1149 2419 y(0)f(1)h(2)1172
2320 y
 tx@Dict begin { 170.7165 0.0 } PutCoor PutBegin  end
 1172 2320 a 1172 2320 a
 tx@Dict begin { 5.0 5.7794 4.71451 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1172 2320 a 1148 2340
a Fc(x)1172 2320 y
 tx@Dict begin  PutEnd  end
 1172 2320 a 1172 2320 a
 tx@Dict begin  PutEnd  end
 1172 2320
a 1172 2320 a
 tx@Dict begin { 0.0 113.81104 } PutCoor PutBegin  end
 1172 2320 a 1172 2320 a
 tx@Dict begin { 5.0 5.7794 4.71451 2.12914 90.  Uput UUput } PutCoor
PutBegin  end
 1172 2320 a 1148
2331 a Fc(y)1172 2320 y
 tx@Dict begin  PutEnd  end
 1172 2320 a 1172 2320 a
 tx@Dict begin  PutEnd  end
 1172
2320 a 1274 x @beginspecial @setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 170.7165  0 0.0  0 ArrowA CP 4 2 roll
ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch def /xStart
exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq false and exch
2 lt true and or { /viceversa 0.0  170.7165  gt { true }{ false } ifelse
def /epsilon 0.01 def /minTickline 0.0  def /maxTickline 113.81104
 def /dT 3729359 abs 65536 div viceversa { neg } if def /subTNo 1 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0
113.81097 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke { 0 setlinecap [ 
5.0  3.0 ] -2 0 add   dup 0 gt { /a .5 def PathLength exch div } {
pop /a 1 def PathLength } ifelse /b ED dup /X ED 0 get /y ED /z 0 X
{add} forall def b a .5 sub 2 mul y mul sub z Div round z mul a .5
sub 2 mul y mul add b exch Div /z ED false X { z mul } forall X astore
{0 gt or} forall { X 1 a sub y mul } { [ 1 0 ] 0 } ifelse setdash stroke
 stroke} def /subLSstroke { 0 setlinecap stroke stroke} def 0 dT MaxValue
1 add { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99 { /dx
exch def /x cntTick dT dx log mul add def x abs MaxValue abs le { false
{ x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 10 subTNo div 9.99 { /dx exch def /x cntTick dT dx log mul add def
x abs MinValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
 moveto cntTick tickend  lineto Twidth SLW TColor LSstroke grestore
}{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 0 113.81104  0 0.0  ArrowA CP 4 2 roll
ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch def /xStart
exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq true and exch
2 lt false and or { /viceversa 0.0  113.81104  gt { true }{ false }
ifelse def /epsilon 0.01 def /minTickline 0.0  def /maxTickline 170.7165
 def /dT 3729360 abs 65536 div viceversa { neg } if def /subTNo 1 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0
170.71646 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke { 0 setlinecap [ 
5.0  3.0 ] -2 0 add   dup 0 gt { /a .5 def PathLength exch div } {
pop /a 1 def PathLength } ifelse /b ED dup /X ED 0 get /y ED /z 0 X
{add} forall def b a .5 sub 2 mul y mul sub z Div round z mul a .5
sub 2 mul y mul add b exch Div /z ED false X { z mul } forall X astore
{0 gt or} forall { X 1 a sub y mul } { [ 1 0 ] 0 } ifelse setdash stroke
  stroke} def /subLSstroke { 0 setlinecap stroke  stroke} def 0 dT
MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo div
9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99
{ /dx exch def /x cntTick dT dx log mul add def x abs MinValue abs
le { false { x minTickline exch moveto x maxTickline exch lineto }
{ x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial 1085 3622 a Ff(0)1085
3150 y(1)1149 3693 y(0)f(1)h(2)1172 3594 y
 tx@Dict begin { 170.7165 0.0 } PutCoor PutBegin  end
 1172 3594
a 1172 3594 a
 tx@Dict begin { 5.0 5.7794 4.71451 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1172 3594 a 1148 3613 a Fc(x)1172 3594
y
 tx@Dict begin  PutEnd  end
 1172 3594 a 1172 3594 a
 tx@Dict begin  PutEnd  end
 1172 3594 a 1172 3594 a
 tx@Dict begin { 0.0 113.81104 } PutCoor PutBegin  end
 1172
3594 a 1172 3594 a
 tx@Dict begin { 5.0 5.7794 4.71451 2.12914 90.  Uput UUput } PutCoor
PutBegin  end
 1172 3594 a 1148 3605 a Fc(y)1172
3594 y
 tx@Dict begin  PutEnd  end
 1172 3594 a 1172 3594 a
 tx@Dict begin  PutEnd  end
 1172 3594 a 1273 x @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 170.7165  0 0.0  0 ArrowA CP 4 2 roll
ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch def /xStart
exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq false and exch
2 lt true and or { /viceversa 0.0  170.7165  gt { true }{ false } ifelse
def /epsilon 0.01 def /minTickline 0.0  def /maxTickline 113.81104
 def /dT 3729359 abs 65536 div viceversa { neg } if def /subTNo 1 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0
113.81097 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke { 0 setlinecap [ 
5.0  3.0 ] -2 0 add   dup 0 gt { /a .5 def PathLength exch div } {
pop /a 1 def PathLength } ifelse /b ED dup /X ED 0 get /y ED /z 0 X
{add} forall def b a .5 sub 2 mul y mul sub z Div round z mul a .5
sub 2 mul y mul add b exch Div /z ED false X { z mul } forall X astore
{0 gt or} forall { X 1 a sub y mul } { [ 1 0 ] 0 } ifelse setdash stroke
 stroke} def /subLSstroke { 0 setlinecap stroke stroke} def 0 dT MaxValue
1 add { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99 { /dx
exch def /x cntTick dT dx log mul add def x abs MaxValue abs le { false
{ x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 10 subTNo div 9.99 { /dx exch def /x cntTick dT dx log mul add def
x abs MinValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
 moveto cntTick tickend  lineto Twidth SLW TColor LSstroke grestore
}{ /showOrigin true def } ifelse } for } if end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 0 113.81104  0 0.0  ArrowA CP 4 2 roll
ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch def /xStart
exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq true and exch
2 lt false and or { /viceversa 0.0  113.81104  gt { true }{ false }
ifelse def /epsilon 0.01 def /minTickline 0.0  def /maxTickline 170.7165
 def /dT 3729360 abs 65536 div viceversa { neg } if def /subTNo 1 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0
170.71646 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke { 0 setlinecap [ 
5.0  3.0 ] -2 0 add   dup 0 gt { /a .5 def PathLength exch div } {
pop /a 1 def PathLength } ifelse /b ED dup /X ED 0 get /y ED /z 0 X
{add} forall def b a .5 sub 2 mul y mul sub z Div round z mul a .5
sub 2 mul y mul add b exch Div /z ED false X { z mul } forall X astore
{0 gt or} forall { X 1 a sub y mul } { [ 1 0 ] 0 } ifelse setdash stroke
  stroke} def /subLSstroke { 0 setlinecap stroke  stroke} def 0 dT
MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo div
9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99
{ /dx exch def /x cntTick dT dx log mul add def x abs MinValue abs
le { false { x minTickline exch moveto x maxTickline exch lineto }
{ x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
1085 4896 a Ff(0)1085 4424 y(1)1149 4966 y(0)f(1)h(2)1172
4867 y
 tx@Dict begin { 170.7165 0.0 } PutCoor PutBegin  end
 1172 4867 a 1172 4867 a
 tx@Dict begin { 5.0 5.7794 4.71451 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1172 4867 a 1148 4887
a Fc(x)1172 4867 y
 tx@Dict begin  PutEnd  end
 1172 4867 a 1172 4867 a
 tx@Dict begin  PutEnd  end
 1172 4867
a 1172 4867 a
 tx@Dict begin { 0.0 113.81104 } PutCoor PutBegin  end
 1172 4867 a 1172 4867 a
 tx@Dict begin { 5.0 5.7794 4.71451 2.12914 90.  Uput UUput } PutCoor
PutBegin  end
 1172 4867 a 1148
4878 a Fc(y)1172 4867 y
 tx@Dict begin  PutEnd  end
 1172 4867 a 1172 4867 a
 tx@Dict begin  PutEnd  end
 1172
4867 a 0 TeXcolorgray 0 TeXcolorgray 1858 5443 a Fc(5)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 144 193 a Fj(b\))p 0 TeXcolorgray
912 448 a Fi(\025)965 400 y Fg([1])965 473 y(0)p Fb(;)p
Fg(1)1059 448 y Ff(\()p Fi(t)p Ff(\))26 b(=)1294 387
y(3)21 b Fe(\000)f Fi(t)p 1294 427 190 4 v 1366 511 a
Ff(2)2322 448 y Fi(\025)2375 400 y Fg([1])2375 473 y(0)p
Fb(;)p Fg(0)2469 448 y Ff(\()p Fi(t)p Ff(\))26 b(=)2704
387 y(3)21 b Fe(\000)f Fi(t)p 2704 427 V 2776 511 a Ff(3)3455
448 y Fc(\(38\))857 663 y Fi(\025)910 615 y Fg([1])910
687 y(0)p Fb(;)p Fh(\000)p Fg(1)1059 663 y Ff(\()p Fi(t)p
Ff(\))26 b(=)1294 601 y(2)21 b Fe(\000)f Fi(t)p 1294
642 V 1366 725 a Ff(2)2322 663 y Fi(\025)2375 615 y Fg([1])2375
687 y(1)p Fb(;)p Fg(1)2469 663 y Ff(\()p Fi(t)p Ff(\))26
b(=)2704 601 y Fi(t)20 b Fe(\000)g Ff(1)p 2704 642 V
2776 725 a(2)3455 663 y Fc(\(39\))912 876 y Fi(\025)965
828 y Fg([1])965 900 y(1)p Fb(;)p Fg(0)1059 876 y Ff(\()p
Fi(t)p Ff(\))26 b(=)1300 814 y Fi(t)p 1294 855 46 4 v
1294 938 a Ff(3)2267 876 y Fi(\025)2320 828 y Fg([1])2320
900 y(1)p Fb(;)p Fh(\000)p Fg(1)2469 876 y Ff(\()p Fi(t)p
Ff(\))g(=)2710 814 y Fi(t)p 2704 855 V 2704 938 a Ff(2)3455
876 y Fc(\(40\))912 1090 y Fi(\025)965 1042 y Fg([2])965
1115 y(0)p Fb(;)p Fg(1)1059 1090 y Ff(\()p Fi(t)p Ff(\))g(=)1294
1028 y(3)21 b Fe(\000)f Fi(t)p 1294 1069 190 4 v 1366
1152 a Ff(2)2322 1090 y Fi(\025)2375 1042 y Fg([2])2375
1115 y(0)p Fb(;)p Fg(0)2469 1090 y Ff(\()p Fi(t)p Ff(\))26
b(=)2704 1028 y(2)21 b Fe(\000)f Fi(t)p 2704 1069 V 2776
1152 a Ff(2)3455 1090 y Fc(\(41\))912 1304 y Fi(\025)965
1256 y Fg([2])965 1329 y(1)p Fb(;)p Fg(1)1059 1304 y
Ff(\()p Fi(t)p Ff(\))26 b(=)1294 1243 y Fi(t)20 b Fe(\000)g
Ff(1)p 1294 1283 V 1366 1367 a(2)2322 1304 y Fi(\025)2375
1256 y Fg([2])2375 1329 y(1)p Fb(;)p Fg(0)2469 1304 y
Ff(\()p Fi(t)p Ff(\))26 b(=)2710 1243 y Fi(t)p 2704 1283
46 4 v 2704 1367 a Ff(2)3455 1304 y Fc(\(42\))912 1498
y Fi(\025)965 1450 y Fg([3])965 1522 y(0)p Fb(;)p Fg(1)1059
1498 y Ff(\()p Fi(t)p Ff(\))g(=)f(2)c Fe(\000)f Fi(t)848
b(\025)2375 1450 y Fg([3])2375 1522 y(1)p Fb(;)p Fg(1)2469
1498 y Ff(\()p Fi(t)p Ff(\))26 b(=)f Fi(t)20 b Fe(\000)g
Ff(1)572 b Fc(\(43\))916 1780 y Fi(b)955 1732 y Fg([0])955
1805 y Fh(\000)p Fg(2)1075 1780 y Ff(=)1171 1636 y Fa( )1237
1724 y Ff(4)1237 1837 y(4)1282 1636 y Fa(!)2297 1780
y Fi(b)2336 1732 y Fg([0])2336 1805 y Fh(\000)p Fg(1)2455
1780 y Ff(=)2551 1636 y Fa( )2617 1724 y Ff(0)2617 1837
y(4)2662 1636 y Fa(!)3455 1780 y Fc(\(44\))932 2062 y
Fi(b)971 2015 y Fg([0])971 2087 y(0)1075 2062 y Ff(=)1171
1919 y Fa( )1237 2006 y Ff(0)1237 2119 y(0)1282 1919
y Fa(!)2312 2062 y Fi(b)2351 2015 y Fg([0])2351 2087
y(1)2455 2062 y Ff(=)2551 1919 y Fa( )2617 2006 y Ff(4)2617
2119 y(0)2662 1919 y Fa(!)3455 2062 y Fc(\(45\))932 2345
y Fi(b)971 2297 y Fg([1])971 2370 y(1)1075 2345 y Ff(=)1171
2201 y Fa( )1237 2288 y Ff(1)1237 2401 y(4)1282 2201
y Fa(!)2312 2345 y Fi(b)2351 2297 y Fg([1])2351 2370
y(0)2455 2345 y Ff(=)2551 2201 y Fa( )2617 2288 y Ff(0)2617
2401 y(2)2662 2201 y Fa(!)3455 2345 y Fc(\(46\))916 2627
y Fi(b)955 2579 y Fg([1])955 2652 y Fh(\000)p Fg(1)1075
2627 y Ff(=)1171 2483 y Fa( )1237 2570 y Ff(1)1237 2683
y(0)1282 2483 y Fa(!)2312 2627 y Fi(b)2351 2579 y Fg([2])2351
2652 y(1)2455 2627 y Ff(=)2551 2483 y Fa( )2617 2570
y Ff(0)p Fi(:)p Ff(25)2640 2683 y(2)p Fi(:)p Ff(5)2779
2483 y Fa(!)3455 2627 y Fc(\(47\))932 2909 y Fi(b)971
2861 y Fg([2])971 2934 y(0)1075 2909 y Ff(=)1171 2765
y Fa( )1237 2853 y Ff(0)p Fi(:)p Ff(25)1259 2966 y(1)p
Fi(:)p Ff(5)1398 2765 y Fa(!)2312 2909 y Fi(b)2351 2861
y Fg([3])2351 2934 y(1)2455 2909 y Ff(=)2551 2765 y Fa( )2617
2853 y Ff(0)p Fi(:)p Ff(25)2675 2966 y(2)2779 2765 y
Fa(!)3455 2909 y Fc(\(48\))1408 4576 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 142.2638  0 -28.45276  0 ArrowA CP 4 2
roll ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch
def /xStart exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq false
and exch 2 lt true and or { /viceversa -28.45276  142.2638  gt { true
}{ false } ifelse def /epsilon 0.01 def /minTickline -56.90552  def
/maxTickline 170.71655  def /dT 1864680 abs 65536 div viceversa { neg
} if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT
0 def } ifelse -56.90549 170.71646 /tickend exch def /tickstart exch
def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor {
0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke { 0 setlinecap [  5.0  3.0 ] -2 0 add   dup 0 gt { /a .5
def PathLength exch div } { pop /a 1 def PathLength } ifelse /b ED
dup /X ED 0 get /y ED /z 0 X {add} forall def b a .5 sub 2 mul y mul
sub z Div round z mul a .5 sub 2 mul y mul add b exch Div /z ED false
X { z mul } forall X astore {0 gt or} forall { X 1 a sub y mul } {
[ 1 0 ] 0 } ifelse setdash stroke  stroke} def /subLSstroke { 0 setlinecap
stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def logLines
{ gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT dx log mul
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT
dx log mul add def x abs MinValue abs le { false { x minTickline  moveto
x maxTickline  lineto } { x tickstart STsize mul  moveto x tickend
STsize mul  lineto } ifelse } if } for /dsubT 0 def subTwidth SLW subTColor
subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick
tickstart STsize mul  moveto cntsubTick tickend STsize mul  lineto
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart  moveto cntTick tickend  lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.95999 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside {
} def   /showOrigin true def 0 170.71655  0 -56.90552  ArrowA CP 4
2 roll ArrowB /yEnd exch def /xEnd exch def xEnd yEnd L /yStart exch
def /xStart exch def 0 setlinecap stroke  stroke 0 dup 2 mod 0 eq true
and exch 2 lt false and or { /viceversa -56.90552  170.71655  gt {
true }{ false } ifelse def /epsilon 0.01 def /minTickline -28.45276
 def /maxTickline 142.2638  def /dT 1864680 abs 65536 div viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -28.45274 142.26372 /tickend exch def /tickstart
exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor
{ 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke { 0 setlinecap [  5.0  3.0 ] -2 0 add   dup 0 gt { /a .5
def PathLength exch div } { pop /a 1 def PathLength } ifelse /b ED
dup /X ED 0 get /y ED /z 0 X {add} forall def b a .5 sub 2 mul y mul
sub z Div round z mul a .5 sub 2 mul y mul add b exch Div /z ED false
X { z mul } forall X astore {0 gt or} forall { X 1 a sub y mul } {
[ 1 0 ] 0 } ifelse setdash stroke   stroke} def /subLSstroke { 0 setlinecap
stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch def logLines
{ gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT dx log mul
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT
dx log mul add def x abs MinValue abs le { false { x minTickline exch
moveto x maxTickline exch lineto } { x tickstart STsize mul exch moveto
x tickend STsize mul exch lineto } ifelse } if } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if end
 
@endspecial
1085 4368 a Ff(1)1085 4132 y(2)1085 3896 y(3)1085 3659
y(4)1085 3423 y(5)1014 4837 y Fe(\000)p Ff(1)1014 5073
y Fe(\000)p Ff(2)1621 5147 y(1)192 b(2)f(3)g(4)-1261
b Fe(\000)p Ff(1)1408 4576 y
 tx@Dict begin { 142.2638 0.0 } PutCoor PutBegin  end
 1408 4576 a 1408 4576 a
 tx@Dict begin { 5.0 5.7794 4.71451 0.0 0.  Uput UUput } PutCoor PutBegin
 end

1408 4576 a 1384 4595 a Fc(x)1408 4576 y
 tx@Dict begin  PutEnd  end
 1408 4576 a
1408 4576 a
 tx@Dict begin  PutEnd  end
 1408 4576 a 1408 4576 a
 tx@Dict begin { 0.0 170.71655 } PutCoor PutBegin  end
 1408 4576 a 1408
4576 a
 tx@Dict begin { 5.0 5.7794 4.71451 2.12914 90.  Uput UUput } PutCoor
PutBegin  end
 1408 4576 a 1384 4587 a Fc(y)1408 4576 y
 tx@Dict begin  PutEnd  end
 1408
4576 a 1408 4576 a
 tx@Dict begin  PutEnd  end
 1408 4576 a 0 TeXcolorgray 0 TeXcolorgray
1858 5443 a Fc(6)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
